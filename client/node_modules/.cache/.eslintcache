[{"C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\index.js":"1","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\App.js":"2","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Authentication\\Account.js":"3","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Authentication\\Login.js":"4","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Dashboard\\Dashboard.js":"5","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Authentication\\NewPassword.js":"6","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Authentication\\ForgetPassword.js":"7","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Dashboard\\NavBar.js":"8","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Authentication\\ChangePassword.js":"9","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Dashboard\\StudentList.js":"10","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Dashboard\\Classes\\Classes.js":"11","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Dashboard\\LatestAttendance\\LatestAttendance.js":"12","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Dashboard\\StudentMatters\\StudentMatters.js":"13","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Dashboard\\LatestAttendance\\SelectedAttendance.js":"14","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Dashboard\\Classes\\AttendanceList.js":"15","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Authentication\\UserPool.js":"16","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\subscription.js":"17","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\serviceWorkerRegistration.js":"18"},{"size":670,"mtime":1623568151920,"results":"19","hashOfConfig":"20"},{"size":2770,"mtime":1623677236147,"results":"21","hashOfConfig":"20"},{"size":2929,"mtime":1623033649089,"results":"22","hashOfConfig":"20"},{"size":5520,"mtime":1618752123976,"results":"23","hashOfConfig":"20"},{"size":6362,"mtime":1623567799508,"results":"24","hashOfConfig":"20"},{"size":3472,"mtime":1617894460645,"results":"25","hashOfConfig":"20"},{"size":4782,"mtime":1623033665337,"results":"26","hashOfConfig":"20"},{"size":3469,"mtime":1620565779642,"results":"27","hashOfConfig":"20"},{"size":2326,"mtime":1620564493694,"results":"28","hashOfConfig":"20"},{"size":2827,"mtime":1622130703952,"results":"29","hashOfConfig":"20"},{"size":4971,"mtime":1622446411465,"results":"30","hashOfConfig":"20"},{"size":6113,"mtime":1623399345290,"results":"31","hashOfConfig":"20"},{"size":8634,"mtime":1622446893549,"results":"32","hashOfConfig":"20"},{"size":13024,"mtime":1623049318522,"results":"33","hashOfConfig":"20"},{"size":16378,"mtime":1622446445497,"results":"34","hashOfConfig":"20"},{"size":223,"mtime":1623034721111,"results":"35","hashOfConfig":"20"},{"size":2523,"mtime":1623506474551,"results":"36","hashOfConfig":"20"},{"size":5586,"mtime":1623677299478,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"4ikgd",{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\index.js",[],["78","79"],"C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\App.js",["80","81","82","83"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { AccountContext } from \"./components/Authentication/Account\";\n\nimport Login from \"./components/Authentication/Login\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport AWS from \"aws-sdk\";\n\nconst App = () => {\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const { getSession } = useContext(AccountContext);\n\n  useEffect(() => {\n    getSession().then(() => {\n      setTimeout(() => {\n        setLoggedIn(true);\n      }, 1500);\n    });\n  }, []);\n\n  AWS.config.update({\n    region: \"ap-southeast-1\",\n    accessKeyId: \"AKIAVT4QMHKTJR6VFAEN\",\n    secretAccessKey: \"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\",\n  });\n\n  const dynamodbstreams = new AWS.DynamoDBStreams();\n\n  const getDBStreamRecords = () => {\n    const params = {\n      ShardIterator:\n        \"arn:aws:dynamodb:ap-southeast-1:386312977062:table/March/stream/2021-06-13T13:24:55.722|1|AAAAAAAAAAE7FIFVrEzAldfKnuNBQQjHUzWY+O/I9cLr4Qpy23Jh1koVYK/td+Qh9VPsB2D86O78eXsF9VK3o8HB4FH77tXbIUWQrftPG7nJRs2j9FeJJQ6VHgxq/FXDakMNPNadRs61NgYCdrB4iXxj0OD1Yt9pdSlq8unZ9ct+McOo4r1e1wp9NQh9yBX3vEO7V+rf7LGykWC/BpHdC+7A7C0RKdbJZgKSFu0jk6sUPstLon0f6SnU9vfHfbAopkXy+Jar/lhcYkH1n0KbRQPkwpf8ULIqCLsuHTE3gjVuTDZsywma31tAO2TMGlKK3ZmqVkYS4f4ruSJ5++8n4KfnKyhkzDB54iHhHLUFtPtZpRx3W3ipQjhdNX7UTMxglCru8A6qw1kKdqmzGzcI5gaBmxQJwAsxNJ7QN8QM/lAFQ2gnfqesvmu+h5MBoI/FScybA4Jvg8qWv3mq48aC29r5R5nQANcGb/seZaAnZcUbxGDMFgkcmNhLX2Z0LgxG7uv9VqX7TSl/2QPaIqT72z9IB6ka9+8BYo0T9ECKneRtj8+3CVWOMGj9tH3u2EHrYEHgRILqCpJRC77vcjH/BAxvKJlKdO0NVjZVN7xpefrasW6l6vxd40yUy/MfElRid+2acY+sxHaZiVEPurG187tKXelMhW7RT7KZOIWVNsUNzuZhr2XqbImteNC40Fr9AJ42raag1L9n8AAJo96jDhSwJF80WcPPSYrI72CZCs5aykNMrPvFiA==\",\n    };\n\n    dynamodbstreams.getRecords(params, (err, data) => {\n      if (data) console.log(data, data.stack);\n      else console.log(err);\n    });\n  };\n\n  const getDBStreamARNs = () => {\n    const params = {\n      TableName: \"March\",\n    };\n\n    dynamodbstreams.listStreams(params, (err, data) => {\n      if (data) console.log(data, data.stack);\n      else console.log(err);\n    });\n  };\n\n  // Expire every 15 minutes\n  const getDBStreamShardIterator = () => {\n    const params = {\n      ShardId: \"shardId-00000001623590696074-6206a3f3\",\n      ShardIteratorType: \"LATEST\",\n      StreamArn:\n        \"arn:aws:dynamodb:ap-southeast-1:386312977062:table/March/stream/2021-06-13T13:24:55.722\",\n    };\n\n    const shard = dynamodbstreams.getShardIterator(params, (data, err) => {\n      if (data) {\n        //console.log(data, data.stack);\n      } //else console.log(err);\n    });\n\n    return shard.response;\n  };\n\n  //var shard = getDBStreamShardIterator();\n\n  //console.log(JSON.parse(shard[0]));\n\n  return <>{loggedIn ? <Dashboard /> : <Login />}</>;\n};\n\nexport default App;\n","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Authentication\\Account.js",[],"C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Authentication\\Login.js",[],"C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Dashboard\\Dashboard.js",["84","85","86","87","88"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\n\r\nimport NavBar from \"./NavBar\";\r\nimport LatestAttendance from \"./LatestAttendance/LatestAttendance\";\r\nimport StudentMatters from \"./StudentMatters/StudentMatters\";\r\nimport Classes from \"./Classes/Classes\";\r\n\r\nconst Dashboard = () => {\r\n  const [classes, setClasses] = useState([]);\r\n  const [attendance, setAttendance] = useState([]);\r\n  const [temperatureMatter, setTemperatureMatter] = useState([]);\r\n  const [lowAttendanceMatter, setlowAttendanceMatter] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [updateData, setUpdateData] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (updateData) {\r\n      getData();\r\n      //fetch(\"/notifications/push\");\r\n    }\r\n  }, [updateData]);\r\n\r\n  const getData = async () => {\r\n    let classes = [];\r\n    let classArray = [];\r\n    let studentArray = [];\r\n    let dataArray = [];\r\n    let dateArray = [];\r\n    let attendance = [];\r\n    let temperatureMatter = [];\r\n    let lowAttendanceMatter = [];\r\n    let absentArray = [];\r\n\r\n    await fetch(\"/drive/api\");\r\n\r\n    await fetch(\"/sheet/api\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        classes = res.sheets;\r\n        res.sheets.forEach((result) => {\r\n          classArray.push(result.properties.title);\r\n        });\r\n      });\r\n\r\n    for (const classTitle of classArray) {\r\n      let studentList = [];\r\n      await axios.post(\"/sheet/class\", classTitle);\r\n\r\n      await fetch(\"/sheet/student\") // Get Student List\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          studentArray = res;\r\n        });\r\n\r\n      await fetch(\"/aws/api\") // Get Student Attendance\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          dataArray = res;\r\n        });\r\n\r\n      // Sort to latest date\r\n      dataArray.sort((a, b) => {\r\n        return new Date(b.Date) - new Date(a.Date);\r\n      });\r\n\r\n      // Data formation\r\n      const latestAttendanceData = dataArray.filter((res) =>\r\n        res.Date.includes(dataArray[0].Date.split(\" \")[0])\r\n      );\r\n\r\n      if (dataArray.length < 1 || dataArray === undefined) {\r\n        // do nothing\r\n      } else {\r\n        const date = dataArray[0].Date.split(\" \")[0];\r\n        const totalStudents = studentArray.length;\r\n        let presentCount = 0;\r\n\r\n        studentArray.forEach((res) => {\r\n          latestAttendanceData.forEach((student) => {\r\n            if (res[0].includes(student.Name)) {\r\n              presentCount = presentCount + 1;\r\n            }\r\n          });\r\n          // Convert array to object\r\n          studentList.push({\r\n            Name: res[0],\r\n            ID: res[1],\r\n            Class: classTitle,\r\n          });\r\n        });\r\n\r\n        // Class, Date, Present, Total Students\r\n        attendance.push({\r\n          Class: classTitle,\r\n          Date: date,\r\n          Present: presentCount,\r\n          Total_Students: totalStudents,\r\n        });\r\n\r\n        // Student Matters (High Temperature)\r\n        latestAttendanceData.forEach((student) => {\r\n          if (student.Temperature >= 37.5) {\r\n            temperatureMatter.push(student);\r\n          }\r\n        });\r\n\r\n        // Student Matters (Low Attendance)\r\n        dataArray.forEach((data) => {\r\n          dateArray.push(data.Date.split(\" \")[0]);\r\n        });\r\n\r\n        dateArray = [...new Set(dateArray)]; // Remove Duplicates\r\n\r\n        dateArray.forEach((date) => {\r\n          let attendance = [];\r\n          let absentList = [];\r\n\r\n          attendance = dataArray.filter((res) => res.Date.includes(date));\r\n\r\n          if (attendance.length !== 0) {\r\n            absentList = studentList.filter(\r\n              ({ Name: id1 }) =>\r\n                !attendance.some(({ Name: id2 }) => id2 === id1)\r\n            );\r\n            absentArray = [...absentArray, ...absentList];\r\n          }\r\n        });\r\n\r\n        let absentChecker = [];\r\n        absentChecker = absentArray.filter((res) =>\r\n          res.Class.includes(classTitle)\r\n        );\r\n\r\n        lowAttendanceMatter = [\r\n          ...lowAttendanceMatter,\r\n          ...absentChecker.reduce(function (acc, el, i, arr) {\r\n            if (arr.indexOf(el) !== i && acc.indexOf(el) < 0) acc.push(el);\r\n            return acc;\r\n          }, []),\r\n        ];\r\n      }\r\n    }\r\n\r\n    setClasses(classes); // Class Component\r\n    setAttendance(attendance); // LatestAttendance Component\r\n    setTemperatureMatter(temperatureMatter); // Student Matter Component\r\n    setlowAttendanceMatter(lowAttendanceMatter); // Student Matter Component\r\n    setIsLoading(false);\r\n    setUpdateData(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Container className=\"text-center dashboard\" fluid>\r\n        <Row>\r\n          <Col>\r\n            <h3\r\n              style={{\r\n                fontSize: \"calc(22px + 2vw)\",\r\n                fontWeight: \"bold\",\r\n                color: \"#535353\",\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              Your Dashboard\r\n            </h3>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col xl={6} lg={12} md={12} sm={12} xs={12}>\r\n            <Row style={{ marginBottom: \"10px\" }}>\r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                <LatestAttendance\r\n                  attendance={attendance}\r\n                  isLoading={isLoading}\r\n                  setUpdateData={setUpdateData}\r\n                />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row style={{ marginBottom: \"10px\" }}>\r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                <StudentMatters\r\n                  temperatureMatter={temperatureMatter}\r\n                  lowAttendanceMatter={lowAttendanceMatter}\r\n                  isLoading={isLoading}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col\r\n            xl={6}\r\n            lg={12}\r\n            md={12}\r\n            sm={12}\r\n            xs={12}\r\n            style={{ marginBottom: \"10px\" }}\r\n          >\r\n            <Classes\r\n              classes={classes}\r\n              isLoading={isLoading}\r\n              setUpdateData={setUpdateData}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Authentication\\NewPassword.js",[],"C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Authentication\\ForgetPassword.js",[],"C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Dashboard\\NavBar.js",[],"C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Authentication\\ChangePassword.js",[],"C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Dashboard\\StudentList.js",[],"C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Dashboard\\Classes\\Classes.js",[],"C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Dashboard\\LatestAttendance\\LatestAttendance.js",[],"C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Dashboard\\StudentMatters\\StudentMatters.js",[],"C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Dashboard\\LatestAttendance\\SelectedAttendance.js",[],"C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Dashboard\\Classes\\AttendanceList.js",[],"C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\components\\Authentication\\UserPool.js",[],"C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\subscription.js",["89"],"const convertedVapidKey = urlBase64ToUint8Array(\r\n  \"BDwtsxZpmUHSnFq5VViqOGkrcZLO2HxeSZPdVyA3upYBhVghSJMNkiZX5KFX5KnrheGyLCAX8-Lh1OtLaEGWNbI\"\r\n);\r\n\r\nfunction urlBase64ToUint8Array(base64String) {\r\n  const padding = \"=\".repeat((4 - (base64String.length % 4)) % 4);\r\n  // eslint-disable-next-line\r\n  const base64 = (base64String + padding)\r\n    .replace(/\\-/g, \"+\")\r\n    .replace(/_/g, \"/\");\r\n\r\n  const rawData = window.atob(base64);\r\n  const outputArray = new Uint8Array(rawData.length);\r\n\r\n  for (let i = 0; i < rawData.length; ++i) {\r\n    outputArray[i] = rawData.charCodeAt(i);\r\n  }\r\n  return outputArray;\r\n}\r\n\r\nfunction sendSubscription(subscription) {\r\n  //console.log(JSON.stringify(subscription));\r\n  return fetch(\"/notifications/subscribe\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(subscription),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n}\r\n\r\nexport function subscribeUser() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(function (registration) {\r\n        if (!registration.pushManager) {\r\n          console.log(\"Push manager unavailable.\");\r\n          return;\r\n        }\r\n\r\n        registration.pushManager\r\n          .getSubscription()\r\n          .then(function (existedSubscription) {\r\n            if (existedSubscription === null) {\r\n              console.log(\"No subscription detected, make a request.\");\r\n              registration.pushManager\r\n                .subscribe({\r\n                  applicationServerKey: convertedVapidKey,\r\n                  userVisibleOnly: true,\r\n                })\r\n                .then(function (newSubscription) {\r\n                  //console.log(\"New subscription added.\");\r\n                  sendSubscription(newSubscription);\r\n                })\r\n                .catch(function (e) {\r\n                  if (Notification.permission !== \"granted\") {\r\n                    console.log(\"Permission was not granted.\");\r\n                  } else {\r\n                    console.error(\r\n                      \"An error ocurred during the subscription process.\",\r\n                      e\r\n                    );\r\n                  }\r\n                });\r\n            } else {\r\n              console.log(\"Existed subscription detected.\");\r\n              sendSubscription(existedSubscription);\r\n            }\r\n          });\r\n      })\r\n      .catch(function (e) {\r\n        console.error(\r\n          \"An error ocurred during Service Worker registration.\",\r\n          e\r\n        );\r\n      });\r\n  }\r\n}\r\n","C:\\School Stuff\\Modules\\2021 Sem One\\Final Year Project\\Temperature Monitoring And Attendance Taking System\\Web Interface Prototype\\raspitar\\client\\src\\serviceWorkerRegistration.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":19,"column":6,"nodeType":"96","endLine":19,"endColumn":8,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":29,"column":9,"nodeType":"100","messageId":"101","endLine":29,"endColumn":27},{"ruleId":"98","severity":1,"message":"102","line":41,"column":9,"nodeType":"100","messageId":"101","endLine":41,"endColumn":24},{"ruleId":"98","severity":1,"message":"103","line":53,"column":9,"nodeType":"100","messageId":"101","endLine":53,"endColumn":33},{"ruleId":"104","severity":1,"message":"105","line":53,"column":15,"nodeType":"106","messageId":"107","endLine":55,"endColumn":10},{"ruleId":"104","severity":1,"message":"108","line":59,"column":15,"nodeType":"106","messageId":"107","endLine":61,"endColumn":10},{"ruleId":"104","severity":1,"message":"108","line":69,"column":53,"nodeType":"106","messageId":"107","endLine":70,"endColumn":59},{"ruleId":"104","severity":1,"message":"109","line":110,"column":27,"nodeType":"106","messageId":"107","endLine":112,"endColumn":10},{"ruleId":"104","severity":1,"message":"110","line":116,"column":27,"nodeType":"106","messageId":"107","endLine":129,"endColumn":10},{"ruleId":"111","severity":1,"message":"112","line":9,"column":15,"nodeType":"113","messageId":"114","endLine":9,"endColumn":16,"suggestions":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSession'. Either include it or remove the dependency array.","ArrayExpression",["118"],"no-unused-vars","'getDBStreamRecords' is assigned a value but never used.","Identifier","unusedVar","'getDBStreamARNs' is assigned a value but never used.","'getDBStreamShardIterator' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'studentArray'.","ArrowFunctionExpression","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'dataArray'.","Function declared in a loop contains unsafe references to variable(s) 'dateArray'.","Function declared in a loop contains unsafe references to variable(s) 'dataArray', 'absentArray', 'absentArray'.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["119","120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"messageId":"123","fix":"124","desc":"125"},{"messageId":"126","fix":"127","desc":"128"},"Update the dependencies array to be: [getSession]",{"range":"129","text":"130"},"removeEscape",{"range":"131","text":"132"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"133","text":"134"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[533,535],"[getSession]",[353,354],"",[353,353],"\\"]