{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\src\\\\components\\\\ForgetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { CognitoUser } from \"amazon-cognito-identity-js\";\nimport Pool from \"../UserPool\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgetPassword = () => {\n  _s();\n\n  const [stage, setStage] = useState(1); // 1 = email stage, 2 = code stage\n\n  const [email, setEmail] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const getUser = () => {\n    return new CognitoUser({\n      Username: email.toLowerCase(),\n      Pool\n    });\n  };\n\n  const sendCode = event => {\n    event.preventDefault();\n    getUser().forgotPassword({\n      onSuccess: data => {\n        console.log(\"onSuccess:\", data);\n      },\n      onFailure: err => {\n        console.error(\"onFailure:\", err);\n      },\n      inputVerificationCode: data => {\n        console.log(\"Input code:\", data);\n        setStage(2);\n      }\n    });\n  };\n\n  const resetPassword = event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      console.error(\"Passwords are not the same\");\n      return;\n    }\n\n    getUser().confirmPassword(code, password, {\n      onSuccess: data => {\n        console.log(\"onSuccess:\", data);\n      },\n      onFailure: err => {\n        console.error(\"onFailure:\", err);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [stage === 1 && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendCode,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send verification code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), stage === 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: resetPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: code,\n        onChange: event => setCode(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: confirmPassword,\n        onChange: event => setConfirmPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Change password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgetPassword, \"OnbLkQb9X/Lg5Qkk+ERqZapP/Hk=\");\n\n_c = ForgetPassword;\nexport default ForgetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/src/components/ForgetPassword.js"],"names":["React","useState","CognitoUser","Pool","ForgetPassword","stage","setStage","email","setEmail","code","setCode","password","setPassword","confirmPassword","setConfirmPassword","getUser","Username","toLowerCase","sendCode","event","preventDefault","forgotPassword","onSuccess","data","console","log","onFailure","err","error","inputVerificationCode","resetPassword","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { CognitoUser } from \"amazon-cognito-identity-js\";\r\nimport Pool from \"../UserPool\";\r\n\r\nconst ForgetPassword = () => {\r\n  const [stage, setStage] = useState(1); // 1 = email stage, 2 = code stage\r\n  const [email, setEmail] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const getUser = () => {\r\n    return new CognitoUser({\r\n      Username: email.toLowerCase(),\r\n      Pool,\r\n    });\r\n  };\r\n\r\n  const sendCode = (event) => {\r\n    event.preventDefault();\r\n\r\n    getUser().forgotPassword({\r\n      onSuccess: (data) => {\r\n        console.log(\"onSuccess:\", data);\r\n      },\r\n      onFailure: (err) => {\r\n        console.error(\"onFailure:\", err);\r\n      },\r\n      inputVerificationCode: (data) => {\r\n        console.log(\"Input code:\", data);\r\n        setStage(2);\r\n      },\r\n    });\r\n  };\r\n\r\n  const resetPassword = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      console.error(\"Passwords are not the same\");\r\n      return;\r\n    }\r\n\r\n    getUser().confirmPassword(code, password, {\r\n      onSuccess: (data) => {\r\n        console.log(\"onSuccess:\", data);\r\n      },\r\n      onFailure: (err) => {\r\n        console.error(\"onFailure:\", err);\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {stage === 1 && (\r\n        <form onSubmit={sendCode}>\r\n          <input\r\n            value={email}\r\n            onChange={(event) => setEmail(event.target.value)}\r\n          />\r\n          <button type=\"submit\">Send verification code</button>\r\n        </form>\r\n      )}\r\n\r\n      {stage === 2 && (\r\n        <form onSubmit={resetPassword}>\r\n          <input\r\n            value={code}\r\n            onChange={(event) => setCode(event.target.value)}\r\n          />\r\n          <input\r\n            value={password}\r\n            onChange={(event) => setPassword(event.target.value)}\r\n          />\r\n          <input\r\n            value={confirmPassword}\r\n            onChange={(event) => setConfirmPassword(event.target.value)}\r\n          />\r\n          <button type=\"submit\">Change password</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgetPassword;\r\n"]},"metadata":{},"sourceType":"module"}