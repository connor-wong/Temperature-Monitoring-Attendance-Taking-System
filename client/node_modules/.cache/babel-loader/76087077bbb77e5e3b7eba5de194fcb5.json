{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\src\\\\components\\\\Authentication\\\\NewPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { AccountContext } from \"./Account\";\nimport { Row, Col, Container, Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPassword = () => {\n  _s();\n\n  const {\n    user,\n    userAttr\n  } = useContext(AccountContext);\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  console.log(\"user: \", user);\n  console.log(\"userAttr: \", userAttr);\n\n  const changePassword = event => {\n    event.preventDefault(); //delete userAttr.email_verified;\n\n    if (password !== confirmPassword) {\n      console.error(\"Passwords are not the same\");\n      return;\n    } else {\n      user.completeNewPasswordChallenge(password, userAttr, {\n        onSuccess: result => {\n          console.log(\"NEW PASSWORD COMPLETED: \");\n          console.log(result);\n        },\n        onFailure: err => {\n          console.log(err);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"newpassword\",\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontSize: \"calc(1rem + 2vw)\",\n              fontWeight: \"bold\"\n            },\n            children: \"Logging in for the first time?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontSize: \"calc(1rem + 1vw)\",\n              fontWeight: \"normal\",\n              color: \"#848484\"\n            },\n            children: \"Set your new password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: changePassword,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicNewPassword\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                value: password,\n                placeholder: \"New Password\",\n                onChange: event => setPassword(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicConfirmPassword\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                value: confirmPassword,\n                placeholder: \"Confirm Password\",\n                onChange: event => setConfirmPassword(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              style: {\n                width: \"100%\",\n                backgroundColor: \"#3241c9\",\n                fontSize: \"22px\",\n                marginBottom: \"10px\"\n              },\n              children: \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewPassword, \"MClnYuVJ4iTxEqT9d1UbPFhxXGE=\");\n\n_c = NewPassword;\nexport default NewPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPassword\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/src/components/Authentication/NewPassword.js"],"names":["React","useState","useContext","AccountContext","Row","Col","Container","Form","Button","NewPassword","user","userAttr","password","setPassword","confirmPassword","setConfirmPassword","console","log","changePassword","event","preventDefault","error","completeNewPasswordChallenge","onSuccess","result","onFailure","err","fontSize","fontWeight","color","target","value","width","backgroundColor","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { AccountContext } from \"./Account\";\r\n\r\nimport { Row, Col, Container, Form, Button } from \"react-bootstrap\";\r\n\r\nconst NewPassword = () => {\r\n  const { user, userAttr } = useContext(AccountContext);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  console.log(\"user: \", user);\r\n  console.log(\"userAttr: \", userAttr);\r\n\r\n  const changePassword = (event) => {\r\n    event.preventDefault();\r\n\r\n    //delete userAttr.email_verified;\r\n\r\n    if (password !== confirmPassword) {\r\n      console.error(\"Passwords are not the same\");\r\n      return;\r\n    } else {\r\n      user.completeNewPasswordChallenge(password, userAttr, {\r\n        onSuccess: (result) => {\r\n          console.log(\"NEW PASSWORD COMPLETED: \");\r\n          console.log(result);\r\n        },\r\n        onFailure: (err) => {\r\n          console.log(err);\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"newpassword\" fluid>\r\n        <Row>\r\n          <Col>\r\n            <h3\r\n              style={{\r\n                fontSize: \"calc(1rem + 2vw)\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              Logging in for the first time?\r\n            </h3>\r\n            <h3\r\n              style={{\r\n                fontSize: \"calc(1rem + 1vw)\",\r\n                fontWeight: \"normal\",\r\n                color: \"#848484\",\r\n              }}\r\n            >\r\n              Set your new password\r\n            </h3>\r\n            <Form onSubmit={changePassword}>\r\n              <Form.Group controlId=\"formBasicNewPassword\">\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  value={password}\r\n                  placeholder=\"New Password\"\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicConfirmPassword\">\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  value={confirmPassword}\r\n                  placeholder=\"Confirm Password\"\r\n                  onChange={(event) => setConfirmPassword(event.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Button\r\n                type=\"submit\"\r\n                style={{\r\n                  width: \"100%\",\r\n                  backgroundColor: \"#3241c9\",\r\n                  fontSize: \"22px\",\r\n                  marginBottom: \"10px\",\r\n                }}\r\n              >\r\n                Reset Password\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPassword;\r\n"]},"metadata":{},"sourceType":"module"}