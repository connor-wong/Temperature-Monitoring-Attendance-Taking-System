{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport { PageContextConsumer } from './Page';\nexport const PageSidebarContext = React.createContext({\n  isNavOpen: true\n});\nexport const PageSidebar = _a => {\n  var {\n    className = '',\n    nav,\n    isNavOpen = true,\n    theme = 'dark'\n  } = _a,\n      props = __rest(_a, [\"className\", \"nav\", \"isNavOpen\", \"theme\"]);\n\n  return React.createElement(PageContextConsumer, null, ({\n    isManagedSidebar,\n    isNavOpen: managedIsNavOpen\n  }) => {\n    const navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;\n    return React.createElement(\"div\", Object.assign({\n      id: \"page-sidebar\",\n      className: css(styles.pageSidebar, theme === 'light' && styles.modifiers.light, navOpen && styles.modifiers.expanded, !navOpen && styles.modifiers.collapsed, className),\n      \"aria-hidden\": !navOpen\n    }, props), React.createElement(\"div\", {\n      className: css(styles.pageSidebarBody)\n    }, React.createElement(PageSidebarContext.Provider, {\n      value: {\n        isNavOpen: navOpen\n      }\n    }, nav)));\n  });\n};\nPageSidebar.displayName = 'PageSidebar';","map":{"version":3,"sources":["../../../../src/components/Page/PageSidebar.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,mDAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,SAAS,mBAAT,QAAoC,QAApC;AAsBA,OAAO,MAAM,kBAAkB,GAAG,KAAK,CAAC,aAAN,CAAsD;AACtF,EAAA,SAAS,EAAE;AAD2E,CAAtD,CAA3B;AAIP,OAAO,MAAM,WAAW,GAA+C,EAAD,IAM/C;MANgD;AACrE,IAAA,SAAS,GAAG,EADyD;AAErE,IAAA,GAFqE;AAGrE,IAAA,SAAS,GAAG,IAHyD;AAIrE,IAAA,KAAK,GAAG;AAJ6D,MAIvD,E;MACX,KAAK,GAAA,MAAA,CAAA,EAAA,EAL6D,CAAA,WAAA,EAAA,KAAA,EAAA,WAAA,EAAA,OAAA,CAK7D,C;;AACc,SACtB,KAAA,CAAA,aAAA,CAAC,mBAAD,EAAoB,IAApB,EACG,CAAC;AAAE,IAAA,gBAAF;AAAoB,IAAA,SAAS,EAAE;AAA/B,GAAD,KAAwE;AACvE,UAAM,OAAO,GAAG,gBAAgB,GAAG,gBAAH,GAAsB,SAAtD;AAEA,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACE,MAAA,EAAE,EAAC,cADL;AAEE,MAAA,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,WADK,EAEZ,KAAK,KAAK,OAAV,IAAqB,MAAM,CAAC,SAAP,CAAiB,KAF1B,EAGZ,OAAO,IAAI,MAAM,CAAC,SAAP,CAAiB,QAHhB,EAIZ,CAAC,OAAD,IAAY,MAAM,CAAC,SAAP,CAAiB,SAJjB,EAKZ,SALY,CAFhB;AAQG,qBACY,CAAC;AAThB,KAAA,EAUM,KAVN,CAAA,EAYE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,eAAR;AAAnB,KAAA,EACE,KAAA,CAAA,aAAA,CAAC,kBAAkB,CAAC,QAApB,EAA4B;AAAC,MAAA,KAAK,EAAE;AAAE,QAAA,SAAS,EAAE;AAAb;AAAR,KAA5B,EAA6D,GAA7D,CADF,CAZF,CADF;AAkBD,GAtBH,CADsB;AAyBvB,CA/BM;AAgCP,WAAW,CAAC,WAAZ,GAA0B,aAA1B","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport { PageContextConsumer } from './Page';\nexport const PageSidebarContext = React.createContext({\n    isNavOpen: true\n});\nexport const PageSidebar = (_a) => {\n    var { className = '', nav, isNavOpen = true, theme = 'dark' } = _a, props = __rest(_a, [\"className\", \"nav\", \"isNavOpen\", \"theme\"]);\n    return (React.createElement(PageContextConsumer, null, ({ isManagedSidebar, isNavOpen: managedIsNavOpen }) => {\n        const navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;\n        return (React.createElement(\"div\", Object.assign({ id: \"page-sidebar\", className: css(styles.pageSidebar, theme === 'light' && styles.modifiers.light, navOpen && styles.modifiers.expanded, !navOpen && styles.modifiers.collapsed, className), \"aria-hidden\": !navOpen }, props),\n            React.createElement(\"div\", { className: css(styles.pageSidebarBody) },\n                React.createElement(PageSidebarContext.Provider, { value: { isNavOpen: navOpen } }, nav))));\n    }));\n};\nPageSidebar.displayName = 'PageSidebar';\n//# sourceMappingURL=PageSidebar.js.map"]},"metadata":{},"sourceType":"module"}