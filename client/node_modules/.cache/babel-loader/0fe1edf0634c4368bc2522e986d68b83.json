{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\src\\\\components\\\\Authentication\\\\Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\";\nimport Pool from \"../../UserPool\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountContext = /*#__PURE__*/createContext();\n\nconst Account = props => {\n  _s();\n\n  const [isFirstLogin, setIsFirstLogin] = useState(false);\n  const [login, setLogin] = useState(false);\n  const [user, setUser] = useState(\"\");\n  const [userAttr, setUserAttr] = useState(\"\");\n\n  const getSession = async () => await new Promise((resolve, reject) => {\n    const user = Pool.getCurrentUser();\n\n    if (user) {\n      user.getSession(async (err, session) => {\n        if (err) {\n          reject();\n        } else {\n          const attributes = await new Promise((resolve, reject) => {\n            user.getUserAttributes((err, attributes) => {\n              if (err) {\n                reject(err);\n              } else {\n                const results = {};\n\n                for (let attribute of attributes) {\n                  const {\n                    Name,\n                    Value\n                  } = attribute;\n                  results[Name] = Value;\n                }\n\n                resolve(results);\n              }\n            });\n          });\n          resolve({\n            user,\n            ...session,\n            ...attributes\n          });\n        }\n      });\n    } else {\n      reject();\n    }\n  });\n\n  const authenticate = async (Username, Password) => await new Promise((resolve, reject) => {\n    const user = new CognitoUser({\n      Username,\n      Pool\n    });\n    const authDetails = new AuthenticationDetails({\n      Username,\n      Password\n    });\n    user.authenticateUser(authDetails, {\n      onSuccess: data => {\n        console.log(\"onSuccess:\", data);\n        setLogin(true);\n        resolve(data);\n      },\n      onFailure: err => {\n        console.error(\"onFailure:\", err);\n        setLogin(false);\n        reject(err);\n      },\n      newPasswordRequired: data => {\n        console.log(\"newPasswordRequired:\", data);\n        setIsFirstLogin(true);\n        setUser(user);\n        setUserAttr(data);\n        resolve(data);\n      }\n    });\n  });\n\n  const logout = () => {\n    const user = Pool.getCurrentUser();\n\n    if (user) {\n      user.signOut();\n      window.location.reload(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AccountContext.Provider, {\n    value: {\n      authenticate,\n      getSession,\n      logout,\n      login,\n      isFirstLogin,\n      user,\n      userAttr\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Account, \"8TvkbIxH5hHr3xKXjE8fLzakj0A=\");\n\n_c = Account;\nexport { Account, AccountContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/src/components/Authentication/Account.js"],"names":["React","createContext","useState","CognitoUser","AuthenticationDetails","Pool","AccountContext","Account","props","isFirstLogin","setIsFirstLogin","login","setLogin","user","setUser","userAttr","setUserAttr","getSession","Promise","resolve","reject","getCurrentUser","err","session","attributes","getUserAttributes","results","attribute","Name","Value","authenticate","Username","Password","authDetails","authenticateUser","onSuccess","data","console","log","onFailure","error","newPasswordRequired","logout","signOut","window","location","reload","children"],"mappings":"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","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\";\r\nimport Pool from \"../../UserPool\";\r\n\r\nconst AccountContext = createContext();\r\n\r\nconst Account = (props) => {\r\n  const [isFirstLogin, setIsFirstLogin] = useState(false);\r\n  const [login, setLogin] = useState(false);\r\n  const [user, setUser] = useState(\"\");\r\n  const [userAttr, setUserAttr] = useState(\"\");\r\n\r\n  const getSession = async () =>\r\n    await new Promise((resolve, reject) => {\r\n      const user = Pool.getCurrentUser();\r\n      if (user) {\r\n        user.getSession(async (err, session) => {\r\n          if (err) {\r\n            reject();\r\n          } else {\r\n            const attributes = await new Promise((resolve, reject) => {\r\n              user.getUserAttributes((err, attributes) => {\r\n                if (err) {\r\n                  reject(err);\r\n                } else {\r\n                  const results = {};\r\n\r\n                  for (let attribute of attributes) {\r\n                    const { Name, Value } = attribute;\r\n                    results[Name] = Value;\r\n                  }\r\n\r\n                  resolve(results);\r\n                }\r\n              });\r\n            });\r\n\r\n            resolve({\r\n              user,\r\n              ...session,\r\n              ...attributes,\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        reject();\r\n      }\r\n    });\r\n\r\n  const authenticate = async (Username, Password) =>\r\n    await new Promise((resolve, reject) => {\r\n      const user = new CognitoUser({ Username, Pool });\r\n      const authDetails = new AuthenticationDetails({ Username, Password });\r\n\r\n      user.authenticateUser(authDetails, {\r\n        onSuccess: (data) => {\r\n          console.log(\"onSuccess:\", data);\r\n          setLogin(true);\r\n          resolve(data);\r\n        },\r\n\r\n        onFailure: (err) => {\r\n          console.error(\"onFailure:\", err);\r\n          setLogin(false);\r\n          reject(err);\r\n        },\r\n\r\n        newPasswordRequired: (data) => {\r\n          console.log(\"newPasswordRequired:\", data);\r\n          setIsFirstLogin(true);\r\n          setUser(user);\r\n          setUserAttr(data);\r\n\r\n          resolve(data);\r\n        },\r\n      });\r\n    });\r\n\r\n  const logout = () => {\r\n    const user = Pool.getCurrentUser();\r\n    if (user) {\r\n      user.signOut();\r\n      window.location.reload(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AccountContext.Provider\r\n      value={{\r\n        authenticate,\r\n        getSession,\r\n        logout,\r\n        login,\r\n        isFirstLogin,\r\n        user,\r\n        userAttr,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AccountContext.Provider>\r\n  );\r\n};\r\n\r\nexport { Account, AccountContext };\r\n"]},"metadata":{},"sourceType":"module"}