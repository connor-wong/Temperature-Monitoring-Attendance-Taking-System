{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\src\\\\components\\\\Account.js\";\nimport React, { createContext } from \"react\";\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\";\nimport Pool from \"../UserPool\";\nimport Dashboard from \"./Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountContext = /*#__PURE__*/createContext();\n\nconst Account = props => {\n  const getSession = async () => await new Promise((resolve, reject) => {\n    const user = Pool.getCurrentUser();\n\n    if (user) {\n      user.getSession(async (err, session) => {\n        if (err) {\n          reject();\n        } else {\n          const attributes = await new Promise((resolve, reject) => {\n            user.getUserAttributes((err, attributes) => {\n              if (err) {\n                reject(err);\n              } else {\n                const results = {};\n\n                for (let attribute of attributes) {\n                  const {\n                    Name,\n                    Value\n                  } = attribute;\n                  results[Name] = Value;\n                }\n\n                resolve(results);\n              }\n            });\n          });\n          resolve({\n            user,\n            ...session,\n            ...attributes\n          });\n        }\n      });\n    } else {\n      reject();\n    }\n  });\n\n  const authenticate = async (Username, Password) => await new Promise((resolve, reject) => {\n    const user = new CognitoUser({\n      Username,\n      Pool\n    });\n    const authDetails = new AuthenticationDetails({\n      Username,\n      Password\n    });\n    user.authenticateUser(authDetails, {\n      onSuccess: data => {\n        console.log(\"onSuccess:\", data);\n        resolve(data);\n      },\n      onFailure: err => {\n        console.error(\"onFailure:\", err);\n        reject(err);\n      },\n      newPasswordRequired: data => {\n        console.log(\"newPasswordRequired:\", data);\n        resolve(data);\n      }\n    });\n  });\n\n  const logout = () => {\n    const user = Pool.getCurrentUser();\n\n    if (user) {\n      user.signOut();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AccountContext.Provider, {\n    value: {\n      authenticate,\n      getSession,\n      logout\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Account;\nexport { Account, AccountContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/src/components/Account.js"],"names":["React","createContext","CognitoUser","AuthenticationDetails","Pool","Dashboard","AccountContext","Account","props","getSession","Promise","resolve","reject","user","getCurrentUser","err","session","attributes","getUserAttributes","results","attribute","Name","Value","authenticate","Username","Password","authDetails","authenticateUser","onSuccess","data","console","log","onFailure","error","newPasswordRequired","logout","signOut","children"],"mappings":"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","sourcesContent":["import React, { createContext } from \"react\";\r\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\";\r\nimport Pool from \"../UserPool\";\r\n\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nconst AccountContext = createContext();\r\n\r\nconst Account = (props) => {\r\n  const getSession = async () =>\r\n    await new Promise((resolve, reject) => {\r\n      const user = Pool.getCurrentUser();\r\n      if (user) {\r\n        user.getSession(async (err, session) => {\r\n          if (err) {\r\n            reject();\r\n          } else {\r\n            const attributes = await new Promise((resolve, reject) => {\r\n              user.getUserAttributes((err, attributes) => {\r\n                if (err) {\r\n                  reject(err);\r\n                } else {\r\n                  const results = {};\r\n\r\n                  for (let attribute of attributes) {\r\n                    const { Name, Value } = attribute;\r\n                    results[Name] = Value;\r\n                  }\r\n\r\n                  resolve(results);\r\n                }\r\n              });\r\n            });\r\n\r\n            resolve({\r\n              user,\r\n              ...session,\r\n              ...attributes,\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        reject();\r\n      }\r\n    });\r\n\r\n  const authenticate = async (Username, Password) =>\r\n    await new Promise((resolve, reject) => {\r\n      const user = new CognitoUser({ Username, Pool });\r\n      const authDetails = new AuthenticationDetails({ Username, Password });\r\n\r\n      user.authenticateUser(authDetails, {\r\n        onSuccess: (data) => {\r\n          console.log(\"onSuccess:\", data);\r\n\r\n          resolve(data);\r\n        },\r\n\r\n        onFailure: (err) => {\r\n          console.error(\"onFailure:\", err);\r\n          reject(err);\r\n        },\r\n\r\n        newPasswordRequired: (data) => {\r\n          console.log(\"newPasswordRequired:\", data);\r\n          resolve(data);\r\n        },\r\n      });\r\n    });\r\n\r\n  const logout = () => {\r\n    const user = Pool.getCurrentUser();\r\n    if (user) {\r\n      user.signOut();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AccountContext.Provider\r\n      value={{\r\n        authenticate,\r\n        getSession,\r\n        logout,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AccountContext.Provider>\r\n  );\r\n};\r\n\r\nexport { Account, AccountContext };\r\n"]},"metadata":{},"sourceType":"module"}