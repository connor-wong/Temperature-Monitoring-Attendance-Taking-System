{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\client\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport NavBar from \"./NavBar\";\nimport LatestAttendance from \"./LatestAttendance/LatestAttendance\";\nimport StudentMatters from \"./StudentMatters/StudentMatters\";\nimport Classes from \"./Classes/Classes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [classes, setClasses] = useState([]);\n  const [attendance, setAttendance] = useState([]);\n  const [temperatureMatter, setTemperatureMatter] = useState([]);\n  const [lowAttendanceMatter, setlowAttendanceMatter] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [updateData, setUpdateData] = useState(true);\n  useEffect(() => {\n    if (updateData) {\n      getData();\n    }\n  }, [updateData]);\n\n  const getData = async () => {\n    let classes = [];\n    let classArray = [];\n    let studentArray = [];\n    let dataArray = [];\n    let dateArray = [];\n    let attendance = [];\n    let temperatureMatter = [];\n    let lowAttendanceMatter = [];\n    let absentArray = [];\n    await fetch(\"/drive/api\");\n    await fetch(\"/sheet/api\").then(res => res.json()).then(res => {\n      classes = res.sheets;\n      res.sheets.forEach(result => {\n        classArray.push(result.properties.title);\n      });\n    });\n\n    for (const classTitle of classArray) {\n      let studentList = [];\n      await axios.post(\"/sheet/class\", classTitle);\n      await fetch(\"/sheet/student\") // Get Student List\n      .then(res => res.json()).then(res => {\n        studentArray = res;\n      });\n      await fetch(\"/aws/api\") // Get Student Attendance\n      .then(res => res.json()).then(res => {\n        dataArray = res;\n      }); // Sort to latest date\n\n      dataArray.sort((a, b) => {\n        return new Date(b.Date) - new Date(a.Date);\n      }); // Data formation\n\n      const latestAttendanceData = dataArray.filter(res => res.Date.includes(dataArray[0].Date.split(\" \")[0]));\n\n      if (dataArray.length < 1 || dataArray === undefined) {// do nothing\n      } else {\n        const date = dataArray[0].Date.split(\" \")[0];\n        const totalStudents = studentArray.length;\n        let presentCount = 0;\n        studentArray.forEach(res => {\n          latestAttendanceData.forEach(student => {\n            if (res[0].includes(student.Name)) {\n              presentCount = presentCount + 1;\n            }\n          }); // Convert array to object\n\n          studentList.push({\n            Name: res[0],\n            ID: res[1],\n            Class: classTitle\n          });\n        }); // Class, Date, Present, Total Students\n\n        attendance.push({\n          Class: classTitle,\n          Date: date,\n          Present: presentCount,\n          Total_Students: totalStudents\n        }); // Student Matters (High Temperature)\n\n        latestAttendanceData.forEach(student => {\n          if (student.Temperature >= 37.5) {\n            temperatureMatter.push(student);\n          }\n        }); // Student Matters (Low Attendance)\n\n        dataArray.forEach(data => {\n          dateArray.push(data.Date.split(\" \")[0]);\n        });\n        dateArray = [...new Set(dateArray)]; // Remove Duplicates\n\n        dateArray.forEach(date => {\n          let attendance = [];\n          let absentList = [];\n          attendance = dataArray.filter(res => res.Date.includes(date));\n\n          if (attendance.length !== 0) {\n            absentList = studentList.filter(({\n              Name: id1\n            }) => !attendance.some(({\n              Name: id2\n            }) => id2 === id1));\n            absentArray = [...absentArray, ...absentList];\n          }\n        });\n        let absentChecker = [];\n        absentChecker = absentArray.filter(res => res.Class.includes(classTitle));\n        lowAttendanceMatter = [...lowAttendanceMatter, ...absentChecker.reduce(function (acc, el, i, arr) {\n          if (arr.indexOf(el) !== i && acc.indexOf(el) < 0) acc.push(el);\n          return acc;\n        }, [])];\n      }\n    }\n\n    setClasses(classes); // Class Component\n\n    setAttendance(attendance); // LatestAttendance Component\n\n    setTemperatureMatter(temperatureMatter); // Student Matter Component\n\n    setlowAttendanceMatter(lowAttendanceMatter); // Student Matter Component\n\n    setIsLoading(false);\n    setUpdateData(false);\n  };\n\n  console.log(\"Update: \", updateData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center dashboard\",\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontSize: \"calc(22px + 2vw)\",\n              fontWeight: \"bold\",\n              color: \"#535353\",\n              textAlign: \"left\"\n            },\n            children: \"Your Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xl: 6,\n          lg: 12,\n          md: 12,\n          sm: 12,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              marginBottom: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xl: 12,\n              lg: 12,\n              md: 12,\n              sm: 12,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(LatestAttendance, {\n                attendance: attendance,\n                isLoading: isLoading,\n                setUpdateData: setUpdateData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              marginBottom: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xl: 12,\n              lg: 12,\n              md: 12,\n              sm: 12,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(StudentMatters, {\n                temperatureMatter: temperatureMatter,\n                lowAttendanceMatter: lowAttendanceMatter,\n                isLoading: isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xl: 6,\n          lg: 12,\n          md: 12,\n          sm: 12,\n          xs: 12,\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Classes, {\n            classes: classes,\n            isLoading: isLoading,\n            setUpdateData: setUpdateData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"JCzLxsBDQ0BORsLW0ruGzTAbWYA=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/src/components/Dashboard/Dashboard.js"],"names":["React","useEffect","useState","axios","Row","Col","Container","NavBar","LatestAttendance","StudentMatters","Classes","Dashboard","classes","setClasses","attendance","setAttendance","temperatureMatter","setTemperatureMatter","lowAttendanceMatter","setlowAttendanceMatter","isLoading","setIsLoading","updateData","setUpdateData","getData","classArray","studentArray","dataArray","dateArray","absentArray","fetch","then","res","json","sheets","forEach","result","push","properties","title","classTitle","studentList","post","sort","a","b","Date","latestAttendanceData","filter","includes","split","length","undefined","date","totalStudents","presentCount","student","Name","ID","Class","Present","Total_Students","Temperature","data","Set","absentList","id1","some","id2","absentChecker","reduce","acc","el","i","arr","indexOf","console","log","fontSize","fontWeight","color","textAlign","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\n\r\nimport NavBar from \"./NavBar\";\r\nimport LatestAttendance from \"./LatestAttendance/LatestAttendance\";\r\nimport StudentMatters from \"./StudentMatters/StudentMatters\";\r\nimport Classes from \"./Classes/Classes\";\r\n\r\nconst Dashboard = () => {\r\n  const [classes, setClasses] = useState([]);\r\n  const [attendance, setAttendance] = useState([]);\r\n  const [temperatureMatter, setTemperatureMatter] = useState([]);\r\n  const [lowAttendanceMatter, setlowAttendanceMatter] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [updateData, setUpdateData] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (updateData) {\r\n      getData();\r\n    }\r\n  }, [updateData]);\r\n\r\n  const getData = async () => {\r\n    let classes = [];\r\n    let classArray = [];\r\n    let studentArray = [];\r\n    let dataArray = [];\r\n    let dateArray = [];\r\n    let attendance = [];\r\n    let temperatureMatter = [];\r\n    let lowAttendanceMatter = [];\r\n    let absentArray = [];\r\n\r\n    await fetch(\"/drive/api\");\r\n\r\n    await fetch(\"/sheet/api\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        classes = res.sheets;\r\n        res.sheets.forEach((result) => {\r\n          classArray.push(result.properties.title);\r\n        });\r\n      });\r\n\r\n    for (const classTitle of classArray) {\r\n      let studentList = [];\r\n      await axios.post(\"/sheet/class\", classTitle);\r\n\r\n      await fetch(\"/sheet/student\") // Get Student List\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          studentArray = res;\r\n        });\r\n\r\n      await fetch(\"/aws/api\") // Get Student Attendance\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          dataArray = res;\r\n        });\r\n\r\n      // Sort to latest date\r\n      dataArray.sort((a, b) => {\r\n        return new Date(b.Date) - new Date(a.Date);\r\n      });\r\n\r\n      // Data formation\r\n      const latestAttendanceData = dataArray.filter((res) =>\r\n        res.Date.includes(dataArray[0].Date.split(\" \")[0])\r\n      );\r\n\r\n      if (dataArray.length < 1 || dataArray === undefined) {\r\n        // do nothing\r\n      } else {\r\n        const date = dataArray[0].Date.split(\" \")[0];\r\n        const totalStudents = studentArray.length;\r\n        let presentCount = 0;\r\n\r\n        studentArray.forEach((res) => {\r\n          latestAttendanceData.forEach((student) => {\r\n            if (res[0].includes(student.Name)) {\r\n              presentCount = presentCount + 1;\r\n            }\r\n          });\r\n          // Convert array to object\r\n          studentList.push({\r\n            Name: res[0],\r\n            ID: res[1],\r\n            Class: classTitle,\r\n          });\r\n        });\r\n\r\n        // Class, Date, Present, Total Students\r\n        attendance.push({\r\n          Class: classTitle,\r\n          Date: date,\r\n          Present: presentCount,\r\n          Total_Students: totalStudents,\r\n        });\r\n\r\n        // Student Matters (High Temperature)\r\n        latestAttendanceData.forEach((student) => {\r\n          if (student.Temperature >= 37.5) {\r\n            temperatureMatter.push(student);\r\n          }\r\n        });\r\n\r\n        // Student Matters (Low Attendance)\r\n        dataArray.forEach((data) => {\r\n          dateArray.push(data.Date.split(\" \")[0]);\r\n        });\r\n\r\n        dateArray = [...new Set(dateArray)]; // Remove Duplicates\r\n\r\n        dateArray.forEach((date) => {\r\n          let attendance = [];\r\n          let absentList = [];\r\n\r\n          attendance = dataArray.filter((res) => res.Date.includes(date));\r\n\r\n          if (attendance.length !== 0) {\r\n            absentList = studentList.filter(\r\n              ({ Name: id1 }) =>\r\n                !attendance.some(({ Name: id2 }) => id2 === id1)\r\n            );\r\n            absentArray = [...absentArray, ...absentList];\r\n          }\r\n        });\r\n\r\n        let absentChecker = [];\r\n        absentChecker = absentArray.filter((res) =>\r\n          res.Class.includes(classTitle)\r\n        );\r\n\r\n        lowAttendanceMatter = [\r\n          ...lowAttendanceMatter,\r\n          ...absentChecker.reduce(function (acc, el, i, arr) {\r\n            if (arr.indexOf(el) !== i && acc.indexOf(el) < 0) acc.push(el);\r\n            return acc;\r\n          }, []),\r\n        ];\r\n      }\r\n    }\r\n\r\n    setClasses(classes); // Class Component\r\n    setAttendance(attendance); // LatestAttendance Component\r\n    setTemperatureMatter(temperatureMatter); // Student Matter Component\r\n    setlowAttendanceMatter(lowAttendanceMatter); // Student Matter Component\r\n    setIsLoading(false);\r\n    setUpdateData(false);\r\n  };\r\n\r\n  console.log(\"Update: \", updateData);\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Container className=\"text-center dashboard\" fluid>\r\n        <Row>\r\n          <Col>\r\n            <h3\r\n              style={{\r\n                fontSize: \"calc(22px + 2vw)\",\r\n                fontWeight: \"bold\",\r\n                color: \"#535353\",\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              Your Dashboard\r\n            </h3>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col xl={6} lg={12} md={12} sm={12} xs={12}>\r\n            <Row style={{ marginBottom: \"10px\" }}>\r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                <LatestAttendance\r\n                  attendance={attendance}\r\n                  isLoading={isLoading}\r\n                  setUpdateData={setUpdateData}\r\n                />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row style={{ marginBottom: \"10px\" }}>\r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                <StudentMatters\r\n                  temperatureMatter={temperatureMatter}\r\n                  lowAttendanceMatter={lowAttendanceMatter}\r\n                  isLoading={isLoading}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col\r\n            xl={6}\r\n            lg={12}\r\n            md={12}\r\n            sm={12}\r\n            xs={12}\r\n            style={{ marginBottom: \"10px\" }}\r\n          >\r\n            <Classes\r\n              classes={classes}\r\n              isLoading={isLoading}\r\n              setUpdateData={setUpdateData}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}