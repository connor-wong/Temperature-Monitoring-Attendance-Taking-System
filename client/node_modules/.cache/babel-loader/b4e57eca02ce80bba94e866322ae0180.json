{"ast":null,"code":"import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Wizard/wizard';\nimport { css } from '@patternfly/react-styles';\nexport const WizardNav = ({\n  children,\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledBy,\n  isOpen = false,\n  returnList = false\n}) => {\n  const innerList = React.createElement(\"ol\", {\n    className: css(styles.wizardNavList)\n  }, children);\n\n  if (returnList) {\n    return innerList;\n  }\n\n  return React.createElement(\"nav\", {\n    className: css(styles.wizardNav, isOpen && styles.modifiers.expanded),\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy\n  }, React.createElement(\"ol\", {\n    className: css(styles.wizardNavList)\n  }, children));\n};\nWizardNav.displayName = 'WizardNav';","map":{"version":3,"sources":["../../../../src/components/Wizard/WizardNav.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,uDAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AAeA,OAAO,MAAM,SAAS,GAA4C,CAAC;AACjE,EAAA,QADiE;AAEjE,gBAAc,SAFmD;AAGjE,qBAAmB,cAH8C;AAIjE,EAAA,MAAM,GAAG,KAJwD;AAKjE,EAAA,UAAU,GAAG;AALoD,CAAD,KAM7C;AACnB,QAAM,SAAS,GAAG,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,aAAR;AAAlB,GAAA,EAA2C,QAA3C,CAAlB;;AAEA,MAAI,UAAJ,EAAgB;AACd,WAAO,SAAP;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,SAAR,EAAmB,MAAM,IAAI,MAAM,CAAC,SAAP,CAAiB,QAA9C,CADhB;AACuE,kBACzD,SAFd;AAEuB,uBACJ;AAHnB,GAAA,EAKE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,aAAR;AAAlB,GAAA,EAA2C,QAA3C,CALF,CADF;AASD,CAtBM;AAuBP,SAAS,CAAC,WAAV,GAAwB,WAAxB","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Wizard/wizard';\nimport { css } from '@patternfly/react-styles';\nexport const WizardNav = ({ children, 'aria-label': ariaLabel, 'aria-labelledby': ariaLabelledBy, isOpen = false, returnList = false }) => {\n    const innerList = React.createElement(\"ol\", { className: css(styles.wizardNavList) }, children);\n    if (returnList) {\n        return innerList;\n    }\n    return (React.createElement(\"nav\", { className: css(styles.wizardNav, isOpen && styles.modifiers.expanded), \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledBy },\n        React.createElement(\"ol\", { className: css(styles.wizardNavList) }, children)));\n};\nWizardNav.displayName = 'WizardNav';\n//# sourceMappingURL=WizardNav.js.map"]},"metadata":{},"sourceType":"module"}