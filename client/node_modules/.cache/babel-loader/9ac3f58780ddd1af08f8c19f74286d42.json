{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\client\\\\src\\\\components\\\\Dashboard\\\\StudentList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Row, Col, Container, ListGroup, Spinner } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StudentList = () => {\n  _s();\n\n  const [studentList, setStudentList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    let mounted = true;\n\n    const getData = async () => {\n      await fetch(\"/drive/api\");\n      const response = await fetch(\"/sheet/student\"); // Get Student List\n\n      console.log(response.json());\n\n      if (mounted) {\n        setStudentList(response.json());\n        setIsLoading(false);\n      }\n    };\n\n    getData();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center studentlist\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontWeight: \"bold\",\n              color: \"white\",\n              textAlign: \"left\",\n              marginTop: \"10px\",\n              marginBottom: \"10px\"\n            },\n            children: \"Student List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            style: {\n              color: \"white\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: studentList.map(student => {\n              return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xl: 9,\n                    lg: 9,\n                    md: 9,\n                    sm: 9,\n                    xs: 9,\n                    style: {\n                      textAlign: \"left\",\n                      fontWeight: \"bold\",\n                      color: \"#535353\"\n                    },\n                    children: student[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xl: 3,\n                    lg: 3,\n                    md: 3,\n                    sm: 3,\n                    xs: 3,\n                    style: {\n                      textAlign: \"right\",\n                      fontWeight: \"bold\",\n                      color: \"#535353\"\n                    },\n                    children: student[1]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 23\n                }, this)\n              }, student[1], false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(StudentList, \"5jyElMF+aAMD71C4N8/wG43GbD8=\");\n\n_c = StudentList;\nexport default StudentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/src/components/Dashboard/StudentList.js"],"names":["React","useEffect","useState","Row","Col","Container","ListGroup","Spinner","StudentList","studentList","setStudentList","isLoading","setIsLoading","mounted","getData","fetch","response","console","log","json","fontWeight","color","textAlign","marginTop","marginBottom","map","student"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Container, ListGroup, Spinner } from \"react-bootstrap\";\r\n\r\nconst StudentList = () => {\r\n  const [studentList, setStudentList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const getData = async () => {\r\n      await fetch(\"/drive/api\");\r\n\r\n      const response = await fetch(\"/sheet/student\"); // Get Student List\r\n      console.log(response.json());\r\n      if (mounted) {\r\n        setStudentList(response.json());\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    getData();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"text-center studentlist\">\r\n        <Row>\r\n          <Col>\r\n            <h3\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: \"white\",\r\n                textAlign: \"left\",\r\n                marginTop: \"10px\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              Student List\r\n            </h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {isLoading ? (\r\n              <Spinner animation=\"border\" style={{ color: \"white\" }} />\r\n            ) : (\r\n              <ListGroup>\r\n                {studentList.map((student) => {\r\n                  return (\r\n                    <ListGroup.Item key={student[1]}>\r\n                      <Row>\r\n                        <Col\r\n                          xl={9}\r\n                          lg={9}\r\n                          md={9}\r\n                          sm={9}\r\n                          xs={9}\r\n                          style={{\r\n                            textAlign: \"left\",\r\n                            fontWeight: \"bold\",\r\n                            color: \"#535353\",\r\n                          }}\r\n                        >\r\n                          {student[0]}\r\n                        </Col>\r\n                        <Col\r\n                          xl={3}\r\n                          lg={3}\r\n                          md={3}\r\n                          sm={3}\r\n                          xs={3}\r\n                          style={{\r\n                            textAlign: \"right\",\r\n                            fontWeight: \"bold\",\r\n                            color: \"#535353\",\r\n                          }}\r\n                        >\r\n                          {student[1]}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  );\r\n                })}\r\n              </ListGroup>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentList;\r\n"]},"metadata":{},"sourceType":"module"}