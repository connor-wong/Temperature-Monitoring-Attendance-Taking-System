{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class DropdownToggleCheckbox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.props.onChange(event.target.checked, event);\n    };\n\n    this.calculateChecked = () => {\n      const {\n        isChecked,\n        checked\n      } = this.props;\n\n      if (isChecked === null) {\n        // return false here and the indeterminate state will be set to true through the ref\n        return false;\n      } else if (isChecked !== undefined) {\n        return isChecked;\n      }\n\n      return checked;\n    };\n\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(DropdownToggleCheckbox.displayName)\n    };\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      className,\n      isValid,\n      isDisabled,\n      isChecked,\n      children,\n      ouiaId,\n      ouiaSafe,\n\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onChange,\n      checked\n    } = _a,\n\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    props = __rest(_a, [\"className\", \"isValid\", \"isDisabled\", \"isChecked\", \"children\", \"ouiaId\", \"ouiaSafe\", \"onChange\", \"checked\"]);\n\n    const text = children && React.createElement(\"span\", {\n      className: css(styles.dropdownToggleText, className),\n      \"aria-hidden\": \"true\",\n      id: `${props.id}-text`\n    }, children);\n    return React.createElement(\"label\", {\n      className: css(styles.dropdownToggleCheck, className),\n      htmlFor: props.id\n    }, React.createElement(\"input\", Object.assign({}, props, this.calculateChecked() !== undefined && {\n      onChange: this.handleChange\n    }, {\n      type: \"checkbox\",\n      ref: elem => elem && (elem.indeterminate = isChecked === null),\n      \"aria-invalid\": !isValid,\n      disabled: isDisabled,\n      checked: this.calculateChecked()\n    }, getOUIAProps(DropdownToggleCheckbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe))), text);\n  }\n\n}\nDropdownToggleCheckbox.displayName = 'DropdownToggleCheckbox';\nDropdownToggleCheckbox.defaultProps = {\n  className: '',\n  isValid: true,\n  isDisabled: false,\n  onChange: () => undefined\n};","map":{"version":3,"sources":["../../../../src/components/Dropdown/DropdownToggleCheckbox.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class DropdownToggleCheckbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event.target.checked, event);\n        };\n        this.calculateChecked = () => {\n            const { isChecked, checked } = this.props;\n            if (isChecked === null) {\n                // return false here and the indeterminate state will be set to true through the ref\n                return false;\n            }\n            else if (isChecked !== undefined) {\n                return isChecked;\n            }\n            return checked;\n        };\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(DropdownToggleCheckbox.displayName)\n        };\n    }\n    render() {\n        const _a = this.props, { className, isValid, isDisabled, isChecked, children, ouiaId, ouiaSafe, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        onChange, checked } = _a, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        props = __rest(_a, [\"className\", \"isValid\", \"isDisabled\", \"isChecked\", \"children\", \"ouiaId\", \"ouiaSafe\", \"onChange\", \"checked\"]);\n        const text = children && (React.createElement(\"span\", { className: css(styles.dropdownToggleText, className), \"aria-hidden\": \"true\", id: `${props.id}-text` }, children));\n        return (React.createElement(\"label\", { className: css(styles.dropdownToggleCheck, className), htmlFor: props.id },\n            React.createElement(\"input\", Object.assign({}, props, (this.calculateChecked() !== undefined && { onChange: this.handleChange }), { type: \"checkbox\", ref: elem => elem && (elem.indeterminate = isChecked === null), \"aria-invalid\": !isValid, disabled: isDisabled, checked: this.calculateChecked() }, getOUIAProps(DropdownToggleCheckbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe))),\n            text));\n    }\n}\nDropdownToggleCheckbox.displayName = 'DropdownToggleCheckbox';\nDropdownToggleCheckbox.defaultProps = {\n    className: '',\n    isValid: true,\n    isDisabled: false,\n    onChange: () => undefined\n};\n//# sourceMappingURL=DropdownToggleCheckbox.js.map"]},"metadata":{},"sourceType":"module"}