{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/OverflowMenu/overflow-menu';\nimport { css } from '@patternfly/react-styles';\nimport { OverflowMenuContext } from './OverflowMenuContext';\nimport mdBreakpoint from \"@patternfly/react-tokens/dist/esm/global_breakpoint_md\";\nimport lgBreakpoint from \"@patternfly/react-tokens/dist/esm/global_breakpoint_lg\";\nimport xlBreakpoint from \"@patternfly/react-tokens/dist/esm/global_breakpoint_xl\";\nimport xl2Breakpoint from \"@patternfly/react-tokens/dist/esm/global_breakpoint_2xl\";\nimport { debounce } from '../../helpers/util';\nconst breakpoints = {\n  md: mdBreakpoint,\n  lg: lgBreakpoint,\n  xl: xlBreakpoint,\n  '2xl': xl2Breakpoint\n};\nexport class OverflowMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleResize = () => {\n      const breakpointPx = breakpoints[this.props.breakpoint];\n\n      if (!breakpointPx) {\n        // eslint-disable-next-line no-console\n        console.error('OverflowMenu will not be visible without a valid breakpoint.');\n        return;\n      }\n\n      const breakpointWidth = Number(breakpointPx.value.replace('px', ''));\n      const isBelowBreakpoint = window.innerWidth < breakpointWidth;\n      this.setState({\n        isBelowBreakpoint\n      });\n    };\n\n    this.state = {\n      isBelowBreakpoint: false\n    };\n  }\n\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener('resize', debounce(this.handleResize, 250));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', debounce(this.handleResize, 250));\n  }\n\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const _a = this.props,\n          {\n      className,\n      breakpoint,\n      children\n    } = _a,\n          props = __rest(_a, [\"className\", \"breakpoint\", \"children\"]);\n\n    return React.createElement(\"div\", Object.assign({}, props, {\n      className: css(styles.overflowMenu, className)\n    }), React.createElement(OverflowMenuContext.Provider, {\n      value: {\n        isBelowBreakpoint: this.state.isBelowBreakpoint\n      }\n    }, children));\n  }\n\n}\nOverflowMenu.displayName = 'OverflowMenu';\nOverflowMenu.contextType = OverflowMenuContext;","map":{"version":3,"sources":["../../../../src/components/OverflowMenu/OverflowMenu.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,oEAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,SAAS,mBAAT,QAAoC,uBAApC;AACA,OAAO,YAAP,MAAmB,wDAAnB;AACA,OAAO,YAAP,MAAmB,wDAAnB;AACA,OAAO,YAAP,MAAmB,wDAAnB;AACA,OAAO,aAAP,MAAoB,yDAApB;AACA,SAAS,QAAT,QAAyB,oBAAzB;AAEA,MAAM,WAAW,GAAG;AAClB,EAAA,EAAE,EAAE,YADc;AAElB,EAAA,EAAE,EAAE,YAFc;AAGlB,EAAA,EAAE,EAAE,YAHc;AAIlB,SAAO;AAJW,CAApB;AAoBA,OAAM,MAAO,YAAP,SAA4B,KAAK,CAAC,SAAlC,CAAiF;AAErF,EAAA,WAAA,CAAY,KAAZ,EAAoC;AAClC,UAAM,KAAN;;AAeF,SAAA,YAAA,GAAe,MAAK;AAClB,YAAM,YAAY,GAAG,WAAW,CAAC,KAAK,KAAL,CAAW,UAAZ,CAAhC;;AACA,UAAI,CAAC,YAAL,EAAmB;AACjB;AACA,QAAA,OAAO,CAAC,KAAR,CAAc,8DAAd;AACA;AACD;;AACD,YAAM,eAAe,GAAG,MAAM,CAAC,YAAY,CAAC,KAAb,CAAmB,OAAnB,CAA2B,IAA3B,EAAiC,EAAjC,CAAD,CAA9B;AACA,YAAM,iBAAiB,GAAG,MAAM,CAAC,UAAP,GAAoB,eAA9C;AACA,WAAK,QAAL,CAAc;AAAE,QAAA;AAAF,OAAd;AACD,KAVD;;AAdE,SAAK,KAAL,GAAa;AACX,MAAA,iBAAiB,EAAE;AADR,KAAb;AAGD;;AAED,EAAA,iBAAiB,GAAA;AACf,SAAK,YAAL;AACA,IAAA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,QAAQ,CAAC,KAAK,YAAN,EAAoB,GAApB,CAA1C;AACD;;AAED,EAAA,oBAAoB,GAAA;AAClB,IAAA,MAAM,CAAC,mBAAP,CAA2B,QAA3B,EAAqC,QAAQ,CAAC,KAAK,YAAN,EAAoB,GAApB,CAA7C;AACD;;AAcD,EAAA,MAAM,GAAA;AACJ;AACA,UAAM,EAAA,GAAgD,KAAK,KAA3D;AAAA,UAAM;AAAE,MAAA,SAAF;AAAa,MAAA,UAAb;AAAyB,MAAA;AAAzB,QAAiC,EAAvC;AAAA,UAA4C,KAAK,GAAA,MAAA,CAAA,EAAA,EAA3C,CAAA,WAAA,EAAA,YAAA,EAAA,UAAA,CAA2C,CAAjD;;AAEA,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAS,KAAT,EAAc;AAAE,MAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,YAAR,EAAsB,SAAtB;AAAhB,KAAd,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,mBAAmB,CAAC,QAArB,EAA6B;AAAC,MAAA,KAAK,EAAE;AAAE,QAAA,iBAAiB,EAAE,KAAK,KAAL,CAAW;AAAhC;AAAR,KAA7B,EACG,QADH,CADF,CADF;AAOD;;AAzCoF;AAC9E,YAAA,CAAA,WAAA,GAAc,cAAd;AA2CT,YAAY,CAAC,WAAb,GAA2B,mBAA3B","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/OverflowMenu/overflow-menu';\nimport { css } from '@patternfly/react-styles';\nimport { OverflowMenuContext } from './OverflowMenuContext';\nimport mdBreakpoint from \"@patternfly/react-tokens/dist/esm/global_breakpoint_md\";\nimport lgBreakpoint from \"@patternfly/react-tokens/dist/esm/global_breakpoint_lg\";\nimport xlBreakpoint from \"@patternfly/react-tokens/dist/esm/global_breakpoint_xl\";\nimport xl2Breakpoint from \"@patternfly/react-tokens/dist/esm/global_breakpoint_2xl\";\nimport { debounce } from '../../helpers/util';\nconst breakpoints = {\n    md: mdBreakpoint,\n    lg: lgBreakpoint,\n    xl: xlBreakpoint,\n    '2xl': xl2Breakpoint\n};\nexport class OverflowMenu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleResize = () => {\n            const breakpointPx = breakpoints[this.props.breakpoint];\n            if (!breakpointPx) {\n                // eslint-disable-next-line no-console\n                console.error('OverflowMenu will not be visible without a valid breakpoint.');\n                return;\n            }\n            const breakpointWidth = Number(breakpointPx.value.replace('px', ''));\n            const isBelowBreakpoint = window.innerWidth < breakpointWidth;\n            this.setState({ isBelowBreakpoint });\n        };\n        this.state = {\n            isBelowBreakpoint: false\n        };\n    }\n    componentDidMount() {\n        this.handleResize();\n        window.addEventListener('resize', debounce(this.handleResize, 250));\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', debounce(this.handleResize, 250));\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _a = this.props, { className, breakpoint, children } = _a, props = __rest(_a, [\"className\", \"breakpoint\", \"children\"]);\n        return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.overflowMenu, className) }),\n            React.createElement(OverflowMenuContext.Provider, { value: { isBelowBreakpoint: this.state.isBelowBreakpoint } }, children)));\n    }\n}\nOverflowMenu.displayName = 'OverflowMenu';\nOverflowMenu.contextType = OverflowMenuContext;\n//# sourceMappingURL=OverflowMenu.js.map"]},"metadata":{},"sourceType":"module"}