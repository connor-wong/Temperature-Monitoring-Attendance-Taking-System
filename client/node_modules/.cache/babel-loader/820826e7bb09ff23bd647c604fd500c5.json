{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { keyHandler } from '../../helpers/util';\nimport { DropdownPosition, DropdownArrowContext, DropdownContext } from './dropdownConstants';\nexport class DropdownMenu extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.refsCollection = [];\n\n    this.componentWillUnmount = () => {\n      document.removeEventListener('keydown', this.onKeyDown);\n    };\n\n    this.onKeyDown = event => {\n      if (!this.props.isOpen || !Array.from(document.activeElement.classList).find(className => DropdownMenu.validToggleClasses.concat(this.context.toggleClass).includes(className))) {\n        return;\n      }\n\n      const refs = this.refsCollection;\n\n      if (event.key === 'ArrowDown') {\n        const firstFocusTargetCollection = refs.find(ref => ref && ref[0] && !ref[0].hasAttribute('disabled'));\n        DropdownMenu.focusFirstRef(firstFocusTargetCollection);\n      } else if (event.key === 'ArrowUp') {\n        const collectionLength = refs.length;\n        const lastFocusTargetCollection = refs.slice(collectionLength - 1, collectionLength);\n        const lastFocusTarget = lastFocusTargetCollection && lastFocusTargetCollection[0];\n        DropdownMenu.focusFirstRef(lastFocusTarget);\n      }\n    };\n\n    this.childKeyHandler = (index, innerIndex, position, custom = false) => {\n      keyHandler(index, innerIndex, position, this.refsCollection, this.props.isGrouped ? this.refsCollection : React.Children.toArray(this.props.children), custom);\n    };\n\n    this.sendRef = (index, nodes, isDisabled, isSeparator) => {\n      this.refsCollection[index] = [];\n      nodes.map((node, innerIndex) => {\n        if (!node) {\n          this.refsCollection[index][innerIndex] = null;\n        } else if (!node.getAttribute) {\n          // eslint-disable-next-line react/no-find-dom-node\n          this.refsCollection[index][innerIndex] = ReactDOM.findDOMNode(node);\n        } else if (isSeparator) {\n          this.refsCollection[index][innerIndex] = null;\n        } else {\n          this.refsCollection[index][innerIndex] = node;\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.onKeyDown);\n    const {\n      autoFocus\n    } = this.props;\n\n    if (autoFocus) {\n      // Focus first non-disabled element\n      const focusTargetCollection = this.refsCollection.find(ref => ref && ref[0] && !ref[0].hasAttribute('disabled'));\n      const focusTarget = focusTargetCollection && focusTargetCollection[0];\n\n      if (focusTarget && focusTarget.focus) {\n        setTimeout(() => focusTarget.focus());\n      }\n    }\n  }\n\n  shouldComponentUpdate() {\n    // reset refsCollection before updating to account for child removal between mounts\n    this.refsCollection = [];\n    return true;\n  }\n\n  extendChildren() {\n    const {\n      children,\n      isGrouped\n    } = this.props;\n\n    if (isGrouped) {\n      let index = 0;\n      return React.Children.map(children, groupedChildren => {\n        const group = groupedChildren;\n        const props = {};\n\n        if (group.props && group.props.children) {\n          if (Array.isArray(group.props.children)) {\n            props.children = React.Children.map(group.props.children, option => React.cloneElement(option, {\n              index: index++\n            }));\n          } else {\n            props.children = React.cloneElement(group.props.children, {\n              index: index++\n            });\n          }\n        }\n\n        return React.cloneElement(group, props);\n      });\n    }\n\n    return React.Children.map(children, (child, index) => React.cloneElement(child, {\n      index\n    }));\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      className,\n      isOpen,\n      position,\n      children,\n      component,\n      isGrouped,\n      setMenuComponentRef,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      openedOnEnter\n    } = _a,\n          props = __rest(_a, [\"className\", \"isOpen\", \"position\", \"children\", \"component\", \"isGrouped\", \"setMenuComponentRef\", \"openedOnEnter\"]);\n\n    return React.createElement(DropdownArrowContext.Provider, {\n      value: {\n        keyHandler: this.childKeyHandler,\n        sendRef: this.sendRef\n      }\n    }, component === 'div' ? React.createElement(DropdownContext.Consumer, null, ({\n      onSelect,\n      menuClass\n    }) => React.createElement(\"div\", {\n      className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, className),\n      hidden: !isOpen,\n      onClick: event => onSelect && onSelect(event),\n      ref: setMenuComponentRef\n    }, children)) : isGrouped && React.createElement(DropdownContext.Consumer, null, ({\n      menuClass,\n      menuComponent\n    }) => {\n      const MenuComponent = menuComponent || 'div';\n      return React.createElement(MenuComponent, Object.assign({}, props, {\n        className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, className),\n        hidden: !isOpen,\n        role: \"menu\",\n        ref: setMenuComponentRef\n      }), this.extendChildren());\n    }) || React.createElement(DropdownContext.Consumer, null, ({\n      menuClass,\n      menuComponent\n    }) => {\n      const MenuComponent = menuComponent || component;\n      return React.createElement(MenuComponent, Object.assign({}, props, {\n        className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, className),\n        hidden: !isOpen,\n        role: \"menu\",\n        ref: setMenuComponentRef\n      }), this.extendChildren());\n    }));\n  }\n\n}\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = {\n  className: '',\n  isOpen: true,\n  openedOnEnter: false,\n  autoFocus: true,\n  position: DropdownPosition.left,\n  component: 'ul',\n  isGrouped: false,\n  setMenuComponentRef: null\n};\nDropdownMenu.validToggleClasses = [styles.dropdownToggle, styles.dropdownToggleButton];\n\nDropdownMenu.focusFirstRef = refCollection => {\n  if (refCollection && refCollection[0] && refCollection[0].focus) {\n    setTimeout(() => refCollection[0].focus());\n  }\n};\n\nDropdownMenu.contextType = DropdownContext;","map":{"version":3,"sources":["../../../../src/components/Dropdown/DropdownMenu.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { keyHandler } from '../../helpers/util';\nimport { DropdownPosition, DropdownArrowContext, DropdownContext } from './dropdownConstants';\nexport class DropdownMenu extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.refsCollection = [];\n        this.componentWillUnmount = () => {\n            document.removeEventListener('keydown', this.onKeyDown);\n        };\n        this.onKeyDown = (event) => {\n            if (!this.props.isOpen ||\n                !Array.from(document.activeElement.classList).find(className => DropdownMenu.validToggleClasses.concat(this.context.toggleClass).includes(className))) {\n                return;\n            }\n            const refs = this.refsCollection;\n            if (event.key === 'ArrowDown') {\n                const firstFocusTargetCollection = refs.find(ref => ref && ref[0] && !ref[0].hasAttribute('disabled'));\n                DropdownMenu.focusFirstRef(firstFocusTargetCollection);\n            }\n            else if (event.key === 'ArrowUp') {\n                const collectionLength = refs.length;\n                const lastFocusTargetCollection = refs.slice(collectionLength - 1, collectionLength);\n                const lastFocusTarget = lastFocusTargetCollection && lastFocusTargetCollection[0];\n                DropdownMenu.focusFirstRef(lastFocusTarget);\n            }\n        };\n        this.childKeyHandler = (index, innerIndex, position, custom = false) => {\n            keyHandler(index, innerIndex, position, this.refsCollection, this.props.isGrouped ? this.refsCollection : React.Children.toArray(this.props.children), custom);\n        };\n        this.sendRef = (index, nodes, isDisabled, isSeparator) => {\n            this.refsCollection[index] = [];\n            nodes.map((node, innerIndex) => {\n                if (!node) {\n                    this.refsCollection[index][innerIndex] = null;\n                }\n                else if (!node.getAttribute) {\n                    // eslint-disable-next-line react/no-find-dom-node\n                    this.refsCollection[index][innerIndex] = ReactDOM.findDOMNode(node);\n                }\n                else if (isSeparator) {\n                    this.refsCollection[index][innerIndex] = null;\n                }\n                else {\n                    this.refsCollection[index][innerIndex] = node;\n                }\n            });\n        };\n    }\n    componentDidMount() {\n        document.addEventListener('keydown', this.onKeyDown);\n        const { autoFocus } = this.props;\n        if (autoFocus) {\n            // Focus first non-disabled element\n            const focusTargetCollection = this.refsCollection.find(ref => ref && ref[0] && !ref[0].hasAttribute('disabled'));\n            const focusTarget = focusTargetCollection && focusTargetCollection[0];\n            if (focusTarget && focusTarget.focus) {\n                setTimeout(() => focusTarget.focus());\n            }\n        }\n    }\n    shouldComponentUpdate() {\n        // reset refsCollection before updating to account for child removal between mounts\n        this.refsCollection = [];\n        return true;\n    }\n    extendChildren() {\n        const { children, isGrouped } = this.props;\n        if (isGrouped) {\n            let index = 0;\n            return React.Children.map(children, groupedChildren => {\n                const group = groupedChildren;\n                const props = {};\n                if (group.props && group.props.children) {\n                    if (Array.isArray(group.props.children)) {\n                        props.children = React.Children.map(group.props.children, option => React.cloneElement(option, {\n                            index: index++\n                        }));\n                    }\n                    else {\n                        props.children = React.cloneElement(group.props.children, {\n                            index: index++\n                        });\n                    }\n                }\n                return React.cloneElement(group, props);\n            });\n        }\n        return React.Children.map(children, (child, index) => React.cloneElement(child, {\n            index\n        }));\n    }\n    render() {\n        const _a = this.props, { className, isOpen, position, children, component, isGrouped, setMenuComponentRef, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        openedOnEnter } = _a, props = __rest(_a, [\"className\", \"isOpen\", \"position\", \"children\", \"component\", \"isGrouped\", \"setMenuComponentRef\", \"openedOnEnter\"]);\n        return (React.createElement(DropdownArrowContext.Provider, { value: {\n                keyHandler: this.childKeyHandler,\n                sendRef: this.sendRef\n            } }, component === 'div' ? (React.createElement(DropdownContext.Consumer, null, ({ onSelect, menuClass }) => (React.createElement(\"div\", { className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, className), hidden: !isOpen, onClick: event => onSelect && onSelect(event), ref: setMenuComponentRef }, children)))) : ((isGrouped && (React.createElement(DropdownContext.Consumer, null, ({ menuClass, menuComponent }) => {\n            const MenuComponent = (menuComponent || 'div');\n            return (React.createElement(MenuComponent, Object.assign({}, props, { className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, className), hidden: !isOpen, role: \"menu\", ref: setMenuComponentRef }), this.extendChildren()));\n        }))) || (React.createElement(DropdownContext.Consumer, null, ({ menuClass, menuComponent }) => {\n            const MenuComponent = (menuComponent || component);\n            return (React.createElement(MenuComponent, Object.assign({}, props, { className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, className), hidden: !isOpen, role: \"menu\", ref: setMenuComponentRef }), this.extendChildren()));\n        })))));\n    }\n}\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = {\n    className: '',\n    isOpen: true,\n    openedOnEnter: false,\n    autoFocus: true,\n    position: DropdownPosition.left,\n    component: 'ul',\n    isGrouped: false,\n    setMenuComponentRef: null\n};\nDropdownMenu.validToggleClasses = [styles.dropdownToggle, styles.dropdownToggleButton];\nDropdownMenu.focusFirstRef = (refCollection) => {\n    if (refCollection && refCollection[0] && refCollection[0].focus) {\n        setTimeout(() => refCollection[0].focus());\n    }\n};\nDropdownMenu.contextType = DropdownContext;\n//# sourceMappingURL=DropdownMenu.js.map"]},"metadata":{},"sourceType":"module"}