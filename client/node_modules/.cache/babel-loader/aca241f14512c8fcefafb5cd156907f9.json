{"ast":null,"code":"import getWindow from '../dom-utils/getWindow';\nconst passive = {\n  passive: true\n};\n/**\n *\n */\n\nfunction effect({\n  state,\n  instance,\n  options\n}) {\n  const {\n    scroll = true,\n    resize = true\n  } = options;\n  const window = getWindow(state.elements.popper);\n  const scrollParents = [...state.scrollParents.reference, ...state.scrollParents.popper];\n\n  if (scroll) {\n    scrollParents.forEach(scrollParent => {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return () => {\n    if (scroll) {\n      scrollParents.forEach(scrollParent => {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n}\n\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: () => {},\n  effect,\n  data: {}\n};","map":{"version":3,"sources":["../../../../../../../src/helpers/Popper/thirdparty/popper-core/modifiers/eventListeners.ts"],"names":[],"mappings":"AAEA,OAAO,SAAP,MAAsB,wBAAtB;AAQA,MAAM,OAAO,GAAG;AAAE,EAAA,OAAO,EAAE;AAAX,CAAhB;AAEA;;AAEG;;AACH,SAAS,MAAT,CAAgB;AAAE,EAAA,KAAF;AAAS,EAAA,QAAT;AAAmB,EAAA;AAAnB,CAAhB,EAAwE;AACtE,QAAM;AAAE,IAAA,MAAM,GAAG,IAAX;AAAiB,IAAA,MAAM,GAAG;AAA1B,MAAmC,OAAzC;AAEA,QAAM,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,QAAN,CAAe,MAAhB,CAAxB;AACA,QAAM,aAAa,GAAG,CAAC,GAAG,KAAK,CAAC,aAAN,CAAoB,SAAxB,EAAmC,GAAG,KAAK,CAAC,aAAN,CAAoB,MAA1D,CAAtB;;AAEA,MAAI,MAAJ,EAAY;AACV,IAAA,aAAa,CAAC,OAAd,CAAsB,YAAY,IAAG;AACnC,MAAA,YAAY,CAAC,gBAAb,CAA8B,QAA9B,EAAwC,QAAQ,CAAC,MAAjD,EAAyD,OAAzD;AACD,KAFD;AAGD;;AAED,MAAI,MAAJ,EAAY;AACV,IAAA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,QAAQ,CAAC,MAA3C,EAAmD,OAAnD;AACD;;AAED,SAAO,MAAK;AACV,QAAI,MAAJ,EAAY;AACV,MAAA,aAAa,CAAC,OAAd,CAAsB,YAAY,IAAG;AACnC,QAAA,YAAY,CAAC,mBAAb,CAAiC,QAAjC,EAA2C,QAAQ,CAAC,MAApD,EAA4D,OAA5D;AACD,OAFD;AAGD;;AAED,QAAI,MAAJ,EAAY;AACV,MAAA,MAAM,CAAC,mBAAP,CAA2B,QAA3B,EAAqC,QAAQ,CAAC,MAA9C,EAAsD,OAAtD;AACD;AACF,GAVD;AAWD;;AAID,eAAe;AACb,EAAA,IAAI,EAAE,gBADO;AAEb,EAAA,OAAO,EAAE,IAFI;AAGb,EAAA,KAAK,EAAE,OAHM;AAIb,EAAA,EAAE,EAAE,MAAK,CAAG,CAJC;AAKb,EAAA,MALa;AAMb,EAAA,IAAI,EAAE;AANO,CAAf","sourceRoot":"","sourcesContent":["import getWindow from '../dom-utils/getWindow';\nconst passive = { passive: true };\n/**\n *\n */\nfunction effect({ state, instance, options }) {\n    const { scroll = true, resize = true } = options;\n    const window = getWindow(state.elements.popper);\n    const scrollParents = [...state.scrollParents.reference, ...state.scrollParents.popper];\n    if (scroll) {\n        scrollParents.forEach(scrollParent => {\n            scrollParent.addEventListener('scroll', instance.update, passive);\n        });\n    }\n    if (resize) {\n        window.addEventListener('resize', instance.update, passive);\n    }\n    return () => {\n        if (scroll) {\n            scrollParents.forEach(scrollParent => {\n                scrollParent.removeEventListener('scroll', instance.update, passive);\n            });\n        }\n        if (resize) {\n            window.removeEventListener('resize', instance.update, passive);\n        }\n    };\n}\nexport default {\n    name: 'eventListeners',\n    enabled: true,\n    phase: 'write',\n    fn: () => { },\n    effect,\n    data: {}\n};\n//# sourceMappingURL=eventListeners.js.map"]},"metadata":{},"sourceType":"module"}