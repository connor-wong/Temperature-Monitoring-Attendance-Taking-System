{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Accordion/accordion';\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nimport { AccordionContext } from './AccordionContext';\nexport const AccordionToggle = _a => {\n  var {\n    className = '',\n    id,\n    isExpanded = false,\n    children = null,\n    component\n  } = _a,\n      props = __rest(_a, [\"className\", \"id\", \"isExpanded\", \"children\", \"component\"]);\n\n  return React.createElement(AccordionContext.Consumer, null, ({\n    ToggleContainer\n  }) => {\n    const Container = component || ToggleContainer;\n    return React.createElement(Container, null, React.createElement(\"button\", Object.assign({\n      id: id,\n      className: css(styles.accordionToggle, isExpanded && styles.modifiers.expanded, className)\n    }, props, {\n      \"aria-expanded\": isExpanded\n    }), React.createElement(\"span\", {\n      className: css(styles.accordionToggleText)\n    }, children), React.createElement(\"span\", {\n      className: css(styles.accordionToggleIcon)\n    }, React.createElement(AngleRightIcon, null))));\n  });\n};\nAccordionToggle.displayName = 'AccordionToggle';","map":{"version":3,"sources":["../../../../src/components/Accordion/AccordionToggle.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,6DAAnB;AACA,OAAO,cAAP,MAAqB,yDAArB;AACA,SAAS,gBAAT,QAAiC,oBAAjC;AAeA,OAAO,MAAM,eAAe,GAAmD,EAAD,IAOnD;MAPoD;AAC7E,IAAA,SAAS,GAAG,EADiE;AAE7E,IAAA,EAF6E;AAG7E,IAAA,UAAU,GAAG,KAHgE;AAI7E,IAAA,QAAQ,GAAG,IAJkE;AAK7E,IAAA;AAL6E,MAKpE,E;MACN,KAAK,GAAA,MAAA,CAAA,EAAA,EANqE,CAAA,WAAA,EAAA,IAAA,EAAA,YAAA,EAAA,UAAA,EAAA,WAAA,CAMrE,C;;AACkB,SAC1B,KAAA,CAAA,aAAA,CAAC,gBAAgB,CAAC,QAAlB,EAA0B,IAA1B,EACG,CAAC;AAAE,IAAA;AAAF,GAAD,KAAwB;AACvB,UAAM,SAAS,GAAG,SAAS,IAAI,eAA/B;AACA,WACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,IAAV,EACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACE,MAAA,EAAE,EAAE,EADN;AAEE,MAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,eAAR,EAAyB,UAAU,IAAI,MAAM,CAAC,SAAP,CAAiB,QAAxD,EAAkE,SAAlE;AAFhB,KAAA,EAGM,KAHN,EAGW;AAAA,uBACM;AADN,KAHX,CAAA,EAME,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,mBAAR;AAApB,KAAA,EAAmD,QAAnD,CANF,EAOE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,mBAAR;AAApB,KAAA,EACE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,IAAf,CADF,CAPF,CADF,CADF;AAeD,GAlBH,CAD0B;AAqB3B,CA5BM;AA6BP,eAAe,CAAC,WAAhB,GAA8B,iBAA9B","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Accordion/accordion';\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nimport { AccordionContext } from './AccordionContext';\nexport const AccordionToggle = (_a) => {\n    var { className = '', id, isExpanded = false, children = null, component } = _a, props = __rest(_a, [\"className\", \"id\", \"isExpanded\", \"children\", \"component\"]);\n    return (React.createElement(AccordionContext.Consumer, null, ({ ToggleContainer }) => {\n        const Container = component || ToggleContainer;\n        return (React.createElement(Container, null,\n            React.createElement(\"button\", Object.assign({ id: id, className: css(styles.accordionToggle, isExpanded && styles.modifiers.expanded, className) }, props, { \"aria-expanded\": isExpanded }),\n                React.createElement(\"span\", { className: css(styles.accordionToggleText) }, children),\n                React.createElement(\"span\", { className: css(styles.accordionToggleIcon) },\n                    React.createElement(AngleRightIcon, null)))));\n    }));\n};\nAccordionToggle.displayName = 'AccordionToggle';\n//# sourceMappingURL=AccordionToggle.js.map"]},"metadata":{},"sourceType":"module"}