{"ast":null,"code":"/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport * as React from 'react';\nimport { createPopper as defaultCreatePopper } from '../popper-core/popper';\n\nconst isEqual = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n/**\n * Simple ponyfill for Object.fromEntries\n */\n\n\nconst fromEntries = entries => entries.reduce((acc, [key, value]) => {\n  acc[key] = value;\n  return acc;\n}, {});\n/**\n * Small wrapper around `useLayoutEffect` to get rid of the warning on SSR envs\n */\n\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement ? React.useLayoutEffect : React.useEffect;\nconst EMPTY_MODIFIERS = [];\nexport const usePopper = (referenceElement, popperElement, options = {}) => {\n  const prevOptions = React.useRef(null);\n  const optionsWithDefaults = {\n    onFirstUpdate: options.onFirstUpdate,\n    placement: options.placement || 'bottom',\n    strategy: options.strategy || 'absolute',\n    modifiers: options.modifiers || EMPTY_MODIFIERS\n  };\n  const [state, setState] = React.useState({\n    styles: {\n      popper: {\n        position: optionsWithDefaults.strategy,\n        left: '0',\n        top: '0'\n      }\n    },\n    attributes: {}\n  });\n  const updateStateModifier = React.useMemo(() => ({\n    name: 'updateState',\n    enabled: true,\n    phase: 'write',\n    // eslint-disable-next-line no-shadow\n    fn: ({\n      state\n    }) => {\n      const elements = Object.keys(state.elements);\n      setState({\n        styles: fromEntries(elements.map(element => [element, state.styles[element] || {}])),\n        attributes: fromEntries(elements.map(element => [element, state.attributes[element]]))\n      });\n    },\n    requires: ['computeStyles']\n  }), []);\n  const popperOptions = React.useMemo(() => {\n    const newOptions = {\n      onFirstUpdate: optionsWithDefaults.onFirstUpdate,\n      placement: optionsWithDefaults.placement,\n      strategy: optionsWithDefaults.strategy,\n      modifiers: [...optionsWithDefaults.modifiers, updateStateModifier, {\n        name: 'applyStyles',\n        enabled: false\n      }]\n    };\n\n    if (isEqual(prevOptions.current, newOptions)) {\n      return prevOptions.current || newOptions;\n    } else {\n      prevOptions.current = newOptions;\n      return newOptions;\n    }\n  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);\n  const popperInstanceRef = React.useRef();\n  useIsomorphicLayoutEffect(() => {\n    if (popperInstanceRef && popperInstanceRef.current) {\n      popperInstanceRef.current.setOptions(popperOptions);\n    }\n  }, [popperOptions]);\n  useIsomorphicLayoutEffect(() => {\n    if (referenceElement == null || popperElement == null) {\n      return;\n    }\n\n    const createPopper = options.createPopper || defaultCreatePopper;\n    const popperInstance = createPopper(referenceElement, popperElement, popperOptions);\n    popperInstanceRef.current = popperInstance;\n    return () => {\n      popperInstance.destroy();\n      popperInstanceRef.current = null;\n    };\n  }, [referenceElement, popperElement, options.createPopper]);\n  return {\n    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,\n    styles: state.styles,\n    attributes: state.attributes,\n    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,\n    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null\n  };\n};","map":{"version":3,"sources":["../../../../../../src/helpers/Popper/thirdparty/react-popper/usePopper.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport * as React from 'react';\nimport { createPopper as defaultCreatePopper } from '../popper-core/popper';\nconst isEqual = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n/**\n * Simple ponyfill for Object.fromEntries\n */\nconst fromEntries = (entries) => entries.reduce((acc, [key, value]) => {\n    acc[key] = value;\n    return acc;\n}, {});\n/**\n * Small wrapper around `useLayoutEffect` to get rid of the warning on SSR envs\n */\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement\n    ? React.useLayoutEffect\n    : React.useEffect;\nconst EMPTY_MODIFIERS = [];\nexport const usePopper = (referenceElement, popperElement, options = {}) => {\n    const prevOptions = React.useRef(null);\n    const optionsWithDefaults = {\n        onFirstUpdate: options.onFirstUpdate,\n        placement: options.placement || 'bottom',\n        strategy: options.strategy || 'absolute',\n        modifiers: options.modifiers || EMPTY_MODIFIERS\n    };\n    const [state, setState] = React.useState({\n        styles: {\n            popper: {\n                position: optionsWithDefaults.strategy,\n                left: '0',\n                top: '0'\n            }\n        },\n        attributes: {}\n    });\n    const updateStateModifier = React.useMemo(() => ({\n        name: 'updateState',\n        enabled: true,\n        phase: 'write',\n        // eslint-disable-next-line no-shadow\n        fn: ({ state }) => {\n            const elements = Object.keys(state.elements);\n            setState({\n                styles: fromEntries(elements.map(element => [element, state.styles[element] || {}])),\n                attributes: fromEntries(elements.map(element => [element, state.attributes[element]]))\n            });\n        },\n        requires: ['computeStyles']\n    }), []);\n    const popperOptions = React.useMemo(() => {\n        const newOptions = {\n            onFirstUpdate: optionsWithDefaults.onFirstUpdate,\n            placement: optionsWithDefaults.placement,\n            strategy: optionsWithDefaults.strategy,\n            modifiers: [...optionsWithDefaults.modifiers, updateStateModifier, { name: 'applyStyles', enabled: false }]\n        };\n        if (isEqual(prevOptions.current, newOptions)) {\n            return prevOptions.current || newOptions;\n        }\n        else {\n            prevOptions.current = newOptions;\n            return newOptions;\n        }\n    }, [\n        optionsWithDefaults.onFirstUpdate,\n        optionsWithDefaults.placement,\n        optionsWithDefaults.strategy,\n        optionsWithDefaults.modifiers,\n        updateStateModifier\n    ]);\n    const popperInstanceRef = React.useRef();\n    useIsomorphicLayoutEffect(() => {\n        if (popperInstanceRef && popperInstanceRef.current) {\n            popperInstanceRef.current.setOptions(popperOptions);\n        }\n    }, [popperOptions]);\n    useIsomorphicLayoutEffect(() => {\n        if (referenceElement == null || popperElement == null) {\n            return;\n        }\n        const createPopper = options.createPopper || defaultCreatePopper;\n        const popperInstance = createPopper(referenceElement, popperElement, popperOptions);\n        popperInstanceRef.current = popperInstance;\n        return () => {\n            popperInstance.destroy();\n            popperInstanceRef.current = null;\n        };\n    }, [referenceElement, popperElement, options.createPopper]);\n    return {\n        state: popperInstanceRef.current ? popperInstanceRef.current.state : null,\n        styles: state.styles,\n        attributes: state.attributes,\n        update: popperInstanceRef.current ? popperInstanceRef.current.update : null,\n        forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null\n    };\n};\n//# sourceMappingURL=usePopper.js.map"]},"metadata":{},"sourceType":"module"}