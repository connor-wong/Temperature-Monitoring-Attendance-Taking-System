{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\client\\\\src\\\\components\\\\Dashboard\\\\LatestAttendance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LatestAttendance = () => {\n  _s();\n\n  const [attendance, setAttendance] = useState([]);\n\n  const getData = async () => {\n    let classArray = [];\n    let studentArray = [];\n    let dataArray = [];\n    let attendance = [];\n    await fetch(\"/drive/api\");\n    await fetch(\"/sheet/api\") // Get Class List\n    .then(res => res.json()).then(res => {\n      res.sheets.forEach(result => {\n        classArray.push(result.properties.title);\n      });\n    });\n\n    for (const classTitle of classArray) {\n      axios.post(\"http://localhost:3001/sheet/class\", classTitle);\n      await fetch(\"/sheet/student\") // Get Student List\n      .then(res => res.json()).then(res => studentArray = res);\n      await fetch(\"/aws/api\") // Get Student Attendance\n      .then(res => res.json()).then(res => {\n        dataArray = res;\n      }); // Sort to latest date\n\n      dataArray.sort((a, b) => {\n        return new Date(b.Date) - new Date(a.Date);\n      }); // Data formation\n\n      const latestAttendanceData = dataArray.filter(res => res.Date.includes(dataArray[0].Date.split(\" \")[0]));\n      const date = dataArray[0].Date.split(\" \")[0];\n      const totalStudents = studentArray.length;\n      let presentCount = 0;\n      studentArray.forEach(res => {\n        latestAttendanceData.forEach(student => {\n          if (res[0].includes(student.Name)) {\n            presentCount = presentCount + 1;\n          }\n        });\n      }); // Class, Date, Present, Total Students\n\n      attendance.push({\n        Class: classTitle,\n        Date: date,\n        Present: presentCount,\n        Total_Students: totalStudents\n      });\n    }\n\n    setAttendance(attendance);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"latest-attendance text-center\",\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"white\",\n          textAlign: \"left\"\n        },\n        children: \"Latest Attendance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: attendance.map(result => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            xl: 4,\n            lg: 4,\n            md: 4,\n            sm: 6,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"lg\",\n              block: true,\n              style: {\n                backgroundColor: \"white\",\n                color: \"black\",\n                marginBottom: \"20px\",\n                width: \"100%\",\n                height: \"10vh\",\n                fontSize: \"calc(10px + 1.2vw)\",\n                fontWeight: \"bold\"\n              },\n              id: result.Class,\n              value: result.Date,\n              onClick: e => console.log(e.target.id),\n              children: [result.Class, /*#__PURE__*/_jsxDEV(Button, {\n                children: [result.Present, \" / \", result.Total_Students]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)\n          }, result.Class, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(LatestAttendance, \"2e4A76NCJd0ZF2tUQlu64BzVRb8=\");\n\n_c = LatestAttendance;\nexport default LatestAttendance;\n\nvar _c;\n\n$RefreshReg$(_c, \"LatestAttendance\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/src/components/Dashboard/LatestAttendance.js"],"names":["React","useState","useEffect","Row","Col","Container","Button","axios","LatestAttendance","attendance","setAttendance","getData","classArray","studentArray","dataArray","fetch","then","res","json","sheets","forEach","result","push","properties","title","classTitle","post","sort","a","b","Date","latestAttendanceData","filter","includes","split","date","totalStudents","length","presentCount","student","Name","Class","Present","Total_Students","color","textAlign","map","backgroundColor","marginBottom","width","height","fontSize","fontWeight","e","console","log","target","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nconst LatestAttendance = () => {\r\n  const [attendance, setAttendance] = useState([]);\r\n\r\n  const getData = async () => {\r\n    let classArray = [];\r\n    let studentArray = [];\r\n    let dataArray = [];\r\n    let attendance = [];\r\n\r\n    await fetch(\"/drive/api\");\r\n\r\n    await fetch(\"/sheet/api\") // Get Class List\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        res.sheets.forEach((result) => {\r\n          classArray.push(result.properties.title);\r\n        });\r\n      });\r\n\r\n    for (const classTitle of classArray) {\r\n      axios.post(\"http://localhost:3001/sheet/class\", classTitle);\r\n\r\n      await fetch(\"/sheet/student\") // Get Student List\r\n        .then((res) => res.json())\r\n        .then((res) => (studentArray = res));\r\n\r\n      await fetch(\"/aws/api\") // Get Student Attendance\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          dataArray = res;\r\n        });\r\n\r\n      // Sort to latest date\r\n      dataArray.sort((a, b) => {\r\n        return new Date(b.Date) - new Date(a.Date);\r\n      });\r\n\r\n      // Data formation\r\n      const latestAttendanceData = dataArray.filter((res) =>\r\n        res.Date.includes(dataArray[0].Date.split(\" \")[0])\r\n      );\r\n      const date = dataArray[0].Date.split(\" \")[0];\r\n      const totalStudents = studentArray.length;\r\n      let presentCount = 0;\r\n\r\n      studentArray.forEach((res) => {\r\n        latestAttendanceData.forEach((student) => {\r\n          if (res[0].includes(student.Name)) {\r\n            presentCount = presentCount + 1;\r\n          }\r\n        });\r\n      });\r\n\r\n      // Class, Date, Present, Total Students\r\n      attendance.push({\r\n        Class: classTitle,\r\n        Date: date,\r\n        Present: presentCount,\r\n        Total_Students: totalStudents,\r\n      });\r\n    }\r\n\r\n    setAttendance(attendance);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"latest-attendance text-center\" fluid>\r\n        <h3 style={{ color: \"white\", textAlign: \"left\" }}>Latest Attendance</h3>\r\n        <Row>\r\n          {attendance.map((result) => {\r\n            return (\r\n              <Col xl={4} lg={4} md={4} sm={6} xs={6} key={result.Class}>\r\n                <Button\r\n                  size=\"lg\"\r\n                  block={true}\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n                    color: \"black\",\r\n                    marginBottom: \"20px\",\r\n                    width: \"100%\",\r\n                    height: \"10vh\",\r\n                    fontSize: \"calc(10px + 1.2vw)\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                  id={result.Class}\r\n                  value={result.Date}\r\n                  onClick={(e) => console.log(e.target.id)}\r\n                >\r\n                  {result.Class}\r\n                  <Button>\r\n                    {result.Present} / {result.Total_Students}\r\n                  </Button>\r\n                </Button>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LatestAttendance;\r\n"]},"metadata":{},"sourceType":"module"}