{"ast":null,"code":"/** Joins args into a className string\n *\n * @param {any} args list of objects, string, or arrays to reduce\n */\nexport function css(...args) {\n  // Adapted from https://github.com/JedWatson/classnames/blob/master/index.js\n  const classes = [];\n  const hasOwn = {}.hasOwnProperty;\n  args.filter(Boolean).forEach(arg => {\n    const argType = typeof arg;\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg);\n    } else if (Array.isArray(arg) && arg.length) {\n      const inner = css(...arg);\n\n      if (inner) {\n        classes.push(inner);\n      }\n    } else if (argType === 'object') {\n      for (const key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key);\n        }\n      }\n    }\n  });\n  return classes.join(' ');\n}","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"AAAA;;;AAGG;AACH,OAAM,SAAU,GAAV,CAAc,GAAG,IAAjB,EAA0B;AAC9B;AACA,QAAM,OAAO,GAAG,EAAhB;AACA,QAAM,MAAM,GAAG,GAAG,cAAlB;AAEA,EAAA,IAAI,CAAC,MAAL,CAAY,OAAZ,EAAqB,OAArB,CAA8B,GAAD,IAAa;AACxC,UAAM,OAAO,GAAG,OAAO,GAAvB;;AAEA,QAAI,OAAO,KAAK,QAAZ,IAAwB,OAAO,KAAK,QAAxC,EAAkD;AAChD,MAAA,OAAO,CAAC,IAAR,CAAa,GAAb;AACD,KAFD,MAEO,IAAI,KAAK,CAAC,OAAN,CAAc,GAAd,KAAsB,GAAG,CAAC,MAA9B,EAAsC;AAC3C,YAAM,KAAK,GAAG,GAAG,CAAC,GAAI,GAAL,CAAjB;;AACA,UAAI,KAAJ,EAAW;AACT,QAAA,OAAO,CAAC,IAAR,CAAa,KAAb;AACD;AACF,KALM,MAKA,IAAI,OAAO,KAAK,QAAhB,EAA0B;AAC/B,WAAK,MAAM,GAAX,IAAkB,GAAlB,EAAuB;AACrB,YAAI,MAAM,CAAC,IAAP,CAAY,GAAZ,EAAiB,GAAjB,KAAyB,GAAG,CAAC,GAAD,CAAhC,EAAuC;AACrC,UAAA,OAAO,CAAC,IAAR,CAAa,GAAb;AACD;AACF;AACF;AACF,GAjBD;AAmBA,SAAO,OAAO,CAAC,IAAR,CAAa,GAAb,CAAP;AACD","sourceRoot":"","sourcesContent":["/** Joins args into a className string\n *\n * @param {any} args list of objects, string, or arrays to reduce\n */\nexport function css(...args) {\n    // Adapted from https://github.com/JedWatson/classnames/blob/master/index.js\n    const classes = [];\n    const hasOwn = {}.hasOwnProperty;\n    args.filter(Boolean).forEach((arg) => {\n        const argType = typeof arg;\n        if (argType === 'string' || argType === 'number') {\n            classes.push(arg);\n        }\n        else if (Array.isArray(arg) && arg.length) {\n            const inner = css(...arg);\n            if (inner) {\n                classes.push(inner);\n            }\n        }\n        else if (argType === 'object') {\n            for (const key in arg) {\n                if (hasOwn.call(arg, key) && arg[key]) {\n                    classes.push(key);\n                }\n            }\n        }\n    });\n    return classes.join(' ');\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}