{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\nimport { formatBreakpointMods, toCamel } from '../../helpers/util';\nimport { Divider } from '../Divider';\nexport var ToolbarItemVariant;\n\n(function (ToolbarItemVariant) {\n  ToolbarItemVariant[\"separator\"] = \"separator\";\n  ToolbarItemVariant[\"bulk-select\"] = \"bulk-select\";\n  ToolbarItemVariant[\"overflow-menu\"] = \"overflow-menu\";\n  ToolbarItemVariant[\"pagination\"] = \"pagination\";\n  ToolbarItemVariant[\"search-filter\"] = \"search-filter\";\n  ToolbarItemVariant[\"label\"] = \"label\";\n  ToolbarItemVariant[\"chip-group\"] = \"chip-group\";\n  ToolbarItemVariant[\"expand-all\"] = \"expand-all\";\n})(ToolbarItemVariant || (ToolbarItemVariant = {}));\n\nexport const ToolbarItem = _a => {\n  var {\n    className,\n    variant,\n    visibility,\n    visiblity,\n    alignment,\n    spacer,\n    id,\n    children,\n    isAllExpanded\n  } = _a,\n      props = __rest(_a, [\"className\", \"variant\", \"visibility\", \"visiblity\", \"alignment\", \"spacer\", \"id\", \"children\", \"isAllExpanded\"]);\n\n  if (variant === ToolbarItemVariant.separator) {\n    return React.createElement(Divider, Object.assign({\n      className: css(styles.modifiers.vertical, className)\n    }, props));\n  }\n\n  if (visiblity !== undefined) {\n    // eslint-disable-next-line no-console\n    console.warn('The ToolbarItem visiblity prop has been deprecated. ' + 'Please use the correctly spelled visibility prop instead.');\n  }\n\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.toolbarItem, variant && styles.modifiers[toCamel(variant)], isAllExpanded && styles.modifiers.expanded, formatBreakpointMods(visibility || visiblity, styles), formatBreakpointMods(alignment, styles), formatBreakpointMods(spacer, styles), className)\n  }, variant === 'label' && {\n    'aria-hidden': true\n  }, {\n    id: id\n  }, props), children);\n};\nToolbarItem.displayName = 'ToolbarItem';","map":{"version":3,"sources":["../../../../src/components/Toolbar/ToolbarItem.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,yDAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AAEA,SAAS,oBAAT,EAA+B,OAA/B,QAA8C,oBAA9C;AACA,SAAS,OAAT,QAAwB,YAAxB;AAEA,OAAA,IAAY,kBAAZ;;AAAA,CAAA,UAAY,kBAAZ,EAA8B;AAC5B,EAAA,kBAAA,CAAA,WAAA,CAAA,GAAA,WAAA;AACA,EAAA,kBAAA,CAAA,aAAA,CAAA,GAAA,aAAA;AACA,EAAA,kBAAA,CAAA,eAAA,CAAA,GAAA,eAAA;AACA,EAAA,kBAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACA,EAAA,kBAAA,CAAA,eAAA,CAAA,GAAA,eAAA;AACA,EAAA,kBAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,kBAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACA,EAAA,kBAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACD,CATD,EAAY,kBAAkB,KAAlB,kBAAkB,GAAA,EAAA,CAA9B;;AAiEA,OAAO,MAAM,WAAW,GAA+C,EAAD,IAW/C;MAXgD;AACrE,IAAA,SADqE;AAErE,IAAA,OAFqE;AAGrE,IAAA,UAHqE;AAIrE,IAAA,SAJqE;AAKrE,IAAA,SALqE;AAMrE,IAAA,MANqE;AAOrE,IAAA,EAPqE;AAQrE,IAAA,QARqE;AASrE,IAAA;AATqE,MASxD,E;MACV,KAAK,GAAA,MAAA,CAAA,EAAA,EAV6D,CAAA,WAAA,EAAA,SAAA,EAAA,YAAA,EAAA,WAAA,EAAA,WAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,eAAA,CAU7D,C;;AAER,MAAI,OAAO,KAAK,kBAAkB,CAAC,SAAnC,EAA8C;AAC5C,WAAO,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA;AAAC,MAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,SAAP,CAAiB,QAAlB,EAA4B,SAA5B;AAAf,KAAA,EAA2D,KAA3D,CAAR,CAAP;AACD;;AAED,MAAI,SAAS,KAAK,SAAlB,EAA6B;AAC3B;AACA,IAAA,OAAO,CAAC,IAAR,CACE,yDACE,2DAFJ;AAID;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,WADK,EAEZ,OAAO,IACL,MAAM,CAAC,SAAP,CACE,OAAO,CAAC,OAAD,CADT,CAHU,EAMZ,aAAa,IAAI,MAAM,CAAC,SAAP,CAAiB,QANtB,EAOZ,oBAAoB,CAAC,UAAU,IAAI,SAAf,EAA0B,MAA1B,CAPR,EAQZ,oBAAoB,CAAC,SAAD,EAAY,MAAZ,CARR,EASZ,oBAAoB,CAAC,MAAD,EAAS,MAAT,CATR,EAUZ,SAVY;AADhB,GAAA,EAaO,OAAO,KAAK,OAAZ,IAAuB;AAAE,mBAAe;AAAjB,GAb9B,EAasD;AACpD,IAAA,EAAE,EAAE;AADgD,GAbtD,EAeM,KAfN,CAAA,EAiBG,QAjBH,CADF;AAqBD,CA7CM;AA8CP,WAAW,CAAC,WAAZ,GAA0B,aAA1B","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\nimport { formatBreakpointMods, toCamel } from '../../helpers/util';\nimport { Divider } from '../Divider';\nexport var ToolbarItemVariant;\n(function (ToolbarItemVariant) {\n    ToolbarItemVariant[\"separator\"] = \"separator\";\n    ToolbarItemVariant[\"bulk-select\"] = \"bulk-select\";\n    ToolbarItemVariant[\"overflow-menu\"] = \"overflow-menu\";\n    ToolbarItemVariant[\"pagination\"] = \"pagination\";\n    ToolbarItemVariant[\"search-filter\"] = \"search-filter\";\n    ToolbarItemVariant[\"label\"] = \"label\";\n    ToolbarItemVariant[\"chip-group\"] = \"chip-group\";\n    ToolbarItemVariant[\"expand-all\"] = \"expand-all\";\n})(ToolbarItemVariant || (ToolbarItemVariant = {}));\nexport const ToolbarItem = (_a) => {\n    var { className, variant, visibility, visiblity, alignment, spacer, id, children, isAllExpanded } = _a, props = __rest(_a, [\"className\", \"variant\", \"visibility\", \"visiblity\", \"alignment\", \"spacer\", \"id\", \"children\", \"isAllExpanded\"]);\n    if (variant === ToolbarItemVariant.separator) {\n        return React.createElement(Divider, Object.assign({ className: css(styles.modifiers.vertical, className) }, props));\n    }\n    if (visiblity !== undefined) {\n        // eslint-disable-next-line no-console\n        console.warn('The ToolbarItem visiblity prop has been deprecated. ' +\n            'Please use the correctly spelled visibility prop instead.');\n    }\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.toolbarItem, variant &&\n            styles.modifiers[toCamel(variant)], isAllExpanded && styles.modifiers.expanded, formatBreakpointMods(visibility || visiblity, styles), formatBreakpointMods(alignment, styles), formatBreakpointMods(spacer, styles), className) }, (variant === 'label' && { 'aria-hidden': true }), { id: id }, props), children));\n};\nToolbarItem.displayName = 'ToolbarItem';\n//# sourceMappingURL=ToolbarItem.js.map"]},"metadata":{},"sourceType":"module"}