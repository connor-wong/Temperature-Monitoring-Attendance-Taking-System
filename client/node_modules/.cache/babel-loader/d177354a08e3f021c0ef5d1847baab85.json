{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\client\\\\src\\\\components\\\\Dashboard\\\\AttendanceList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Container, ListGroup, Spinner, Button } from \"react-bootstrap\";\nimport CsvDownload from \"react-json-to-csv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AttendanceList = () => {\n  _s();\n\n  const [attendanceArray, setAttendanceArray] = useState([]);\n  const [attendanceList, setAttendanceList] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [showAttendance, setShowAttendance] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [selectedClass, setSelectedClass] = useState(\"\");\n  const [studentList, setstudentList] = useState([]);\n  const [absentList, setAbsentList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    let mounted = true;\n    let dateArray = [];\n    let studentList = [];\n\n    const getData = async () => {\n      const response = await fetch(\"/aws/api\").then(res => res.json()); // Get Student Attendance\n\n      const studentArray = await fetch(\"/sheet/student\").then(res => res.json()); // Get Student List\n      // Convert array to object\n\n      studentArray.forEach(res => {\n        studentList.push({\n          Name: res[0],\n          ID: res[1]\n        });\n      });\n      response.sort((a, b) => {\n        // Sort to latest date\n        return new Date(b.Date) - new Date(a.Date);\n      });\n      response.forEach(data => {\n        dateArray.push(data.Date.split(\" \")[0]);\n      });\n      dateArray = [...new Set(dateArray)]; // Remove Duplicates\n\n      if (mounted) {\n        setAttendanceArray(response);\n        setDates(dateArray);\n        setstudentList(studentList);\n        setIsLoading(false);\n      }\n    };\n\n    getData();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const getAttendanceList = date => {\n    let absentList;\n    const selectedDate = date;\n    const attendance = attendanceArray.filter((res // Filter Attendance By Selected Date\n    ) => res.Date.includes(selectedDate));\n    setSelectedClass(attendance[0].Class);\n    setSelectedDate(date);\n    setAttendanceList(attendance);\n    setShowAttendance(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center attendancelist\",\n      children: showAttendance ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontWeight: \"bold\",\n                color: \"white\",\n                textAlign: \"left\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\"\n              },\n              children: selectedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              children: attendanceList.map(student => {\n                return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      xl: 8,\n                      lg: 8,\n                      md: 8,\n                      sm: 8,\n                      xs: 8,\n                      style: {\n                        fontWeight: \"bold\",\n                        color: \"#535353\",\n                        textAlign: \"left\"\n                      },\n                      children: student.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      xl: 4,\n                      lg: 4,\n                      md: 4,\n                      sm: 4,\n                      xs: 4,\n                      style: {\n                        fontWeight: \"bold\",\n                        color: \"#535353\",\n                        textAlign: \"right\"\n                      },\n                      children: [student.Temperature, \" \\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 25\n                  }, this)\n                }, student.Name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                width: \"100%\",\n                backgroundColor: \"white\",\n                color: \"#535353\",\n                fontWeight: \"bold\",\n                marginTop: \"10px\"\n              },\n              onClick: () => setShowAttendance(false),\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(CsvDownload, {\n              data: attendanceList,\n              filename: selectedDate + \" \" + selectedClass + \".csv\",\n              style: {\n                width: \"100%\",\n                backgroundColor: \"white\",\n                color: \"#535353\",\n                fontWeight: \"bold\",\n                marginTop: \"10px\",\n                borderRadius: \"5px\",\n                borderColor: \"#007bff\",\n                padding: \".375rem .75rem\"\n              },\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontWeight: \"bold\",\n                color: \"white\",\n                textAlign: \"left\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\"\n              },\n              children: \"Attendance List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              style: {\n                color: \"white\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [dates.length === 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  color: \"white\"\n                },\n                children: \"No Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 23\n              }, this), dates.length > 0 && /*#__PURE__*/_jsxDEV(ListGroup, {\n                children: dates.map(date => {\n                  return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    id: date,\n                    action: true,\n                    onClick: e => getAttendanceList(e.target.id),\n                    style: {\n                      fontWeight: \"bold\",\n                      color: \"#535353\"\n                    },\n                    children: date\n                  }, date, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AttendanceList, \"K6Z1hcM3mAMlnUga8Dob7RmCY/A=\");\n\n_c = AttendanceList;\nexport default AttendanceList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttendanceList\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/src/components/Dashboard/AttendanceList.js"],"names":["React","useState","useEffect","Row","Col","Container","ListGroup","Spinner","Button","CsvDownload","AttendanceList","attendanceArray","setAttendanceArray","attendanceList","setAttendanceList","dates","setDates","showAttendance","setShowAttendance","selectedDate","setSelectedDate","selectedClass","setSelectedClass","studentList","setstudentList","absentList","setAbsentList","isLoading","setIsLoading","mounted","dateArray","getData","response","fetch","then","res","json","studentArray","forEach","push","Name","ID","sort","a","b","Date","data","split","Set","getAttendanceList","date","attendance","filter","includes","Class","fontWeight","color","textAlign","marginTop","marginBottom","map","student","Temperature","width","backgroundColor","borderRadius","borderColor","padding","length","e","target","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  ListGroup,\r\n  Spinner,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport CsvDownload from \"react-json-to-csv\";\r\n\r\nconst AttendanceList = () => {\r\n  const [attendanceArray, setAttendanceArray] = useState([]);\r\n  const [attendanceList, setAttendanceList] = useState([]);\r\n  const [dates, setDates] = useState([]);\r\n  const [showAttendance, setShowAttendance] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [selectedClass, setSelectedClass] = useState(\"\");\r\n  const [studentList, setstudentList] = useState([]);\r\n  const [absentList, setAbsentList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    let dateArray = [];\r\n    let studentList = [];\r\n\r\n    const getData = async () => {\r\n      const response = await fetch(\"/aws/api\").then((res) => res.json()); // Get Student Attendance\r\n      const studentArray = await fetch(\"/sheet/student\").then((res) =>\r\n        res.json()\r\n      ); // Get Student List\r\n\r\n      // Convert array to object\r\n      studentArray.forEach((res) => {\r\n        studentList.push({\r\n          Name: res[0],\r\n          ID: res[1],\r\n        });\r\n      });\r\n\r\n      response.sort((a, b) => {\r\n        // Sort to latest date\r\n        return new Date(b.Date) - new Date(a.Date);\r\n      });\r\n\r\n      response.forEach((data) => {\r\n        dateArray.push(data.Date.split(\" \")[0]);\r\n      });\r\n\r\n      dateArray = [...new Set(dateArray)]; // Remove Duplicates\r\n\r\n      if (mounted) {\r\n        setAttendanceArray(response);\r\n        setDates(dateArray);\r\n        setstudentList(studentList);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    getData();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const getAttendanceList = (date) => {\r\n    let absentList;\r\n    const selectedDate = date;\r\n    const attendance = attendanceArray.filter(\r\n      (\r\n        res // Filter Attendance By Selected Date\r\n      ) => res.Date.includes(selectedDate)\r\n    );\r\n\r\n    setSelectedClass(attendance[0].Class);\r\n    setSelectedDate(date);\r\n    setAttendanceList(attendance);\r\n    setShowAttendance(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"text-center attendancelist\">\r\n        {showAttendance ? (\r\n          <>\r\n            <Row>\r\n              <Col>\r\n                <h3\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\",\r\n                    textAlign: \"left\",\r\n                    marginTop: \"10px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                >\r\n                  {selectedDate}\r\n                </h3>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <ListGroup>\r\n                  {attendanceList.map((student) => {\r\n                    return (\r\n                      <ListGroup.Item key={student.Name}>\r\n                        <Row>\r\n                          <Col\r\n                            xl={8}\r\n                            lg={8}\r\n                            md={8}\r\n                            sm={8}\r\n                            xs={8}\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              color: \"#535353\",\r\n                              textAlign: \"left\",\r\n                            }}\r\n                          >\r\n                            {student.Name}\r\n                          </Col>\r\n                          <Col\r\n                            xl={4}\r\n                            lg={4}\r\n                            md={4}\r\n                            sm={4}\r\n                            xs={4}\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              color: \"#535353\",\r\n                              textAlign: \"right\",\r\n                            }}\r\n                          >\r\n                            {student.Temperature} °C\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    );\r\n                  })}\r\n                </ListGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Button\r\n                  style={{\r\n                    width: \"100%\",\r\n                    backgroundColor: \"white\",\r\n                    color: \"#535353\",\r\n                    fontWeight: \"bold\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                  onClick={() => setShowAttendance(false)}\r\n                >\r\n                  Back\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <CsvDownload\r\n                  data={attendanceList}\r\n                  filename={selectedDate + \" \" + selectedClass + \".csv\"}\r\n                  style={{\r\n                    width: \"100%\",\r\n                    backgroundColor: \"white\",\r\n                    color: \"#535353\",\r\n                    fontWeight: \"bold\",\r\n                    marginTop: \"10px\",\r\n                    borderRadius: \"5px\",\r\n                    borderColor: \"#007bff\",\r\n                    padding: \".375rem .75rem\",\r\n                  }}\r\n                >\r\n                  Download\r\n                </CsvDownload>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Row>\r\n              <Col>\r\n                <h3\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\",\r\n                    textAlign: \"left\",\r\n                    marginTop: \"10px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                >\r\n                  Attendance List\r\n                </h3>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                {isLoading ? (\r\n                  <Spinner animation=\"border\" style={{ color: \"white\" }} />\r\n                ) : (\r\n                  <>\r\n                    {dates.length === 0 && (\r\n                      <h3 style={{ color: \"white\" }}>No Data</h3>\r\n                    )}\r\n                    {dates.length > 0 && (\r\n                      <ListGroup>\r\n                        {dates.map((date) => {\r\n                          return (\r\n                            <ListGroup.Item\r\n                              key={date}\r\n                              id={date}\r\n                              action\r\n                              onClick={(e) => getAttendanceList(e.target.id)}\r\n                              style={{ fontWeight: \"bold\", color: \"#535353\" }}\r\n                            >\r\n                              {date}\r\n                            </ListGroup.Item>\r\n                          );\r\n                        })}\r\n                      </ListGroup>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttendanceList;\r\n"]},"metadata":{},"sourceType":"module"}