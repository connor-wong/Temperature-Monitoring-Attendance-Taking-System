{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nexport const DataListItemRow = _a => {\n  var {\n    children,\n    className = '',\n    rowid = '',\n    wrapModifier = null\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"rowid\", \"wrapModifier\"]);\n\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.dataListItemRow, className, wrapModifier && styles.modifiers[wrapModifier])\n  }, props), React.Children.map(children, child => React.isValidElement(child) && React.cloneElement(child, {\n    rowid\n  })));\n};\nDataListItemRow.displayName = 'DataListItemRow';","map":{"version":3,"sources":["../../../../src/components/DataList/DataListItemRow.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,4DAAnB;AAcA,OAAO,MAAM,eAAe,GAAmD,EAAD,IAMnD;MANoD;AAC7E,IAAA,QAD6E;AAE7E,IAAA,SAAS,GAAG,EAFiE;AAG7E,IAAA,KAAK,GAAG,EAHqE;AAI7E,IAAA,YAAY,GAAG;AAJ8D,MAI1D,E;MAChB,KAAK,GAAA,MAAA,CAAA,EAAA,EALqE,CAAA,UAAA,EAAA,WAAA,EAAA,OAAA,EAAA,cAAA,CAKrE,C;;AACkB,SAC1B,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,eAAR,EAAyB,SAAzB,EAAoC,YAAY,IAAI,MAAM,CAAC,SAAP,CAAiB,YAAjB,CAApD;AAAnB,GAAA,EAA4G,KAA5G,CAAA,EACG,KAAK,CAAC,QAAN,CAAe,GAAf,CACC,QADD,EAEC,KAAK,IACH,KAAK,CAAC,cAAN,CAAqB,KAArB,KACA,KAAK,CAAC,YAAN,CAAmB,KAAnB,EAAqD;AACnD,IAAA;AADmD,GAArD,CAJH,CADH,CAD0B;AAW3B,CAjBM;AAkBP,eAAe,CAAC,WAAhB,GAA8B,iBAA9B","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nexport const DataListItemRow = (_a) => {\n    var { children, className = '', rowid = '', wrapModifier = null } = _a, props = __rest(_a, [\"children\", \"className\", \"rowid\", \"wrapModifier\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.dataListItemRow, className, wrapModifier && styles.modifiers[wrapModifier]) }, props), React.Children.map(children, child => React.isValidElement(child) &&\n        React.cloneElement(child, {\n            rowid\n        }))));\n};\nDataListItemRow.displayName = 'DataListItemRow';\n//# sourceMappingURL=DataListItemRow.js.map"]},"metadata":{},"sourceType":"module"}