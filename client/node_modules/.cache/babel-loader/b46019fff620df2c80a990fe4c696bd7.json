{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { ProgressContainer, ProgressMeasureLocation } from './ProgressContainer';\nimport { getUniqueId } from '../../helpers/util';\nexport var ProgressSize;\n\n(function (ProgressSize) {\n  ProgressSize[\"sm\"] = \"sm\";\n  ProgressSize[\"md\"] = \"md\";\n  ProgressSize[\"lg\"] = \"lg\";\n})(ProgressSize || (ProgressSize = {}));\n\nexport class Progress extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.id = this.props.id || getUniqueId();\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      id,\n      size,\n\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      className,\n      value,\n      title,\n      label,\n      variant,\n      measureLocation,\n      min,\n      max,\n      valueText,\n      isTitleTruncated,\n      tooltipPosition,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy\n    } = _a,\n          props = __rest(_a, [\"id\", \"size\", \"className\", \"value\", \"title\", \"label\", \"variant\", \"measureLocation\", \"min\", \"max\", \"valueText\", \"isTitleTruncated\", \"tooltipPosition\", 'aria-label', 'aria-labelledby']);\n\n    const progressBarAriaProps = {\n      'aria-valuemin': min,\n      'aria-valuenow': value,\n      'aria-valuemax': max\n    };\n\n    if (title || ariaLabelledBy) {\n      progressBarAriaProps['aria-labelledby'] = title ? `${this.id}-description` : ariaLabelledBy;\n    }\n\n    if (ariaLabel) {\n      progressBarAriaProps['aria-label'] = ariaLabel;\n    }\n\n    if (valueText) {\n      progressBarAriaProps['aria-valuetext'] = valueText;\n    }\n\n    if (!title && !ariaLabelledBy && !ariaLabel) {\n      /* eslint-disable no-console */\n      console.warn('One of aria-label or aria-labelledby properties should be passed when using the progress component without a title.');\n    }\n\n    const scaledValue = Math.min(100, Math.max(0, Math.floor((value - min) / (max - min) * 100)));\n    return React.createElement(\"div\", Object.assign({}, props, {\n      className: css(styles.progress, styles.modifiers[variant], ['inside', 'outside'].includes(measureLocation) && styles.modifiers[measureLocation], measureLocation === 'inside' ? styles.modifiers[ProgressSize.lg] : styles.modifiers[size], !title && styles.modifiers.singleline, className),\n      id: this.id\n    }), React.createElement(ProgressContainer, {\n      parentId: this.id,\n      value: scaledValue,\n      title: title,\n      label: label,\n      variant: variant,\n      measureLocation: measureLocation,\n      progressBarAriaProps: progressBarAriaProps,\n      isTitleTruncated: isTitleTruncated,\n      tooltipPosition: tooltipPosition\n    }));\n  }\n\n}\nProgress.displayName = 'Progress';\nProgress.defaultProps = {\n  className: '',\n  measureLocation: ProgressMeasureLocation.top,\n  variant: null,\n  id: '',\n  title: '',\n  min: 0,\n  max: 100,\n  size: null,\n  label: null,\n  value: 0,\n  valueText: null,\n  isTitleTruncated: false,\n  tooltipPosition: 'top',\n  'aria-label': null,\n  'aria-labelledby': null\n};","map":{"version":3,"sources":["../../../../src/components/Progress/Progress.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { ProgressContainer, ProgressMeasureLocation } from './ProgressContainer';\nimport { getUniqueId } from '../../helpers/util';\nexport var ProgressSize;\n(function (ProgressSize) {\n    ProgressSize[\"sm\"] = \"sm\";\n    ProgressSize[\"md\"] = \"md\";\n    ProgressSize[\"lg\"] = \"lg\";\n})(ProgressSize || (ProgressSize = {}));\nexport class Progress extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.id = this.props.id || getUniqueId();\n    }\n    render() {\n        const _a = this.props, { \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        id, size, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        className, value, title, label, variant, measureLocation, min, max, valueText, isTitleTruncated, tooltipPosition, 'aria-label': ariaLabel, 'aria-labelledby': ariaLabelledBy } = _a, props = __rest(_a, [\"id\", \"size\", \"className\", \"value\", \"title\", \"label\", \"variant\", \"measureLocation\", \"min\", \"max\", \"valueText\", \"isTitleTruncated\", \"tooltipPosition\", 'aria-label', 'aria-labelledby']);\n        const progressBarAriaProps = {\n            'aria-valuemin': min,\n            'aria-valuenow': value,\n            'aria-valuemax': max\n        };\n        if (title || ariaLabelledBy) {\n            progressBarAriaProps['aria-labelledby'] = title ? `${this.id}-description` : ariaLabelledBy;\n        }\n        if (ariaLabel) {\n            progressBarAriaProps['aria-label'] = ariaLabel;\n        }\n        if (valueText) {\n            progressBarAriaProps['aria-valuetext'] = valueText;\n        }\n        if (!title && !ariaLabelledBy && !ariaLabel) {\n            /* eslint-disable no-console */\n            console.warn('One of aria-label or aria-labelledby properties should be passed when using the progress component without a title.');\n        }\n        const scaledValue = Math.min(100, Math.max(0, Math.floor(((value - min) / (max - min)) * 100)));\n        return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.progress, styles.modifiers[variant], ['inside', 'outside'].includes(measureLocation) && styles.modifiers[measureLocation], measureLocation === 'inside' ? styles.modifiers[ProgressSize.lg] : styles.modifiers[size], !title && styles.modifiers.singleline, className), id: this.id }),\n            React.createElement(ProgressContainer, { parentId: this.id, value: scaledValue, title: title, label: label, variant: variant, measureLocation: measureLocation, progressBarAriaProps: progressBarAriaProps, isTitleTruncated: isTitleTruncated, tooltipPosition: tooltipPosition })));\n    }\n}\nProgress.displayName = 'Progress';\nProgress.defaultProps = {\n    className: '',\n    measureLocation: ProgressMeasureLocation.top,\n    variant: null,\n    id: '',\n    title: '',\n    min: 0,\n    max: 100,\n    size: null,\n    label: null,\n    value: 0,\n    valueText: null,\n    isTitleTruncated: false,\n    tooltipPosition: 'top',\n    'aria-label': null,\n    'aria-labelledby': null\n};\n//# sourceMappingURL=Progress.js.map"]},"metadata":{},"sourceType":"module"}