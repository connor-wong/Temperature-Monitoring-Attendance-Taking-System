{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport EllipsisVIcon from \"@patternfly/react-icons/dist/esm/icons/ellipsis-v-icon\";\nimport { Toggle } from './Toggle';\nexport const KebabToggle = _a => {\n  var {\n    id = '',\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    children = null,\n    className = '',\n    isOpen = false,\n    'aria-label': ariaLabel = 'Actions',\n    parentRef = null,\n    getMenuRef = null,\n    isActive = false,\n    isPlain = false,\n    isDisabled = false,\n    bubbleEvent = false,\n    onToggle = () => undefined,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref\n  } = _a,\n      // Types of Ref are different for React.FC vs React.Component\n  props = __rest(_a, [\"id\", \"children\", \"className\", \"isOpen\", 'aria-label', \"parentRef\", \"getMenuRef\", \"isActive\", \"isPlain\", \"isDisabled\", \"bubbleEvent\", \"onToggle\", \"ref\"]);\n\n  return React.createElement(Toggle, Object.assign({\n    id: id,\n    className: className,\n    isOpen: isOpen,\n    \"aria-label\": ariaLabel,\n    parentRef: parentRef,\n    getMenuRef: getMenuRef,\n    isActive: isActive,\n    isPlain: isPlain,\n    isDisabled: isDisabled,\n    onToggle: onToggle,\n    bubbleEvent: bubbleEvent\n  }, props), React.createElement(EllipsisVIcon, null));\n};\nKebabToggle.displayName = 'KebabToggle';","map":{"version":3,"sources":["../../../../src/components/Dropdown/KebabToggle.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,OAAO,aAAP,MAAoB,wDAApB;AACA,SAAS,MAAT,QAAuB,UAAvB;AA+BA,OAAO,MAAM,WAAW,GAA+C,EAAD,IAiB/C;MAjBgD;AACrE,IAAA,EAAE,GAAG,EADgE;AAErE;AACA,IAAA,QAAQ,GAAG,IAH0D;AAIrE,IAAA,SAAS,GAAG,EAJyD;AAKrE,IAAA,MAAM,GAAG,KAL4D;AAMrE,kBAAc,SAAS,GAAG,SAN2C;AAOrE,IAAA,SAAS,GAAG,IAPyD;AAQrE,IAAA,UAAU,GAAG,IARwD;AASrE,IAAA,QAAQ,GAAG,KAT0D;AAUrE,IAAA,OAAO,GAAG,KAV2D;AAWrE,IAAA,UAAU,GAAG,KAXwD;AAYrE,IAAA,WAAW,GAAG,KAZuD;AAarE,IAAA,QAAQ,GAAG,MAAM,SAboD;AAcrE;AACA,IAAA;AAfqE,MAelE,E;MAAE;AACF,EAAA,KAAK,GAAA,MAAA,CAAA,EAAA,EAhB6D,CAAA,IAAA,EAAA,UAAA,EAAA,WAAA,EAAA,QAAA,EAAA,YAAA,EAAA,WAAA,EAAA,YAAA,EAAA,UAAA,EAAA,SAAA,EAAA,YAAA,EAAA,aAAA,EAAA,UAAA,EAAA,KAAA,CAgB7D,C;;AACc,SACtB,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA;AACL,IAAA,EAAE,EAAE,EADC;AAEL,IAAA,SAAS,EAAE,SAFN;AAGL,IAAA,MAAM,EAAE,MAHH;AAGS,kBACF,SAJP;AAKL,IAAA,SAAS,EAAE,SALN;AAML,IAAA,UAAU,EAAE,UANP;AAOL,IAAA,QAAQ,EAAE,QAPL;AAQL,IAAA,OAAO,EAAE,OARJ;AASL,IAAA,UAAU,EAAE,UATP;AAUL,IAAA,QAAQ,EAAE,QAVL;AAWL,IAAA,WAAW,EAAE;AAXR,GAAA,EAYD,KAZC,CAAP,EAcE,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc,IAAd,CAdF,CADsB;AAiBvB,CAlCM;AAmCP,WAAW,CAAC,WAAZ,GAA0B,aAA1B","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport EllipsisVIcon from \"@patternfly/react-icons/dist/esm/icons/ellipsis-v-icon\";\nimport { Toggle } from './Toggle';\nexport const KebabToggle = (_a) => {\n    var { id = '', \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    children = null, className = '', isOpen = false, 'aria-label': ariaLabel = 'Actions', parentRef = null, getMenuRef = null, isActive = false, isPlain = false, isDisabled = false, bubbleEvent = false, onToggle = () => undefined, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref } = _a, // Types of Ref are different for React.FC vs React.Component\n    props = __rest(_a, [\"id\", \"children\", \"className\", \"isOpen\", 'aria-label', \"parentRef\", \"getMenuRef\", \"isActive\", \"isPlain\", \"isDisabled\", \"bubbleEvent\", \"onToggle\", \"ref\"]);\n    return (React.createElement(Toggle, Object.assign({ id: id, className: className, isOpen: isOpen, \"aria-label\": ariaLabel, parentRef: parentRef, getMenuRef: getMenuRef, isActive: isActive, isPlain: isPlain, isDisabled: isDisabled, onToggle: onToggle, bubbleEvent: bubbleEvent }, props),\n        React.createElement(EllipsisVIcon, null)));\n};\nKebabToggle.displayName = 'KebabToggle';\n//# sourceMappingURL=KebabToggle.js.map"]},"metadata":{},"sourceType":"module"}