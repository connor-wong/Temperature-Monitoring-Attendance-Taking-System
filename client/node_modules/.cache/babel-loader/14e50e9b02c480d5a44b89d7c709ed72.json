{"ast":null,"code":"/**\n * @param modifiers\n */\nexport default function mergeByName(modifiers) {\n  const merged = modifiers.reduce((merged, current) => {\n    const existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign(Object.assign(Object.assign({}, existing), current), {\n      options: Object.assign(Object.assign({}, existing.options), current.options),\n      data: Object.assign(Object.assign({}, existing.data), current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(key => merged[key]);\n}","map":{"version":3,"sources":["../../../../../../../src/helpers/Popper/thirdparty/popper-core/utils/mergeByName.ts"],"names":[],"mappings":"AAGA;;AAEG;AACH,eAAc,SAAU,WAAV,CAAsB,SAAtB,EAA8D;AAC1E,QAAM,MAAM,GAAG,SAAS,CAAC,MAAV,CAAiB,CAAC,MAAD,EAAS,OAAT,KAAoB;AAClD,UAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,IAAT,CAAvB;AACA,IAAA,MAAM,CAAC,OAAO,CAAC,IAAT,CAAN,GAAuB,QAAQ,GAC5B,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACM,QADN,CAAA,EAEM,OAFN,CAAA,EAEa;AACV,MAAA,OAAO,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAO,QAAQ,CAAC,OAAhB,CAAA,EAA4B,OAAO,CAAC,OAApC,CADG;AAEV,MAAA,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAO,QAAQ,CAAC,IAAhB,CAAA,EAAyB,OAAO,CAAC,IAAjC;AAFM,KAFb,CAD4B,GAO3B,OAPJ;AAQA,WAAO,MAAP;AACD,GAXc,EAWZ,EAXY,CAAf,CAD0E,CAc1E;;AACA,SAAO,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,GAApB,CAAwB,GAAG,IAAI,MAAM,CAAC,GAAD,CAArC,CAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * @param modifiers\n */\nexport default function mergeByName(modifiers) {\n    const merged = modifiers.reduce((merged, current) => {\n        const existing = merged[current.name];\n        merged[current.name] = existing\n            ? Object.assign(Object.assign(Object.assign({}, existing), current), { options: Object.assign(Object.assign({}, existing.options), current.options), data: Object.assign(Object.assign({}, existing.data), current.data) }) : current;\n        return merged;\n    }, {});\n    // IE11 does not support Object.values\n    return Object.keys(merged).map(key => merged[key]);\n}\n//# sourceMappingURL=mergeByName.js.map"]},"metadata":{},"sourceType":"module"}