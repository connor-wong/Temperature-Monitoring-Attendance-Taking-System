{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Backdrop/backdrop';\nimport { canUseDOM } from '../../helpers';\nimport { KEY_CODES } from '../../helpers/constants';\nimport { AboutModalContainer } from './AboutModalContainer';\nexport class AboutModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.id = AboutModal.currentId++;\n    this.ariaLabelledBy = `pf-about-modal-title-${this.id}`;\n    this.ariaDescribedBy = `pf-about-modal-content-${this.id}`;\n\n    this.handleEscKeyClick = event => {\n      if (event.keyCode === KEY_CODES.ESCAPE_KEY && this.props.isOpen) {\n        this.props.onClose();\n      }\n    };\n\n    this.toggleSiblingsFromScreenReaders = hide => {\n      const {\n        appendTo\n      } = this.props;\n      const target = this.getElement(appendTo);\n      const bodyChildren = target.children;\n\n      for (const child of Array.from(bodyChildren)) {\n        if (child !== this.state.container) {\n          hide ? child.setAttribute('aria-hidden', '' + hide) : child.removeAttribute('aria-hidden');\n        }\n      }\n    };\n\n    this.getElement = appendTo => {\n      if (typeof appendTo === 'function') {\n        return appendTo();\n      }\n\n      return appendTo || document.body;\n    };\n\n    this.state = {\n      container: undefined\n    };\n\n    if (props.brandImageSrc && !props.brandImageAlt) {\n      // eslint-disable-next-line no-console\n      console.error('AboutModal:', 'brandImageAlt is required when a brandImageSrc is specified');\n    }\n  }\n\n  componentDidMount() {\n    const container = document.createElement('div');\n    const target = this.getElement(this.props.appendTo);\n    this.setState({\n      container\n    });\n    target.appendChild(container);\n    target.addEventListener('keydown', this.handleEscKeyClick, false);\n\n    if (this.props.isOpen) {\n      target.classList.add(css(styles.backdropOpen));\n    } else {\n      target.classList.remove(css(styles.backdropOpen));\n    }\n  }\n\n  componentDidUpdate() {\n    const target = this.getElement(this.props.appendTo);\n\n    if (this.props.isOpen) {\n      target.classList.add(css(styles.backdropOpen));\n      this.toggleSiblingsFromScreenReaders(true);\n    } else {\n      target.classList.remove(css(styles.backdropOpen));\n      this.toggleSiblingsFromScreenReaders(false);\n    }\n  }\n\n  componentWillUnmount() {\n    const target = this.getElement(this.props.appendTo);\n\n    if (this.state.container) {\n      target.removeChild(this.state.container);\n    }\n\n    target.removeEventListener('keydown', this.handleEscKeyClick, false);\n    target.classList.remove(css(styles.backdropOpen));\n  }\n\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const _a = this.props,\n          {\n      appendTo\n    } = _a,\n          props = __rest(_a, [\"appendTo\"]);\n\n    const {\n      container\n    } = this.state;\n\n    if (!canUseDOM || !container) {\n      return null;\n    }\n\n    return ReactDOM.createPortal(React.createElement(AboutModalContainer, Object.assign({\n      aboutModalBoxHeaderId: this.ariaLabelledBy,\n      aboutModalBoxContentId: this.ariaDescribedBy\n    }, props)), container);\n  }\n\n}\nAboutModal.displayName = 'AboutModal';\nAboutModal.currentId = 0;\nAboutModal.defaultProps = {\n  className: '',\n  isOpen: false,\n  onClose: () => undefined,\n  productName: '',\n  trademark: '',\n  backgroundImageSrc: '',\n  noAboutModalBoxContentContainer: false,\n  appendTo: null\n};","map":{"version":3,"sources":["../../../../src/components/AboutModal/AboutModal.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Backdrop/backdrop';\nimport { canUseDOM } from '../../helpers';\nimport { KEY_CODES } from '../../helpers/constants';\nimport { AboutModalContainer } from './AboutModalContainer';\nexport class AboutModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.id = AboutModal.currentId++;\n        this.ariaLabelledBy = `pf-about-modal-title-${this.id}`;\n        this.ariaDescribedBy = `pf-about-modal-content-${this.id}`;\n        this.handleEscKeyClick = (event) => {\n            if (event.keyCode === KEY_CODES.ESCAPE_KEY && this.props.isOpen) {\n                this.props.onClose();\n            }\n        };\n        this.toggleSiblingsFromScreenReaders = (hide) => {\n            const { appendTo } = this.props;\n            const target = this.getElement(appendTo);\n            const bodyChildren = target.children;\n            for (const child of Array.from(bodyChildren)) {\n                if (child !== this.state.container) {\n                    hide ? child.setAttribute('aria-hidden', '' + hide) : child.removeAttribute('aria-hidden');\n                }\n            }\n        };\n        this.getElement = (appendTo) => {\n            if (typeof appendTo === 'function') {\n                return appendTo();\n            }\n            return appendTo || document.body;\n        };\n        this.state = {\n            container: undefined\n        };\n        if (props.brandImageSrc && !props.brandImageAlt) {\n            // eslint-disable-next-line no-console\n            console.error('AboutModal:', 'brandImageAlt is required when a brandImageSrc is specified');\n        }\n    }\n    componentDidMount() {\n        const container = document.createElement('div');\n        const target = this.getElement(this.props.appendTo);\n        this.setState({ container });\n        target.appendChild(container);\n        target.addEventListener('keydown', this.handleEscKeyClick, false);\n        if (this.props.isOpen) {\n            target.classList.add(css(styles.backdropOpen));\n        }\n        else {\n            target.classList.remove(css(styles.backdropOpen));\n        }\n    }\n    componentDidUpdate() {\n        const target = this.getElement(this.props.appendTo);\n        if (this.props.isOpen) {\n            target.classList.add(css(styles.backdropOpen));\n            this.toggleSiblingsFromScreenReaders(true);\n        }\n        else {\n            target.classList.remove(css(styles.backdropOpen));\n            this.toggleSiblingsFromScreenReaders(false);\n        }\n    }\n    componentWillUnmount() {\n        const target = this.getElement(this.props.appendTo);\n        if (this.state.container) {\n            target.removeChild(this.state.container);\n        }\n        target.removeEventListener('keydown', this.handleEscKeyClick, false);\n        target.classList.remove(css(styles.backdropOpen));\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _a = this.props, { appendTo } = _a, props = __rest(_a, [\"appendTo\"]);\n        const { container } = this.state;\n        if (!canUseDOM || !container) {\n            return null;\n        }\n        return ReactDOM.createPortal(React.createElement(AboutModalContainer, Object.assign({ aboutModalBoxHeaderId: this.ariaLabelledBy, aboutModalBoxContentId: this.ariaDescribedBy }, props)), container);\n    }\n}\nAboutModal.displayName = 'AboutModal';\nAboutModal.currentId = 0;\nAboutModal.defaultProps = {\n    className: '',\n    isOpen: false,\n    onClose: () => undefined,\n    productName: '',\n    trademark: '',\n    backgroundImageSrc: '',\n    noAboutModalBoxContentContainer: false,\n    appendTo: null\n};\n//# sourceMappingURL=AboutModal.js.map"]},"metadata":{},"sourceType":"module"}