{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button } from '../Button';\nimport TimesIcon from \"@patternfly/react-icons/dist/esm/icons/times-icon\";\nimport { FindRefWrapper } from '../../helpers/Popper/FindRefWrapper';\nexport const PopoverCloseButton = _a => {\n  var {\n    onClose = () => undefined\n  } = _a,\n      props = __rest(_a, [\"onClose\"]);\n\n  const [closeButtonElement, setCloseButtonElement] = React.useState(null);\n  React.useEffect(() => {\n    closeButtonElement && closeButtonElement.addEventListener('click', onClose, false);\n    return () => {\n      closeButtonElement && closeButtonElement.removeEventListener('click', onClose, false);\n    };\n  }, [closeButtonElement]);\n  return React.createElement(FindRefWrapper, {\n    onFoundRef: foundRef => setCloseButtonElement(foundRef)\n  }, React.createElement(Button, Object.assign({\n    variant: \"plain\",\n    \"aria-label\": true\n  }, props, {\n    style: {\n      pointerEvents: 'auto'\n    }\n  }), React.createElement(TimesIcon, null)));\n};\nPopoverCloseButton.displayName = 'PopoverCloseButton';","map":{"version":3,"sources":["../../../../src/components/Popover/PopoverCloseButton.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,MAAT,QAAuB,WAAvB;AACA,OAAO,SAAP,MAAgB,mDAAhB;AACA,SAAS,cAAT,QAA+B,qCAA/B;AAEA,OAAO,MAAM,kBAAkB,GAAsD,EAAD,IAGtD;MAHuD;AACnF,IAAA,OAAO,GAAG,MAAM;AADmE,MAClD,E;MAC9B,KAAK,GAAA,MAAA,CAAA,EAAA,EAF2E,CAAA,SAAA,CAE3E,C;;AAER,QAAM,CAAC,kBAAD,EAAqB,qBAArB,IAA8C,KAAK,CAAC,QAAN,CAAe,IAAf,CAApD;AACA,EAAA,KAAK,CAAC,SAAN,CAAgB,MAAK;AACnB,IAAA,kBAAkB,IAAI,kBAAkB,CAAC,gBAAnB,CAAoC,OAApC,EAA6C,OAA7C,EAAsD,KAAtD,CAAtB;AACA,WAAO,MAAK;AACV,MAAA,kBAAkB,IAAI,kBAAkB,CAAC,mBAAnB,CAAuC,OAAvC,EAAgD,OAAhD,EAAyD,KAAzD,CAAtB;AACD,KAFD;AAGD,GALD,EAKG,CAAC,kBAAD,CALH;AAMA,SACE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;AAAC,IAAA,UAAU,EAAG,QAAD,IAAmB,qBAAqB,CAAC,QAAD;AAArD,GAAf,EACE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,OAAO,EAAC,OAAT;AAAgB,kBAAA;AAAhB,GAAA,EAAgC,KAAhC,EAAqC;AAAE,IAAA,KAAK,EAAE;AAAE,MAAA,aAAa,EAAE;AAAjB;AAAT,GAArC,CAAP,EACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,IAAV,CADF,CADF,CADF;AAOD,CAlBM;AAmBP,kBAAkB,CAAC,WAAnB,GAAiC,oBAAjC","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button } from '../Button';\nimport TimesIcon from \"@patternfly/react-icons/dist/esm/icons/times-icon\";\nimport { FindRefWrapper } from '../../helpers/Popper/FindRefWrapper';\nexport const PopoverCloseButton = (_a) => {\n    var { onClose = () => undefined } = _a, props = __rest(_a, [\"onClose\"]);\n    const [closeButtonElement, setCloseButtonElement] = React.useState(null);\n    React.useEffect(() => {\n        closeButtonElement && closeButtonElement.addEventListener('click', onClose, false);\n        return () => {\n            closeButtonElement && closeButtonElement.removeEventListener('click', onClose, false);\n        };\n    }, [closeButtonElement]);\n    return (React.createElement(FindRefWrapper, { onFoundRef: (foundRef) => setCloseButtonElement(foundRef) },\n        React.createElement(Button, Object.assign({ variant: \"plain\", \"aria-label\": true }, props, { style: { pointerEvents: 'auto' } }),\n            React.createElement(TimesIcon, null))));\n};\nPopoverCloseButton.displayName = 'PopoverCloseButton';\n//# sourceMappingURL=PopoverCloseButton.js.map"]},"metadata":{},"sourceType":"module"}