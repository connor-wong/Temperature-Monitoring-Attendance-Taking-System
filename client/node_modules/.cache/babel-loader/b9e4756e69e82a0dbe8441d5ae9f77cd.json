{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Slider/slider';\nimport { css } from '@patternfly/react-styles';\nimport { SliderStep } from './SliderStep';\nimport { InputGroup, InputGroupText } from '../InputGroup';\nimport { TextInput } from '../TextInput';\n\nconst getPercentage = (current, max) => 100 * current / max;\n\nexport const Slider = _a => {\n  var {\n    className,\n    value = 0,\n    customSteps,\n    areCustomStepsContinuous = false,\n    isDisabled = false,\n    isInputVisible = false,\n    inputValue = 0,\n    inputLabel,\n    inputAriaLabel = 'Slider value input',\n    thumbAriaLabel = 'Value',\n    inputPosition = 'right',\n    onChange,\n    leftActions,\n    rightActions,\n    step = 1,\n    min = 0,\n    max = 100,\n    showTicks = false\n  } = _a,\n      props = __rest(_a, [\"className\", \"value\", \"customSteps\", \"areCustomStepsContinuous\", \"isDisabled\", \"isInputVisible\", \"inputValue\", \"inputLabel\", \"inputAriaLabel\", \"thumbAriaLabel\", \"inputPosition\", \"onChange\", \"leftActions\", \"rightActions\", \"step\", \"min\", \"max\", \"showTicks\"]);\n\n  const sliderRailRef = React.useRef();\n  const thumbRef = React.useRef();\n  const [localValue, setValue] = useState(value);\n  const [localInputValue, setLocalInputValue] = useState(inputValue);\n  React.useEffect(() => {\n    setValue(value);\n  }, [value]);\n  React.useEffect(() => {\n    setLocalInputValue(inputValue);\n  }, [inputValue]);\n  let diff = 0;\n  let snapValue; // calculate style value percentage\n\n  const stylePercent = (localValue - min) * 100 / (max - min);\n  const style = {\n    '--pf-c-slider--value': `${stylePercent}%`\n  };\n\n  const onChangeHandler = value => {\n    setLocalInputValue(Number(value));\n  };\n\n  const handleKeyPressOnInput = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n\n      if (onChange) {\n        onChange(localValue, localInputValue);\n      }\n    }\n  };\n\n  const onInputFocus = e => {\n    e.stopPropagation();\n  };\n\n  const onThumbClick = () => {\n    thumbRef.current.focus();\n  };\n\n  const onBlur = () => {\n    if (onChange) {\n      onChange(localValue, localInputValue);\n    }\n  };\n\n  const findAriaTextValue = () => {\n    if (!areCustomStepsContinuous && customSteps) {\n      const matchingStep = customSteps.find(stepObj => stepObj.value === localValue);\n\n      if (matchingStep) {\n        return matchingStep.label;\n      }\n    }\n\n    return localValue.toString();\n  };\n\n  const handleThumbDragEnd = () => {\n    document.removeEventListener('mousemove', callbackThumbMove);\n    document.removeEventListener('mouseup', callbackThumbUp);\n    document.removeEventListener('touchmove', callbackThumbMove);\n    document.removeEventListener('touchend', callbackThumbUp);\n    document.removeEventListener('touchcancel', callbackThumbUp);\n  };\n\n  const handleMouseDown = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    diff = e.clientX - thumbRef.current.getBoundingClientRect().left;\n    document.addEventListener('mousemove', callbackThumbMove);\n    document.addEventListener('mouseup', callbackThumbUp);\n  };\n\n  const handleTouchStart = e => {\n    e.stopPropagation();\n    diff = e.touches[0].clientX - thumbRef.current.getBoundingClientRect().left;\n    document.addEventListener('touchmove', callbackThumbMove, {\n      passive: false\n    });\n    document.addEventListener('touchend', callbackThumbUp);\n    document.addEventListener('touchcancel', callbackThumbUp);\n  };\n\n  const onSliderRailClick = e => {\n    handleThumbMove(e);\n\n    if (snapValue && !areCustomStepsContinuous) {\n      thumbRef.current.style.setProperty('--pf-c-slider--value', `${snapValue}%`);\n      setValue(snapValue);\n\n      if (onChange) {\n        onChange(snapValue);\n      }\n    }\n  };\n\n  const handleThumbMove = e => {\n    if (e.type === 'touchmove') {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n\n    const clientPosition = e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\n    let newPosition = clientPosition - diff - sliderRailRef.current.getBoundingClientRect().left;\n    const end = sliderRailRef.current.offsetWidth - thumbRef.current.offsetWidth;\n    const start = 0;\n\n    if (newPosition < start) {\n      newPosition = 0;\n    }\n\n    if (newPosition > end) {\n      newPosition = end;\n    }\n\n    const newPercentage = getPercentage(newPosition, end);\n    thumbRef.current.style.setProperty('--pf-c-slider--value', `${newPercentage}%`); // convert percentage to value\n\n    const newValue = newPercentage * (max - min) / 100 + min;\n    setValue(newValue);\n\n    if (!customSteps) {\n      // snap to new value if not custom steps\n      snapValue = Math.round((newValue - min) / step) * step + min;\n      thumbRef.current.style.setProperty('--pf-c-slider--value', `${snapValue}%`);\n      setValue(snapValue);\n    }\n    /* If custom steps are discrete, snap to closest step value */\n\n\n    if (!areCustomStepsContinuous && customSteps) {\n      const stepIndex = customSteps.findIndex(stepObj => stepObj.value >= newPercentage);\n\n      if (customSteps[stepIndex].value === newPercentage) {\n        snapValue = customSteps[stepIndex].value;\n      } else {\n        const midpoint = (customSteps[stepIndex].value + customSteps[stepIndex - 1].value) / 2;\n\n        if (midpoint > newPercentage) {\n          snapValue = customSteps[stepIndex - 1].value;\n        } else {\n          snapValue = customSteps[stepIndex].value;\n        }\n      }\n\n      setValue(snapValue);\n    } // Call onchange callback\n\n\n    if (onChange) {\n      if (snapValue !== undefined) {\n        onChange(snapValue);\n      } else {\n        onChange(newValue);\n      }\n    }\n  };\n\n  const callbackThumbMove = React.useCallback(handleThumbMove, []);\n  const callbackThumbUp = React.useCallback(handleThumbDragEnd, []);\n\n  const handleThumbKeys = e => {\n    const key = e.key;\n\n    if (key !== 'ArrowLeft' && key !== 'ArrowRight') {\n      return;\n    }\n\n    e.preventDefault();\n    let newValue = localValue;\n\n    if (!areCustomStepsContinuous && customSteps) {\n      const stepIndex = customSteps.findIndex(stepObj => stepObj.value === localValue);\n\n      if (key === 'ArrowRight') {\n        if (stepIndex + 1 < customSteps.length) {\n          {\n            newValue = customSteps[stepIndex + 1].value;\n          }\n        }\n      } else if (key === 'ArrowLeft') {\n        if (stepIndex - 1 >= 0) {\n          newValue = customSteps[stepIndex - 1].value;\n        }\n      }\n    } else {\n      if (key === 'ArrowRight') {\n        newValue = localValue + step <= max ? localValue + step : max;\n      } else if (key === 'ArrowLeft') {\n        newValue = localValue - step >= min ? localValue - step : min;\n      }\n    }\n\n    if (newValue !== localValue) {\n      thumbRef.current.style.setProperty('--pf-c-slider--value', `${newValue}%`);\n      setValue(newValue);\n\n      if (onChange) {\n        onChange(newValue);\n      }\n    }\n  };\n\n  const displayInput = () => {\n    const textInput = React.createElement(TextInput, {\n      className: css(styles.formControl),\n      isDisabled: isDisabled,\n      type: \"number\",\n      value: localInputValue,\n      \"aria-label\": inputAriaLabel,\n      onKeyDown: handleKeyPressOnInput,\n      onChange: onChangeHandler,\n      onClick: onInputFocus,\n      onFocus: onInputFocus,\n      onBlur: onBlur\n    });\n\n    if (inputLabel) {\n      return React.createElement(InputGroup, null, textInput, React.createElement(InputGroupText, {\n        variant: \"plain\"\n      }, \" \", inputLabel));\n    } else {\n      return textInput;\n    }\n  };\n\n  const buildSteps = () => {\n    const builtSteps = [];\n\n    for (let i = min; i <= max; i = i + step) {\n      const stepValue = (i - min) * 100 / (max - min);\n      builtSteps.push(React.createElement(SliderStep, {\n        key: i,\n        value: stepValue,\n        label: i.toString(),\n        isLabelHidden: true,\n        isActive: i <= localValue\n      }));\n    }\n\n    return builtSteps;\n  };\n\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.slider, className, isDisabled && styles.modifiers.disabled),\n    style: style\n  }, props), leftActions && React.createElement(\"div\", {\n    className: css(styles.sliderActions)\n  }, leftActions), React.createElement(\"div\", {\n    className: css(styles.sliderMain)\n  }, React.createElement(\"div\", {\n    className: css(styles.sliderRail),\n    ref: sliderRailRef,\n    onClick: !isDisabled ? onSliderRailClick : null\n  }, React.createElement(\"div\", {\n    className: css(styles.sliderRailTrack)\n  })), customSteps && React.createElement(\"div\", {\n    className: css(styles.sliderSteps),\n    \"aria-hidden\": \"true\"\n  }, customSteps.map(stepObj => React.createElement(SliderStep, {\n    key: stepObj.value,\n    value: stepObj.value,\n    label: stepObj.label,\n    isLabelHidden: stepObj.isLabelHidden,\n    isActive: stepObj.value <= localValue\n  }))), !customSteps && showTicks && React.createElement(\"div\", {\n    className: css(styles.sliderSteps),\n    \"aria-hidden\": \"true\"\n  }, buildSteps()), React.createElement(\"div\", {\n    className: css(styles.sliderThumb),\n    ref: thumbRef,\n    tabIndex: isDisabled ? -1 : 0,\n    role: \"slider\",\n    \"aria-valuemin\": customSteps ? customSteps[0].value : min,\n    \"aria-valuemax\": customSteps ? customSteps[customSteps.length - 1].value : max,\n    \"aria-valuenow\": localValue,\n    \"aria-valuetext\": findAriaTextValue(),\n    \"aria-label\": thumbAriaLabel,\n    \"aria-disabled\": isDisabled,\n    onMouseDown: !isDisabled ? handleMouseDown : null,\n    onTouchStart: !isDisabled ? handleTouchStart : null,\n    onKeyDown: !isDisabled ? handleThumbKeys : null,\n    onClick: !isDisabled ? onThumbClick : null\n  }), isInputVisible && inputPosition === 'aboveThumb' && React.createElement(\"div\", {\n    className: css(styles.sliderValue, styles.modifiers.floating)\n  }, displayInput())), isInputVisible && inputPosition === 'right' && React.createElement(\"div\", {\n    className: css(styles.sliderValue)\n  }, displayInput()), rightActions && React.createElement(\"div\", {\n    className: css(styles.sliderActions)\n  }, rightActions));\n};\nSlider.displayName = 'Slider';","map":{"version":3,"sources":["../../../../src/components/Slider/Slider.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Slider/slider';\nimport { css } from '@patternfly/react-styles';\nimport { SliderStep } from './SliderStep';\nimport { InputGroup, InputGroupText } from '../InputGroup';\nimport { TextInput } from '../TextInput';\nconst getPercentage = (current, max) => (100 * current) / max;\nexport const Slider = (_a) => {\n    var { className, value = 0, customSteps, areCustomStepsContinuous = false, isDisabled = false, isInputVisible = false, inputValue = 0, inputLabel, inputAriaLabel = 'Slider value input', thumbAriaLabel = 'Value', inputPosition = 'right', onChange, leftActions, rightActions, step = 1, min = 0, max = 100, showTicks = false } = _a, props = __rest(_a, [\"className\", \"value\", \"customSteps\", \"areCustomStepsContinuous\", \"isDisabled\", \"isInputVisible\", \"inputValue\", \"inputLabel\", \"inputAriaLabel\", \"thumbAriaLabel\", \"inputPosition\", \"onChange\", \"leftActions\", \"rightActions\", \"step\", \"min\", \"max\", \"showTicks\"]);\n    const sliderRailRef = React.useRef();\n    const thumbRef = React.useRef();\n    const [localValue, setValue] = useState(value);\n    const [localInputValue, setLocalInputValue] = useState(inputValue);\n    React.useEffect(() => {\n        setValue(value);\n    }, [value]);\n    React.useEffect(() => {\n        setLocalInputValue(inputValue);\n    }, [inputValue]);\n    let diff = 0;\n    let snapValue;\n    // calculate style value percentage\n    const stylePercent = ((localValue - min) * 100) / (max - min);\n    const style = { '--pf-c-slider--value': `${stylePercent}%` };\n    const onChangeHandler = (value) => {\n        setLocalInputValue(Number(value));\n    };\n    const handleKeyPressOnInput = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            if (onChange) {\n                onChange(localValue, localInputValue);\n            }\n        }\n    };\n    const onInputFocus = (e) => {\n        e.stopPropagation();\n    };\n    const onThumbClick = () => {\n        thumbRef.current.focus();\n    };\n    const onBlur = () => {\n        if (onChange) {\n            onChange(localValue, localInputValue);\n        }\n    };\n    const findAriaTextValue = () => {\n        if (!areCustomStepsContinuous && customSteps) {\n            const matchingStep = customSteps.find(stepObj => stepObj.value === localValue);\n            if (matchingStep) {\n                return matchingStep.label;\n            }\n        }\n        return localValue.toString();\n    };\n    const handleThumbDragEnd = () => {\n        document.removeEventListener('mousemove', callbackThumbMove);\n        document.removeEventListener('mouseup', callbackThumbUp);\n        document.removeEventListener('touchmove', callbackThumbMove);\n        document.removeEventListener('touchend', callbackThumbUp);\n        document.removeEventListener('touchcancel', callbackThumbUp);\n    };\n    const handleMouseDown = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        diff = e.clientX - thumbRef.current.getBoundingClientRect().left;\n        document.addEventListener('mousemove', callbackThumbMove);\n        document.addEventListener('mouseup', callbackThumbUp);\n    };\n    const handleTouchStart = (e) => {\n        e.stopPropagation();\n        diff = e.touches[0].clientX - thumbRef.current.getBoundingClientRect().left;\n        document.addEventListener('touchmove', callbackThumbMove, { passive: false });\n        document.addEventListener('touchend', callbackThumbUp);\n        document.addEventListener('touchcancel', callbackThumbUp);\n    };\n    const onSliderRailClick = (e) => {\n        handleThumbMove(e);\n        if (snapValue && !areCustomStepsContinuous) {\n            thumbRef.current.style.setProperty('--pf-c-slider--value', `${snapValue}%`);\n            setValue(snapValue);\n            if (onChange) {\n                onChange(snapValue);\n            }\n        }\n    };\n    const handleThumbMove = (e) => {\n        if (e.type === 'touchmove') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n        const clientPosition = e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\n        let newPosition = clientPosition - diff - sliderRailRef.current.getBoundingClientRect().left;\n        const end = sliderRailRef.current.offsetWidth - thumbRef.current.offsetWidth;\n        const start = 0;\n        if (newPosition < start) {\n            newPosition = 0;\n        }\n        if (newPosition > end) {\n            newPosition = end;\n        }\n        const newPercentage = getPercentage(newPosition, end);\n        thumbRef.current.style.setProperty('--pf-c-slider--value', `${newPercentage}%`);\n        // convert percentage to value\n        const newValue = (newPercentage * (max - min)) / 100 + min;\n        setValue(newValue);\n        if (!customSteps) {\n            // snap to new value if not custom steps\n            snapValue = Math.round((newValue - min) / step) * step + min;\n            thumbRef.current.style.setProperty('--pf-c-slider--value', `${snapValue}%`);\n            setValue(snapValue);\n        }\n        /* If custom steps are discrete, snap to closest step value */\n        if (!areCustomStepsContinuous && customSteps) {\n            const stepIndex = customSteps.findIndex(stepObj => stepObj.value >= newPercentage);\n            if (customSteps[stepIndex].value === newPercentage) {\n                snapValue = customSteps[stepIndex].value;\n            }\n            else {\n                const midpoint = (customSteps[stepIndex].value + customSteps[stepIndex - 1].value) / 2;\n                if (midpoint > newPercentage) {\n                    snapValue = customSteps[stepIndex - 1].value;\n                }\n                else {\n                    snapValue = customSteps[stepIndex].value;\n                }\n            }\n            setValue(snapValue);\n        }\n        // Call onchange callback\n        if (onChange) {\n            if (snapValue !== undefined) {\n                onChange(snapValue);\n            }\n            else {\n                onChange(newValue);\n            }\n        }\n    };\n    const callbackThumbMove = React.useCallback(handleThumbMove, []);\n    const callbackThumbUp = React.useCallback(handleThumbDragEnd, []);\n    const handleThumbKeys = (e) => {\n        const key = e.key;\n        if (key !== 'ArrowLeft' && key !== 'ArrowRight') {\n            return;\n        }\n        e.preventDefault();\n        let newValue = localValue;\n        if (!areCustomStepsContinuous && customSteps) {\n            const stepIndex = customSteps.findIndex(stepObj => stepObj.value === localValue);\n            if (key === 'ArrowRight') {\n                if (stepIndex + 1 < customSteps.length) {\n                    {\n                        newValue = customSteps[stepIndex + 1].value;\n                    }\n                }\n            }\n            else if (key === 'ArrowLeft') {\n                if (stepIndex - 1 >= 0) {\n                    newValue = customSteps[stepIndex - 1].value;\n                }\n            }\n        }\n        else {\n            if (key === 'ArrowRight') {\n                newValue = localValue + step <= max ? localValue + step : max;\n            }\n            else if (key === 'ArrowLeft') {\n                newValue = localValue - step >= min ? localValue - step : min;\n            }\n        }\n        if (newValue !== localValue) {\n            thumbRef.current.style.setProperty('--pf-c-slider--value', `${newValue}%`);\n            setValue(newValue);\n            if (onChange) {\n                onChange(newValue);\n            }\n        }\n    };\n    const displayInput = () => {\n        const textInput = (React.createElement(TextInput, { className: css(styles.formControl), isDisabled: isDisabled, type: \"number\", value: localInputValue, \"aria-label\": inputAriaLabel, onKeyDown: handleKeyPressOnInput, onChange: onChangeHandler, onClick: onInputFocus, onFocus: onInputFocus, onBlur: onBlur }));\n        if (inputLabel) {\n            return (React.createElement(InputGroup, null,\n                textInput,\n                React.createElement(InputGroupText, { variant: \"plain\" },\n                    \" \",\n                    inputLabel)));\n        }\n        else {\n            return textInput;\n        }\n    };\n    const buildSteps = () => {\n        const builtSteps = [];\n        for (let i = min; i <= max; i = i + step) {\n            const stepValue = ((i - min) * 100) / (max - min);\n            builtSteps.push(React.createElement(SliderStep, { key: i, value: stepValue, label: i.toString(), isLabelHidden: true, isActive: i <= localValue }));\n        }\n        return builtSteps;\n    };\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.slider, className, isDisabled && styles.modifiers.disabled), style: style }, props),\n        leftActions && React.createElement(\"div\", { className: css(styles.sliderActions) }, leftActions),\n        React.createElement(\"div\", { className: css(styles.sliderMain) },\n            React.createElement(\"div\", { className: css(styles.sliderRail), ref: sliderRailRef, onClick: !isDisabled ? onSliderRailClick : null },\n                React.createElement(\"div\", { className: css(styles.sliderRailTrack) })),\n            customSteps && (React.createElement(\"div\", { className: css(styles.sliderSteps), \"aria-hidden\": \"true\" }, customSteps.map(stepObj => (React.createElement(SliderStep, { key: stepObj.value, value: stepObj.value, label: stepObj.label, isLabelHidden: stepObj.isLabelHidden, isActive: stepObj.value <= localValue }))))),\n            !customSteps && showTicks && (React.createElement(\"div\", { className: css(styles.sliderSteps), \"aria-hidden\": \"true\" }, buildSteps())),\n            React.createElement(\"div\", { className: css(styles.sliderThumb), ref: thumbRef, tabIndex: isDisabled ? -1 : 0, role: \"slider\", \"aria-valuemin\": customSteps ? customSteps[0].value : min, \"aria-valuemax\": customSteps ? customSteps[customSteps.length - 1].value : max, \"aria-valuenow\": localValue, \"aria-valuetext\": findAriaTextValue(), \"aria-label\": thumbAriaLabel, \"aria-disabled\": isDisabled, onMouseDown: !isDisabled ? handleMouseDown : null, onTouchStart: !isDisabled ? handleTouchStart : null, onKeyDown: !isDisabled ? handleThumbKeys : null, onClick: !isDisabled ? onThumbClick : null }),\n            isInputVisible && inputPosition === 'aboveThumb' && (React.createElement(\"div\", { className: css(styles.sliderValue, styles.modifiers.floating) }, displayInput()))),\n        isInputVisible && inputPosition === 'right' && React.createElement(\"div\", { className: css(styles.sliderValue) }, displayInput()),\n        rightActions && React.createElement(\"div\", { className: css(styles.sliderActions) }, rightActions)));\n};\nSlider.displayName = 'Slider';\n//# sourceMappingURL=Slider.js.map"]},"metadata":{},"sourceType":"module"}