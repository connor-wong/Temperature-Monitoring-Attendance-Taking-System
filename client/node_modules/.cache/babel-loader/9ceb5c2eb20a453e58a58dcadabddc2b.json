{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\client\\\\src\\\\components\\\\Dashboard\\\\Classes\\\\AttendanceList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Container, ListGroup, Spinner, Button, Form } from \"react-bootstrap\";\nimport CsvDownload from \"react-json-to-csv\";\nimport AWS from \"aws-sdk\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AttendanceList = () => {\n  _s();\n\n  const [attendanceArray, setAttendanceArray] = useState([]);\n  const [attendanceList, setAttendanceList] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [showAttendance, setShowAttendance] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [selectedClass, setSelectedClass] = useState(\"\");\n  const [studentList, setstudentList] = useState([]);\n  const [absentList, setAbsentList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSave, setIsSave] = useState(false);\n  const [editStatus, setEditStatus] = useState(false);\n  const [removeStudents, setRemoveStudents] = useState([]);\n  const [addStudents, setAddStudents] = useState([]); // AWS DynamoDB Config\n\n  AWS.config.update({\n    region: \"ap-southeast-1\",\n    accessKeyId: \"AKIAVT4QMHKTJR6VFAEN\",\n    secretAccessKey: \"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\"\n  });\n  const dynamodbClient = new AWS.DynamoDB.DocumentClient();\n  const TABLE_NAME = \"March\";\n  useEffect(() => {\n    let mounted = true;\n    let dateArray = [];\n    let studentList = [];\n\n    const getData = async () => {\n      const response = await fetch(\"/aws/api\").then(res => res.json()); // Get Student Attendance\n\n      const studentArray = await fetch(\"/sheet/student\").then(res => res.json()); // Get Student List\n      // Convert array to object\n\n      studentArray.forEach(res => {\n        studentList.push({\n          Name: res[0],\n          ID: res[1]\n        });\n      });\n      response.sort((a, b) => {\n        // Sort to latest date\n        return new Date(b.Date) - new Date(a.Date);\n      });\n      response.forEach(data => {\n        dateArray.push(data.Date.split(\" \")[0]);\n      });\n      dateArray = [...new Set(dateArray)]; // Remove Duplicates\n\n      if (mounted) {\n        setAttendanceArray(response);\n        setDates(dateArray);\n        setstudentList(studentList);\n        setIsLoading(false);\n      }\n    };\n\n    getData();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const afterSaveHandler = async () => {\n    const response = await fetch(\"/aws/api\").then(res => res.json()); // Get Student Attendance\n\n    response.sort((a, b) => {\n      // Sort to latest date\n      return new Date(b.Date) - new Date(a.Date);\n    });\n    const attendance = response.filter((res // Filter Attendance By Selected Date\n    ) => res.Date.includes(selectedDate)); // Filter absent students\n\n    const absentList = studentList.filter(({\n      Name: id1\n    }) => !attendance.some(({\n      Name: id2\n    }) => id2 === id1));\n    setAttendanceList(attendance);\n    setAbsentList(absentList);\n  };\n\n  const getAttendanceList = date => {\n    let absentList;\n    const selectedDate = date;\n    const attendance = attendanceArray.filter((res // Filter Attendance By Selected Date\n    ) => res.Date.includes(selectedDate)); // Filter absent students\n\n    absentList = studentList.filter(({\n      Name: id1\n    }) => !attendance.some(({\n      Name: id2\n    }) => id2 === id1));\n    setSelectedClass(attendance[0].Class);\n    setSelectedDate(date);\n    setAttendanceList(attendance);\n    setAbsentList(absentList);\n    setShowAttendance(true);\n  };\n\n  const removeStudentHandler = (e, student) => {\n    let checked = e.target.checked;\n    let removeList = [...removeStudents];\n\n    if (checked) {\n      removeList = removeList.filter(item => item.Name !== student.Name);\n      setRemoveStudents(removeList);\n    } else {\n      removeList = [...removeStudents, student];\n      setRemoveStudents(removeList);\n    }\n  };\n\n  const addStudentHandler = (e, student) => {\n    let checked = e.target.checked;\n    let addList = [...addStudents];\n\n    if (checked) {\n      addList = [...addStudents, student];\n      setAddStudents(addList);\n    } else {\n      addList = addList.filter(item => item.Name !== student.Name);\n      setAddStudents(addList);\n    }\n  };\n\n  const saveHandler = () => {\n    // Add Student\n    addStudents.forEach(student => {\n      const saveParams = {\n        TableName: TABLE_NAME,\n        Item: {\n          Date: selectedDate,\n          Name: student.Name,\n          Class: selectedClass,\n          \"Student ID\": student.ID\n        }\n      };\n      dynamodbClient.put(saveParams, function (err, data) {\n        if (err) {\n          console.error(\"Unable to add item. Error JSON:\", JSON.stringify(err, null, 2));\n        } else {\n          console.log(\"Added item:\", JSON.stringify(data, null, 2));\n        }\n      });\n    }); //Remove Student\n\n    removeStudents.forEach(student => {\n      const deleteParams = {\n        TableName: TABLE_NAME,\n        Key: {\n          Date: student.Date,\n          Name: student.Name\n        }\n      };\n      dynamodbClient.delete(deleteParams, function (err, data) {\n        if (err) {\n          console.error(\"Unable to delete item. Error JSON:\", JSON.stringify(err, null, 2));\n        } else {\n          console.log(\"DeleteItem succeeded:\", JSON.stringify(data, null, 2));\n        }\n      });\n    });\n    setTimeout(() => {\n      setIsSave(false);\n      setEditStatus(false);\n      setAddStudents([]);\n      setRemoveStudents([]);\n      afterSaveHandler();\n    }, 1500);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center attendancelist\",\n      children: showAttendance ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontWeight: \"bold\",\n                color: \"white\",\n                textAlign: \"left\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\"\n              },\n              children: selectedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  color: \"white\"\n                },\n                children: \"Attended\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this), attendanceList.map(student => {\n                return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      xl: 6,\n                      lg: 6,\n                      md: 6,\n                      sm: 6,\n                      xs: 6,\n                      style: {\n                        fontWeight: \"bold\",\n                        fontSize: \"calc(0.5rem + 0.6vw)\",\n                        color: \"#535353\",\n                        textAlign: \"left\"\n                      },\n                      children: student.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      xl: 3,\n                      lg: 3,\n                      md: 3,\n                      sm: 3,\n                      xs: 3,\n                      style: {\n                        fontWeight: \"bold\",\n                        fontSize: \"calc(0.5rem + 0.6vw)\",\n                        color: \"#535353\",\n                        textAlign: \"right\"\n                      },\n                      children: [student.Temperature, \" \\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 27\n                    }, this), editStatus === true && /*#__PURE__*/_jsxDEV(Col, {\n                      xl: 3,\n                      lg: 3,\n                      md: 3,\n                      sm: 3,\n                      xs: 3,\n                      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                        type: \"checkbox\",\n                        defaultChecked: true,\n                        onChange: e => {\n                          removeStudentHandler(e, student);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 268,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 25\n                  }, this)\n                }, student.Name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 23\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  color: \"white\",\n                  marginTop: \"5px\"\n                },\n                children: \"Absent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this), absentList.map(student => {\n                return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      xl: 6,\n                      lg: 6,\n                      md: 6,\n                      sm: 6,\n                      xs: 6,\n                      style: {\n                        fontWeight: \"bold\",\n                        fontSize: \"calc(0.5rem + 0.6vw)\",\n                        color: \"#535353\",\n                        textAlign: \"left\"\n                      },\n                      children: student.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      xl: 3,\n                      lg: 3,\n                      md: 3,\n                      sm: 3,\n                      xs: 3,\n                      style: {\n                        fontWeight: \"bold\",\n                        fontSize: \"calc(0.5rem + 0.6vw)\",\n                        color: \"#535353\",\n                        textAlign: \"right\"\n                      },\n                      children: student.ID\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 27\n                    }, this), editStatus === true && /*#__PURE__*/_jsxDEV(Col, {\n                      xl: 3,\n                      lg: 3,\n                      md: 3,\n                      sm: 3,\n                      xs: 3,\n                      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                        type: \"checkbox\",\n                        onChange: e => {\n                          addStudentHandler(e, student);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 318,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 317,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 25\n                  }, this)\n                }, student.Name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), editStatus === false && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  width: \"100%\",\n                  backgroundColor: \"white\",\n                  color: \"#535353\",\n                  fontWeight: \"bold\",\n                  marginTop: \"10px\"\n                },\n                onClick: () => setEditStatus(true),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(CsvDownload, {\n                data: attendanceList,\n                filename: selectedDate + \" \" + selectedClass + \".csv\",\n                style: {\n                  width: \"100%\",\n                  backgroundColor: \"white\",\n                  color: \"#535353\",\n                  fontWeight: \"bold\",\n                  marginTop: \"10px\",\n                  borderRadius: \"5px\",\n                  borderColor: \"#007bff\",\n                  padding: \".375rem .75rem\"\n                },\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  width: \"100%\",\n                  backgroundColor: \"white\",\n                  color: \"#535353\",\n                  fontWeight: \"bold\",\n                  marginTop: \"10px\"\n                },\n                onClick: () => setShowAttendance(false),\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), editStatus === true && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: removeStudents.length === 0 && addStudents.length === 0,\n                style: {\n                  width: \"100%\",\n                  backgroundColor: \"white\",\n                  color: \"#535353\",\n                  fontWeight: \"bold\",\n                  marginTop: \"10px\",\n                  borderColor: \"#007bff\"\n                },\n                onClick: () => {\n                  setIsSave(true);\n                  saveHandler();\n                },\n                children: isSave ? /*#__PURE__*/_jsxDEV(Spinner, {\n                  as: \"span\",\n                  animation: \"border\",\n                  size: \"sm\",\n                  role: \"status\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  width: \"100%\",\n                  backgroundColor: \"white\",\n                  color: \"#535353\",\n                  fontWeight: \"bold\",\n                  marginTop: \"10px\",\n                  borderColor: \"#007bff\"\n                },\n                onClick: () => {\n                  setAddStudents([]);\n                  setRemoveStudents([]);\n                  setEditStatus(false);\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontWeight: \"bold\",\n                color: \"white\",\n                textAlign: \"left\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\"\n              },\n              children: \"Attendance List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              style: {\n                color: \"white\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [dates.length === 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  color: \"white\"\n                },\n                children: \"No Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 23\n              }, this), dates.length > 0 && /*#__PURE__*/_jsxDEV(ListGroup, {\n                children: dates.map(date => {\n                  return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    id: date,\n                    action: true,\n                    onClick: e => getAttendanceList(e.target.id),\n                    style: {\n                      fontWeight: \"bold\",\n                      color: \"#535353\"\n                    },\n                    children: date\n                  }, date, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AttendanceList, \"d6Dn+mM238ljyceUedHQzbaf2co=\");\n\n_c = AttendanceList;\nexport default AttendanceList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttendanceList\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/src/components/Dashboard/Classes/AttendanceList.js"],"names":["React","useState","useEffect","Row","Col","Container","ListGroup","Spinner","Button","Form","CsvDownload","AWS","AttendanceList","attendanceArray","setAttendanceArray","attendanceList","setAttendanceList","dates","setDates","showAttendance","setShowAttendance","selectedDate","setSelectedDate","selectedClass","setSelectedClass","studentList","setstudentList","absentList","setAbsentList","isLoading","setIsLoading","isSave","setIsSave","editStatus","setEditStatus","removeStudents","setRemoveStudents","addStudents","setAddStudents","config","update","region","accessKeyId","secretAccessKey","dynamodbClient","DynamoDB","DocumentClient","TABLE_NAME","mounted","dateArray","getData","response","fetch","then","res","json","studentArray","forEach","push","Name","ID","sort","a","b","Date","data","split","Set","afterSaveHandler","attendance","filter","includes","id1","some","id2","getAttendanceList","date","Class","removeStudentHandler","e","student","checked","target","removeList","item","addStudentHandler","addList","saveHandler","saveParams","TableName","Item","put","err","console","error","JSON","stringify","log","deleteParams","Key","delete","setTimeout","fontWeight","color","textAlign","marginTop","marginBottom","map","fontSize","Temperature","width","backgroundColor","borderRadius","borderColor","padding","length","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  ListGroup,\r\n  Spinner,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport CsvDownload from \"react-json-to-csv\";\r\nimport AWS from \"aws-sdk\";\r\n\r\nconst AttendanceList = () => {\r\n  const [attendanceArray, setAttendanceArray] = useState([]);\r\n  const [attendanceList, setAttendanceList] = useState([]);\r\n  const [dates, setDates] = useState([]);\r\n  const [showAttendance, setShowAttendance] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [selectedClass, setSelectedClass] = useState(\"\");\r\n  const [studentList, setstudentList] = useState([]);\r\n  const [absentList, setAbsentList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSave, setIsSave] = useState(false);\r\n  const [editStatus, setEditStatus] = useState(false);\r\n  const [removeStudents, setRemoveStudents] = useState([]);\r\n  const [addStudents, setAddStudents] = useState([]);\r\n\r\n  // AWS DynamoDB Config\r\n  AWS.config.update({\r\n    region: \"ap-southeast-1\",\r\n    accessKeyId: \"AKIAVT4QMHKTJR6VFAEN\",\r\n    secretAccessKey: \"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\",\r\n  });\r\n\r\n  const dynamodbClient = new AWS.DynamoDB.DocumentClient();\r\n  const TABLE_NAME = \"March\";\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    let dateArray = [];\r\n    let studentList = [];\r\n\r\n    const getData = async () => {\r\n      const response = await fetch(\"/aws/api\").then((res) => res.json()); // Get Student Attendance\r\n      const studentArray = await fetch(\"/sheet/student\").then((res) =>\r\n        res.json()\r\n      ); // Get Student List\r\n\r\n      // Convert array to object\r\n      studentArray.forEach((res) => {\r\n        studentList.push({\r\n          Name: res[0],\r\n          ID: res[1],\r\n        });\r\n      });\r\n\r\n      response.sort((a, b) => {\r\n        // Sort to latest date\r\n        return new Date(b.Date) - new Date(a.Date);\r\n      });\r\n\r\n      response.forEach((data) => {\r\n        dateArray.push(data.Date.split(\" \")[0]);\r\n      });\r\n\r\n      dateArray = [...new Set(dateArray)]; // Remove Duplicates\r\n\r\n      if (mounted) {\r\n        setAttendanceArray(response);\r\n        setDates(dateArray);\r\n        setstudentList(studentList);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    getData();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const afterSaveHandler = async () => {\r\n    const response = await fetch(\"/aws/api\").then((res) => res.json()); // Get Student Attendance\r\n\r\n    response.sort((a, b) => {\r\n      // Sort to latest date\r\n      return new Date(b.Date) - new Date(a.Date);\r\n    });\r\n\r\n    const attendance = response.filter(\r\n      (\r\n        res // Filter Attendance By Selected Date\r\n      ) => res.Date.includes(selectedDate)\r\n    );\r\n\r\n    // Filter absent students\r\n    const absentList = studentList.filter(\r\n      ({ Name: id1 }) => !attendance.some(({ Name: id2 }) => id2 === id1)\r\n    );\r\n\r\n    setAttendanceList(attendance);\r\n    setAbsentList(absentList);\r\n  };\r\n\r\n  const getAttendanceList = (date) => {\r\n    let absentList;\r\n    const selectedDate = date;\r\n    const attendance = attendanceArray.filter(\r\n      (\r\n        res // Filter Attendance By Selected Date\r\n      ) => res.Date.includes(selectedDate)\r\n    );\r\n\r\n    // Filter absent students\r\n    absentList = studentList.filter(\r\n      ({ Name: id1 }) => !attendance.some(({ Name: id2 }) => id2 === id1)\r\n    );\r\n\r\n    setSelectedClass(attendance[0].Class);\r\n    setSelectedDate(date);\r\n    setAttendanceList(attendance);\r\n    setAbsentList(absentList);\r\n    setShowAttendance(true);\r\n  };\r\n\r\n  const removeStudentHandler = (e, student) => {\r\n    let checked = e.target.checked;\r\n    let removeList = [...removeStudents];\r\n\r\n    if (checked) {\r\n      removeList = removeList.filter((item) => item.Name !== student.Name);\r\n      setRemoveStudents(removeList);\r\n    } else {\r\n      removeList = [...removeStudents, student];\r\n      setRemoveStudents(removeList);\r\n    }\r\n  };\r\n\r\n  const addStudentHandler = (e, student) => {\r\n    let checked = e.target.checked;\r\n    let addList = [...addStudents];\r\n\r\n    if (checked) {\r\n      addList = [...addStudents, student];\r\n      setAddStudents(addList);\r\n    } else {\r\n      addList = addList.filter((item) => item.Name !== student.Name);\r\n      setAddStudents(addList);\r\n    }\r\n  };\r\n\r\n  const saveHandler = () => {\r\n    // Add Student\r\n    addStudents.forEach((student) => {\r\n      const saveParams = {\r\n        TableName: TABLE_NAME,\r\n        Item: {\r\n          Date: selectedDate,\r\n          Name: student.Name,\r\n          Class: selectedClass,\r\n          \"Student ID\": student.ID,\r\n        },\r\n      };\r\n\r\n      dynamodbClient.put(saveParams, function (err, data) {\r\n        if (err) {\r\n          console.error(\r\n            \"Unable to add item. Error JSON:\",\r\n            JSON.stringify(err, null, 2)\r\n          );\r\n        } else {\r\n          console.log(\"Added item:\", JSON.stringify(data, null, 2));\r\n        }\r\n      });\r\n    });\r\n\r\n    //Remove Student\r\n    removeStudents.forEach((student) => {\r\n      const deleteParams = {\r\n        TableName: TABLE_NAME,\r\n        Key: {\r\n          Date: student.Date,\r\n          Name: student.Name,\r\n        },\r\n      };\r\n\r\n      dynamodbClient.delete(deleteParams, function (err, data) {\r\n        if (err) {\r\n          console.error(\r\n            \"Unable to delete item. Error JSON:\",\r\n            JSON.stringify(err, null, 2)\r\n          );\r\n        } else {\r\n          console.log(\"DeleteItem succeeded:\", JSON.stringify(data, null, 2));\r\n        }\r\n      });\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setIsSave(false);\r\n      setEditStatus(false);\r\n      setAddStudents([]);\r\n      setRemoveStudents([]);\r\n      afterSaveHandler();\r\n    }, 1500);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"text-center attendancelist\">\r\n        {showAttendance ? (\r\n          <>\r\n            <Row>\r\n              <Col>\r\n                <h3\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\",\r\n                    textAlign: \"left\",\r\n                    marginTop: \"10px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                >\r\n                  {selectedDate}\r\n                </h3>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <ListGroup>\r\n                  <h3 style={{ color: \"white\" }}>Attended</h3>\r\n                  {attendanceList.map((student) => {\r\n                    return (\r\n                      <ListGroup.Item key={student.Name}>\r\n                        <Row>\r\n                          <Col\r\n                            xl={6}\r\n                            lg={6}\r\n                            md={6}\r\n                            sm={6}\r\n                            xs={6}\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              fontSize: \"calc(0.5rem + 0.6vw)\",\r\n                              color: \"#535353\",\r\n                              textAlign: \"left\",\r\n                            }}\r\n                          >\r\n                            {student.Name}\r\n                          </Col>\r\n                          <Col\r\n                            xl={3}\r\n                            lg={3}\r\n                            md={3}\r\n                            sm={3}\r\n                            xs={3}\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              fontSize: \"calc(0.5rem + 0.6vw)\",\r\n                              color: \"#535353\",\r\n                              textAlign: \"right\",\r\n                            }}\r\n                          >\r\n                            {student.Temperature} °C\r\n                          </Col>\r\n                          {editStatus === true && (\r\n                            <Col xl={3} lg={3} md={3} sm={3} xs={3}>\r\n                              <Form.Check\r\n                                type=\"checkbox\"\r\n                                defaultChecked\r\n                                onChange={(e) => {\r\n                                  removeStudentHandler(e, student);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          )}\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    );\r\n                  })}\r\n                  <h3 style={{ color: \"white\", marginTop: \"5px\" }}>Absent</h3>\r\n                  {absentList.map((student) => {\r\n                    return (\r\n                      <ListGroup.Item key={student.Name}>\r\n                        <Row>\r\n                          <Col\r\n                            xl={6}\r\n                            lg={6}\r\n                            md={6}\r\n                            sm={6}\r\n                            xs={6}\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              fontSize: \"calc(0.5rem + 0.6vw)\",\r\n                              color: \"#535353\",\r\n                              textAlign: \"left\",\r\n                            }}\r\n                          >\r\n                            {student.Name}\r\n                          </Col>\r\n                          <Col\r\n                            xl={3}\r\n                            lg={3}\r\n                            md={3}\r\n                            sm={3}\r\n                            xs={3}\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              fontSize: \"calc(0.5rem + 0.6vw)\",\r\n                              color: \"#535353\",\r\n                              textAlign: \"right\",\r\n                            }}\r\n                          >\r\n                            {student.ID}\r\n                          </Col>\r\n                          {editStatus === true && (\r\n                            <Col xl={3} lg={3} md={3} sm={3} xs={3}>\r\n                              <Form.Check\r\n                                type=\"checkbox\"\r\n                                onChange={(e) => {\r\n                                  addStudentHandler(e, student);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          )}\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    );\r\n                  })}\r\n                </ListGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            {editStatus === false && (\r\n              <>\r\n                <Row>\r\n                  <Col>\r\n                    <Button\r\n                      style={{\r\n                        width: \"100%\",\r\n                        backgroundColor: \"white\",\r\n                        color: \"#535353\",\r\n                        fontWeight: \"bold\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                      onClick={() => setEditStatus(true)}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                  </Col>\r\n                  <Col>\r\n                    <CsvDownload\r\n                      data={attendanceList}\r\n                      filename={selectedDate + \" \" + selectedClass + \".csv\"}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        backgroundColor: \"white\",\r\n                        color: \"#535353\",\r\n                        fontWeight: \"bold\",\r\n                        marginTop: \"10px\",\r\n                        borderRadius: \"5px\",\r\n                        borderColor: \"#007bff\",\r\n                        padding: \".375rem .75rem\",\r\n                      }}\r\n                    >\r\n                      Download\r\n                    </CsvDownload>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Button\r\n                      style={{\r\n                        width: \"100%\",\r\n                        backgroundColor: \"white\",\r\n                        color: \"#535353\",\r\n                        fontWeight: \"bold\",\r\n                        marginTop: \"10px\",\r\n                      }}\r\n                      onClick={() => setShowAttendance(false)}\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            )}\r\n            {editStatus === true && (\r\n              <>\r\n                <Row>\r\n                  <Col>\r\n                    <Button\r\n                      disabled={\r\n                        removeStudents.length === 0 && addStudents.length === 0\r\n                      }\r\n                      style={{\r\n                        width: \"100%\",\r\n                        backgroundColor: \"white\",\r\n                        color: \"#535353\",\r\n                        fontWeight: \"bold\",\r\n                        marginTop: \"10px\",\r\n                        borderColor: \"#007bff\",\r\n                      }}\r\n                      onClick={() => {\r\n                        setIsSave(true);\r\n                        saveHandler();\r\n                      }}\r\n                    >\r\n                      {isSave ? (\r\n                        <Spinner\r\n                          as=\"span\"\r\n                          animation=\"border\"\r\n                          size=\"sm\"\r\n                          role=\"status\"\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                      ) : (\r\n                        <span>Save</span>\r\n                      )}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Button\r\n                      style={{\r\n                        width: \"100%\",\r\n                        backgroundColor: \"white\",\r\n                        color: \"#535353\",\r\n                        fontWeight: \"bold\",\r\n                        marginTop: \"10px\",\r\n                        borderColor: \"#007bff\",\r\n                      }}\r\n                      onClick={() => {\r\n                        setAddStudents([]);\r\n                        setRemoveStudents([]);\r\n                        setEditStatus(false);\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Row>\r\n              <Col>\r\n                <h3\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\",\r\n                    textAlign: \"left\",\r\n                    marginTop: \"10px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                >\r\n                  Attendance List\r\n                </h3>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                {isLoading ? (\r\n                  <Spinner animation=\"border\" style={{ color: \"white\" }} />\r\n                ) : (\r\n                  <>\r\n                    {dates.length === 0 && (\r\n                      <h3 style={{ color: \"white\" }}>No Data</h3>\r\n                    )}\r\n                    {dates.length > 0 && (\r\n                      <ListGroup>\r\n                        {dates.map((date) => {\r\n                          return (\r\n                            <ListGroup.Item\r\n                              key={date}\r\n                              id={date}\r\n                              action\r\n                              onClick={(e) => getAttendanceList(e.target.id)}\r\n                              style={{ fontWeight: \"bold\", color: \"#535353\" }}\r\n                            >\r\n                              {date}\r\n                            </ListGroup.Item>\r\n                          );\r\n                        })}\r\n                      </ListGroup>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttendanceList;\r\n"]},"metadata":{},"sourceType":"module"}