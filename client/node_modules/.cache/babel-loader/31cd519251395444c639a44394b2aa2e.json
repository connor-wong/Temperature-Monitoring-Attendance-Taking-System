{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\nimport { ContextSelectorContext } from './contextSelectorConstants';\nexport class ContextSelectorItem extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.ref = React.createRef();\n  }\n\n  componentDidMount() {\n    /* eslint-disable-next-line */\n    this.props.sendRef(this.props.index, this.ref.current);\n  }\n\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const _a = this.props,\n          {\n      className,\n      children,\n      onClick,\n      isDisabled,\n      index,\n      sendRef\n    } = _a,\n          props = __rest(_a, [\"className\", \"children\", \"onClick\", \"isDisabled\", \"index\", \"sendRef\"]);\n\n    return React.createElement(ContextSelectorContext.Consumer, null, ({\n      onSelect\n    }) => React.createElement(\"li\", {\n      role: \"none\"\n    }, React.createElement(\"button\", Object.assign({\n      className: css(styles.contextSelectorMenuListItem, className),\n      ref: this.ref,\n      onClick: event => {\n        if (!isDisabled) {\n          onClick(event);\n          onSelect(event, children);\n        }\n      },\n      disabled: isDisabled\n    }, props), children)));\n  }\n\n}\nContextSelectorItem.displayName = 'ContextSelectorItem';\nContextSelectorItem.defaultProps = {\n  children: null,\n  className: '',\n  isDisabled: false,\n  onClick: () => undefined,\n  index: undefined,\n  sendRef: () => {}\n};","map":{"version":3,"sources":["../../../../src/components/ContextSelector/ContextSelectorItem.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,0EAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,SAAS,sBAAT,QAAuC,4BAAvC;AAiBA,OAAM,MAAO,mBAAP,SAAmC,KAAK,CAAC,SAAzC,CAA4E;AAAlF,EAAA,WAAA,GAAA;;AAWE,SAAA,GAAA,GAA0C,KAAK,CAAC,SAAN,EAA1C;AAiCD;;AA/BC,EAAA,iBAAiB,GAAA;AACf;AACA,SAAK,KAAL,CAAW,OAAX,CAAmB,KAAK,KAAL,CAAW,KAA9B,EAAqC,KAAK,GAAL,CAAS,OAA9C;AACD;;AAED,EAAA,MAAM,GAAA;AACJ;AACA,UAAM,EAAA,GAAyE,KAAK,KAApF;AAAA,UAAM;AAAE,MAAA,SAAF;AAAa,MAAA,QAAb;AAAuB,MAAA,OAAvB;AAAgC,MAAA,UAAhC;AAA4C,MAAA,KAA5C;AAAmD,MAAA;AAAnD,QAA0D,EAAhE;AAAA,UAAqE,KAAK,GAAA,MAAA,CAAA,EAAA,EAApE,CAAA,WAAA,EAAA,UAAA,EAAA,SAAA,EAAA,YAAA,EAAA,OAAA,EAAA,SAAA,CAAoE,CAA1E;;AACA,WACE,KAAA,CAAA,aAAA,CAAC,sBAAsB,CAAC,QAAxB,EAAgC,IAAhC,EACG,CAAC;AAAE,MAAA;AAAF,KAAD,KACC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,MAAA,IAAI,EAAC;AAAT,KAAA,EACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACE,MAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,2BAAR,EAAqC,SAArC,CADhB;AAEE,MAAA,GAAG,EAAE,KAAK,GAFZ;AAGE,MAAA,OAAO,EAAE,KAAK,IAAG;AACf,YAAI,CAAC,UAAL,EAAiB;AACf,UAAA,OAAO,CAAC,KAAD,CAAP;AACA,UAAA,QAAQ,CAAC,KAAD,EAAQ,QAAR,CAAR;AACD;AACF,OARH;AASE,MAAA,QAAQ,EAAE;AATZ,KAAA,EAUM,KAVN,CAAA,EAYG,QAZH,CADF,CAFJ,CADF;AAsBD;;AA3C+E;AACzE,mBAAA,CAAA,WAAA,GAAc,qBAAd;AACA,mBAAA,CAAA,YAAA,GAAyC;AAC9C,EAAA,QAAQ,EAAE,IADoC;AAE9C,EAAA,SAAS,EAAE,EAFmC;AAG9C,EAAA,UAAU,EAAE,KAHkC;AAI9C,EAAA,OAAO,EAAE,MAAW,SAJ0B;AAK9C,EAAA,KAAK,EAAE,SALuC;AAM9C,EAAA,OAAO,EAAE,MAAK,CAAG;AAN6B,CAAzC","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\nimport { ContextSelectorContext } from './contextSelectorConstants';\nexport class ContextSelectorItem extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.ref = React.createRef();\n    }\n    componentDidMount() {\n        /* eslint-disable-next-line */\n        this.props.sendRef(this.props.index, this.ref.current);\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _a = this.props, { className, children, onClick, isDisabled, index, sendRef } = _a, props = __rest(_a, [\"className\", \"children\", \"onClick\", \"isDisabled\", \"index\", \"sendRef\"]);\n        return (React.createElement(ContextSelectorContext.Consumer, null, ({ onSelect }) => (React.createElement(\"li\", { role: \"none\" },\n            React.createElement(\"button\", Object.assign({ className: css(styles.contextSelectorMenuListItem, className), ref: this.ref, onClick: event => {\n                    if (!isDisabled) {\n                        onClick(event);\n                        onSelect(event, children);\n                    }\n                }, disabled: isDisabled }, props), children)))));\n    }\n}\nContextSelectorItem.displayName = 'ContextSelectorItem';\nContextSelectorItem.defaultProps = {\n    children: null,\n    className: '',\n    isDisabled: false,\n    onClick: () => undefined,\n    index: undefined,\n    sendRef: () => { }\n};\n//# sourceMappingURL=ContextSelectorItem.js.map"]},"metadata":{},"sourceType":"module"}