{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownMenu } from './DropdownMenu';\nimport { DropdownContext, DropdownDirection, DropdownPosition } from './dropdownConstants';\nimport { getOUIAProps } from '../../helpers';\nimport { Popper } from '../../helpers/Popper/Popper';\nexport class DropdownWithContext extends React.Component {\n  constructor(props) {\n    super(props);\n    this.openedOnEnter = false;\n    this.baseComponentRef = React.createRef();\n    this.menuComponentRef = React.createRef();\n\n    this.onEnter = () => {\n      this.openedOnEnter = true;\n    };\n\n    this.setMenuComponentRef = element => {\n      this.menuComponentRef = element;\n    };\n\n    this.getMenuComponentRef = () => this.menuComponentRef;\n\n    if (props.dropdownItems && props.dropdownItems.length > 0 && props.children) {\n      // eslint-disable-next-line no-console\n      console.error('Children and dropdownItems props have been provided. Only the dropdownItems prop items will be rendered');\n    }\n  }\n\n  componentDidUpdate() {\n    if (!this.props.isOpen) {\n      this.openedOnEnter = false;\n    }\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      children,\n      className,\n      direction,\n      dropdownItems,\n      isOpen,\n      isPlain,\n      isGrouped,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onSelect,\n      position,\n      toggle,\n      autoFocus,\n      menuAppendTo\n    } = _a,\n          props = __rest(_a, [\"children\", \"className\", \"direction\", \"dropdownItems\", \"isOpen\", \"isPlain\", \"isGrouped\", \"onSelect\", \"position\", \"toggle\", \"autoFocus\", \"menuAppendTo\"]);\n\n    const id = toggle.props.id || `pf-dropdown-toggle-id-${DropdownWithContext.currentId++}`;\n    let component;\n    let renderedContent;\n    let ariaHasPopup = false;\n\n    if (dropdownItems && dropdownItems.length > 0) {\n      component = 'ul';\n      renderedContent = dropdownItems;\n      ariaHasPopup = true;\n    } else {\n      component = 'div';\n      renderedContent = React.Children.toArray(children);\n    }\n\n    const openedOnEnter = this.openedOnEnter;\n    return React.createElement(DropdownContext.Consumer, null, ({\n      baseClass,\n      baseComponent,\n      id: contextId,\n      ouiaId,\n      ouiaComponentType,\n      ouiaSafe\n    }) => {\n      const BaseComponent = baseComponent;\n      const menuContainer = React.createElement(DropdownMenu, {\n        setMenuComponentRef: this.setMenuComponentRef,\n        component: component,\n        isOpen: isOpen,\n        position: position,\n        \"aria-labelledby\": contextId ? `${contextId}-toggle` : id,\n        isGrouped: isGrouped,\n        autoFocus: openedOnEnter && autoFocus\n      }, renderedContent);\n      const popperContainer = React.createElement(\"div\", {\n        className: css(baseClass, direction === DropdownDirection.up && styles.modifiers.top, position === DropdownPosition.right && styles.modifiers.alignRight, isOpen && styles.modifiers.expanded, className)\n      }, isOpen && menuContainer);\n      const mainContainer = React.createElement(BaseComponent, Object.assign({}, props, {\n        className: css(baseClass, direction === DropdownDirection.up && styles.modifiers.top, position === DropdownPosition.right && styles.modifiers.alignRight, isOpen && styles.modifiers.expanded, className),\n        ref: this.baseComponentRef\n      }, getOUIAProps(ouiaComponentType, ouiaId, ouiaSafe)), React.Children.map(toggle, oneToggle => React.cloneElement(oneToggle, {\n        parentRef: this.baseComponentRef,\n        getMenuRef: this.getMenuComponentRef,\n        isOpen,\n        id,\n        isPlain,\n        'aria-haspopup': ariaHasPopup,\n        onEnter: () => this.onEnter()\n      })), menuAppendTo === 'inline' && isOpen && menuContainer);\n\n      const getParentElement = () => {\n        if (this.baseComponentRef && this.baseComponentRef.current) {\n          return this.baseComponentRef.current.parentElement;\n        }\n\n        return null;\n      };\n\n      return menuAppendTo === 'inline' ? mainContainer : React.createElement(Popper, {\n        trigger: mainContainer,\n        popper: popperContainer,\n        direction: direction,\n        position: position,\n        appendTo: menuAppendTo === 'parent' ? getParentElement() : menuAppendTo,\n        isVisible: isOpen\n      });\n    });\n  }\n\n}\nDropdownWithContext.displayName = 'DropdownWithContext'; // seed for the aria-labelledby ID\n\nDropdownWithContext.currentId = 0;\nDropdownWithContext.defaultProps = {\n  className: '',\n  dropdownItems: [],\n  isOpen: false,\n  isPlain: false,\n  isGrouped: false,\n  position: DropdownPosition.left,\n  direction: DropdownDirection.down,\n  onSelect: () => undefined,\n  autoFocus: true,\n  menuAppendTo: 'inline'\n};","map":{"version":3,"sources":["../../../../src/components/Dropdown/DropdownWithContext.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownMenu } from './DropdownMenu';\nimport { DropdownContext, DropdownDirection, DropdownPosition } from './dropdownConstants';\nimport { getOUIAProps } from '../../helpers';\nimport { Popper } from '../../helpers/Popper/Popper';\nexport class DropdownWithContext extends React.Component {\n    constructor(props) {\n        super(props);\n        this.openedOnEnter = false;\n        this.baseComponentRef = React.createRef();\n        this.menuComponentRef = React.createRef();\n        this.onEnter = () => {\n            this.openedOnEnter = true;\n        };\n        this.setMenuComponentRef = (element) => {\n            this.menuComponentRef = element;\n        };\n        this.getMenuComponentRef = () => this.menuComponentRef;\n        if (props.dropdownItems && props.dropdownItems.length > 0 && props.children) {\n            // eslint-disable-next-line no-console\n            console.error('Children and dropdownItems props have been provided. Only the dropdownItems prop items will be rendered');\n        }\n    }\n    componentDidUpdate() {\n        if (!this.props.isOpen) {\n            this.openedOnEnter = false;\n        }\n    }\n    render() {\n        const _a = this.props, { children, className, direction, dropdownItems, isOpen, isPlain, isGrouped, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onSelect, position, toggle, autoFocus, menuAppendTo } = _a, props = __rest(_a, [\"children\", \"className\", \"direction\", \"dropdownItems\", \"isOpen\", \"isPlain\", \"isGrouped\", \"onSelect\", \"position\", \"toggle\", \"autoFocus\", \"menuAppendTo\"]);\n        const id = toggle.props.id || `pf-dropdown-toggle-id-${DropdownWithContext.currentId++}`;\n        let component;\n        let renderedContent;\n        let ariaHasPopup = false;\n        if (dropdownItems && dropdownItems.length > 0) {\n            component = 'ul';\n            renderedContent = dropdownItems;\n            ariaHasPopup = true;\n        }\n        else {\n            component = 'div';\n            renderedContent = React.Children.toArray(children);\n        }\n        const openedOnEnter = this.openedOnEnter;\n        return (React.createElement(DropdownContext.Consumer, null, ({ baseClass, baseComponent, id: contextId, ouiaId, ouiaComponentType, ouiaSafe }) => {\n            const BaseComponent = baseComponent;\n            const menuContainer = (React.createElement(DropdownMenu, { setMenuComponentRef: this.setMenuComponentRef, component: component, isOpen: isOpen, position: position, \"aria-labelledby\": contextId ? `${contextId}-toggle` : id, isGrouped: isGrouped, autoFocus: openedOnEnter && autoFocus }, renderedContent));\n            const popperContainer = (React.createElement(\"div\", { className: css(baseClass, direction === DropdownDirection.up && styles.modifiers.top, position === DropdownPosition.right && styles.modifiers.alignRight, isOpen && styles.modifiers.expanded, className) }, isOpen && menuContainer));\n            const mainContainer = (React.createElement(BaseComponent, Object.assign({}, props, { className: css(baseClass, direction === DropdownDirection.up && styles.modifiers.top, position === DropdownPosition.right && styles.modifiers.alignRight, isOpen && styles.modifiers.expanded, className), ref: this.baseComponentRef }, getOUIAProps(ouiaComponentType, ouiaId, ouiaSafe)),\n                React.Children.map(toggle, oneToggle => React.cloneElement(oneToggle, {\n                    parentRef: this.baseComponentRef,\n                    getMenuRef: this.getMenuComponentRef,\n                    isOpen,\n                    id,\n                    isPlain,\n                    'aria-haspopup': ariaHasPopup,\n                    onEnter: () => this.onEnter()\n                })),\n                menuAppendTo === 'inline' && isOpen && menuContainer));\n            const getParentElement = () => {\n                if (this.baseComponentRef && this.baseComponentRef.current) {\n                    return this.baseComponentRef.current.parentElement;\n                }\n                return null;\n            };\n            return menuAppendTo === 'inline' ? (mainContainer) : (React.createElement(Popper, { trigger: mainContainer, popper: popperContainer, direction: direction, position: position, appendTo: menuAppendTo === 'parent' ? getParentElement() : menuAppendTo, isVisible: isOpen }));\n        }));\n    }\n}\nDropdownWithContext.displayName = 'DropdownWithContext';\n// seed for the aria-labelledby ID\nDropdownWithContext.currentId = 0;\nDropdownWithContext.defaultProps = {\n    className: '',\n    dropdownItems: [],\n    isOpen: false,\n    isPlain: false,\n    isGrouped: false,\n    position: DropdownPosition.left,\n    direction: DropdownDirection.down,\n    onSelect: () => undefined,\n    autoFocus: true,\n    menuAppendTo: 'inline'\n};\n//# sourceMappingURL=DropdownWithContext.js.map"]},"metadata":{},"sourceType":"module"}