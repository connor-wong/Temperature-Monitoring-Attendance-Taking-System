{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\client\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Account } from \"./components/Authentication/Account\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(Account, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorkerRegistration.register();\nconst publicVapidKey = \"BE9s9clbXHLdAuHuNmGrOdl5WX2Bq0GFXBIl7LUz5r_ZyuCHQQVvILntryJBSrgLVKydnHM28Ij85HWSx6k1aPE\"; // Copied from the web-push documentation\n\nconst urlBase64ToUint8Array = base64String => {\n  const padding = \"=\".repeat((4 - base64String.length % 4) % 4);\n  const base64 = (base64String + padding).replace(/\\-/g, \"+\").replace(/_/g, \"/\");\n  const rawData = window.atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n};\n\nwindow.subscribe = async () => {\n  if (!(\"serviceWorker\" in navigator)) return;\n  const registration = await navigator.serviceWorker.ready; // Subscribe to push notifications\n\n  const subscription = await registration.pushManager.subscribe({\n    userVisibleOnly: true,\n    applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n  });\n};","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/src/index.js"],"names":["React","ReactDOM","App","Account","serviceWorkerRegistration","render","document","getElementById","register","publicVapidKey","urlBase64ToUint8Array","base64String","padding","repeat","length","base64","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","subscribe","navigator","registration","serviceWorker","ready","subscription","pushManager","userVisibleOnly","applicationServerKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,sCAAP;AACA,SAASC,OAAT,QAAwB,qCAAxB;AACA,OAAO,KAAKC,yBAAZ,MAA2C,6BAA3C;;AAEAH,QAAQ,CAACI,MAAT,eACE,QAAC,OAAD;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAKEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF,E,CAQA;AACA;AACA;;AACAH,yBAAyB,CAACI,QAA1B;AAEA,MAAMC,cAAc,GAClB,yFADF,C,CAGA;;AACA,MAAMC,qBAAqB,GAAIC,YAAD,IAAkB;AAC9C,QAAMC,OAAO,GAAG,IAAIC,MAAJ,CAAW,CAAC,IAAKF,YAAY,CAACG,MAAb,GAAsB,CAA5B,IAAkC,CAA7C,CAAhB;AACA,QAAMC,MAAM,GAAG,CAACJ,YAAY,GAAGC,OAAhB,EACZI,OADY,CACJ,KADI,EACG,GADH,EAEZA,OAFY,CAEJ,IAFI,EAEE,GAFF,CAAf;AAIA,QAAMC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,CAAhB;AACA,QAAMK,WAAW,GAAG,IAAIC,UAAJ,CAAeJ,OAAO,CAACH,MAAvB,CAApB;;AAEA,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,OAAO,CAACH,MAA5B,EAAoC,EAAEQ,CAAtC,EAAyC;AACvCF,IAAAA,WAAW,CAACE,CAAD,CAAX,GAAiBL,OAAO,CAACM,UAAR,CAAmBD,CAAnB,CAAjB;AACD;;AACD,SAAOF,WAAP;AACD,CAbD;;AAeAF,MAAM,CAACM,SAAP,GAAmB,YAAY;AAC7B,MAAI,EAAE,mBAAmBC,SAArB,CAAJ,EAAqC;AAErC,QAAMC,YAAY,GAAG,MAAMD,SAAS,CAACE,aAAV,CAAwBC,KAAnD,CAH6B,CAK7B;;AACA,QAAMC,YAAY,GAAG,MAAMH,YAAY,CAACI,WAAb,CAAyBN,SAAzB,CAAmC;AAC5DO,IAAAA,eAAe,EAAE,IAD2C;AAE5DC,IAAAA,oBAAoB,EAAEtB,qBAAqB,CAACD,cAAD;AAFiB,GAAnC,CAA3B;AAID,CAVD","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Account } from \"./components/Authentication/Account\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <Account>\n    <App />\n  </Account>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n\nconst publicVapidKey =\n  \"BE9s9clbXHLdAuHuNmGrOdl5WX2Bq0GFXBIl7LUz5r_ZyuCHQQVvILntryJBSrgLVKydnHM28Ij85HWSx6k1aPE\";\n\n// Copied from the web-push documentation\nconst urlBase64ToUint8Array = (base64String) => {\n  const padding = \"=\".repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, \"+\")\n    .replace(/_/g, \"/\");\n\n  const rawData = window.atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n};\n\nwindow.subscribe = async () => {\n  if (!(\"serviceWorker\" in navigator)) return;\n\n  const registration = await navigator.serviceWorker.ready;\n\n  // Subscribe to push notifications\n  const subscription = await registration.pushManager.subscribe({\n    userVisibleOnly: true,\n    applicationServerKey: urlBase64ToUint8Array(publicVapidKey),\n  });\n};\n"]},"metadata":{},"sourceType":"module"}