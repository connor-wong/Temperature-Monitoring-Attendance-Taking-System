{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\client\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport NavBar from \"./NavBar\";\nimport LatestAttendance from \"./LatestAttendance\";\nimport StudentMatters from \"./StudentMatters\";\nimport Classes from \"./Classes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [classes, setClasses] = useState([]);\n  const [attendance, setAttendance] = useState([]);\n  const [temperatureMatter, setTemperatureMatter] = useState([]);\n  let mounted = true;\n\n  const getData = async () => {\n    let classArray = [];\n    let studentArray = [];\n    let dataArray = [];\n    let attendance = [];\n    let temperatureMatter = [];\n    await fetch(\"/drive/api\");\n    await fetch(\"/sheet/api\").then(res => res.json()).then(res => {\n      setClasses(res.sheets); // Class Component\n\n      res.sheets.forEach(result => {\n        classArray.push(result.properties.title);\n      });\n    });\n\n    for (const classTitle of classArray) {\n      axios.post(\"http://localhost:3001/sheet/class\", classTitle);\n      await fetch(\"/sheet/student\") // Get Student List\n      .then(res => res.json()).then(res => studentArray = res);\n      await fetch(\"/aws/api\") // Get Student Attendance\n      .then(res => res.json()).then(res => {\n        dataArray = res;\n      }); // Sort to latest date\n\n      dataArray.sort((a, b) => {\n        return new Date(b.Date) - new Date(a.Date);\n      }); // Data formation\n\n      const latestAttendanceData = dataArray.filter(res => res.Date.includes(dataArray[0].Date.split(\" \")[0]));\n\n      if (dataArray.length < 1 || dataArray === undefined) {// do nothing\n      } else {\n        const date = dataArray[0].Date.split(\" \")[0];\n        const totalStudents = studentArray.length;\n        let presentCount = 0;\n        studentArray.forEach(res => {\n          latestAttendanceData.forEach(student => {\n            if (res[0].includes(student.Name)) {\n              presentCount = presentCount + 1;\n            }\n          });\n        }); // Class, Date, Present, Total Students\n\n        attendance.push({\n          Class: classTitle,\n          Date: date,\n          Present: presentCount,\n          Total_Students: totalStudents\n        });\n        latestAttendanceData.forEach(student => {\n          if (student.Temperature >= 37.5) {\n            temperatureMatter.push(student);\n          }\n        });\n      }\n    }\n\n    if (mounted) {\n      setAttendance(attendance); // LatestAttendance Component\n\n      setTemperatureMatter(temperatureMatter);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center dashboard\",\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontSize: \"calc(22px + 2vw)\",\n              fontWeight: \"bold\",\n              color: \"#535353\",\n              textAlign: \"left\"\n            },\n            children: \"Your Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xl: 6,\n          lg: 12,\n          md: 12,\n          sm: 12,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              marginBottom: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xl: 12,\n              lg: 12,\n              md: 12,\n              sm: 12,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(LatestAttendance, {\n                attendance: attendance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              marginBottom: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xl: 12,\n              lg: 12,\n              md: 12,\n              sm: 12,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(StudentMatters, {\n                temperatureMatter: temperatureMatter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xl: 6,\n          lg: 12,\n          md: 12,\n          sm: 12,\n          xs: 12,\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Classes, {\n            classes: classes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"b0kPeTxEjEqqP/qSKU3cXuH5PUs=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/src/components/Dashboard/Dashboard.js"],"names":["React","useEffect","useState","axios","Row","Col","Container","NavBar","LatestAttendance","StudentMatters","Classes","Dashboard","classes","setClasses","attendance","setAttendance","temperatureMatter","setTemperatureMatter","mounted","getData","classArray","studentArray","dataArray","fetch","then","res","json","sheets","forEach","result","push","properties","title","classTitle","post","sort","a","b","Date","latestAttendanceData","filter","includes","split","length","undefined","date","totalStudents","presentCount","student","Name","Class","Present","Total_Students","Temperature","fontSize","fontWeight","color","textAlign","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\n\r\nimport NavBar from \"./NavBar\";\r\nimport LatestAttendance from \"./LatestAttendance\";\r\nimport StudentMatters from \"./StudentMatters\";\r\nimport Classes from \"./Classes\";\r\n\r\nconst Dashboard = () => {\r\n  const [classes, setClasses] = useState([]);\r\n  const [attendance, setAttendance] = useState([]);\r\n  const [temperatureMatter, setTemperatureMatter] = useState([]);\r\n  let mounted = true;\r\n\r\n  const getData = async () => {\r\n    let classArray = [];\r\n    let studentArray = [];\r\n    let dataArray = [];\r\n    let attendance = [];\r\n    let temperatureMatter = [];\r\n\r\n    await fetch(\"/drive/api\");\r\n\r\n    await fetch(\"/sheet/api\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setClasses(res.sheets); // Class Component\r\n        res.sheets.forEach((result) => {\r\n          classArray.push(result.properties.title);\r\n        });\r\n      });\r\n\r\n    for (const classTitle of classArray) {\r\n      axios.post(\"http://localhost:3001/sheet/class\", classTitle);\r\n\r\n      await fetch(\"/sheet/student\") // Get Student List\r\n        .then((res) => res.json())\r\n        .then((res) => (studentArray = res));\r\n\r\n      await fetch(\"/aws/api\") // Get Student Attendance\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          dataArray = res;\r\n        });\r\n\r\n      // Sort to latest date\r\n      dataArray.sort((a, b) => {\r\n        return new Date(b.Date) - new Date(a.Date);\r\n      });\r\n\r\n      // Data formation\r\n      const latestAttendanceData = dataArray.filter((res) =>\r\n        res.Date.includes(dataArray[0].Date.split(\" \")[0])\r\n      );\r\n\r\n      if (dataArray.length < 1 || dataArray === undefined) {\r\n        // do nothing\r\n      } else {\r\n        const date = dataArray[0].Date.split(\" \")[0];\r\n        const totalStudents = studentArray.length;\r\n        let presentCount = 0;\r\n\r\n        studentArray.forEach((res) => {\r\n          latestAttendanceData.forEach((student) => {\r\n            if (res[0].includes(student.Name)) {\r\n              presentCount = presentCount + 1;\r\n            }\r\n          });\r\n        });\r\n\r\n        // Class, Date, Present, Total Students\r\n        attendance.push({\r\n          Class: classTitle,\r\n          Date: date,\r\n          Present: presentCount,\r\n          Total_Students: totalStudents,\r\n        });\r\n\r\n        latestAttendanceData.forEach((student) => {\r\n          if (student.Temperature >= 37.5) {\r\n            temperatureMatter.push(student);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (mounted) {\r\n      setAttendance(attendance); // LatestAttendance Component\r\n      setTemperatureMatter(temperatureMatter);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Container className=\"text-center dashboard\" fluid>\r\n        <Row>\r\n          <Col>\r\n            <h3\r\n              style={{\r\n                fontSize: \"calc(22px + 2vw)\",\r\n                fontWeight: \"bold\",\r\n                color: \"#535353\",\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              Your Dashboard\r\n            </h3>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col xl={6} lg={12} md={12} sm={12} xs={12}>\r\n            <Row style={{ marginBottom: \"10px\" }}>\r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                <LatestAttendance attendance={attendance} />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row style={{ marginBottom: \"10px\" }}>\r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                <StudentMatters temperatureMatter={temperatureMatter} />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col\r\n            xl={6}\r\n            lg={12}\r\n            md={12}\r\n            sm={12}\r\n            xs={12}\r\n            style={{ marginBottom: \"10px\" }}\r\n          >\r\n            <Classes classes={classes} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}