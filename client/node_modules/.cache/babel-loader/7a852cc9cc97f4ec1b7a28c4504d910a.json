{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nexport const BreadcrumbHeading = _a => {\n  var {\n    children = null,\n    className = '',\n    to = null,\n    target = null,\n    component = 'a',\n    showDivider\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"to\", \"target\", \"component\", \"showDivider\"]);\n\n  const Component = component;\n  return React.createElement(\"li\", Object.assign({}, props, {\n    className: css(styles.breadcrumbItem, className)\n  }), React.createElement(\"h1\", {\n    className: styles.breadcrumbHeading\n  }, showDivider && React.createElement(\"span\", {\n    className: styles.breadcrumbItemDivider\n  }, React.createElement(AngleRightIcon, null)), !to && component === 'button' && React.createElement(\"button\", {\n    className: css(styles.breadcrumbLink, styles.modifiers.current),\n    \"aria-current\": true,\n    type: \"button\"\n  }, children), to && React.createElement(Component, {\n    href: to,\n    target: target,\n    className: css(styles.breadcrumbLink, styles.modifiers.current),\n    \"aria-current\": \"page\"\n  }, children), !to && component !== 'button' && React.createElement(React.Fragment, null, children)));\n};\nBreadcrumbHeading.displayName = 'BreadcrumbHeading';","map":{"version":3,"sources":["../../../../src/components/Breadcrumb/BreadcrumbHeading.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,cAAP,MAAqB,yDAArB;AACA,OAAO,MAAP,MAAmB,+DAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AAiBA,OAAO,MAAM,iBAAiB,GAAqD,EAAD,IAQrD;MARsD;AACjF,IAAA,QAAQ,GAAG,IADsE;AAEjF,IAAA,SAAS,GAAG,EAFqE;AAGjF,IAAA,EAAE,GAAG,IAH4E;AAIjF,IAAA,MAAM,GAAG,IAJwE;AAKjF,IAAA,SAAS,GAAG,GALqE;AAMjF,IAAA;AANiF,MAMtE,E;MACR,KAAK,GAAA,MAAA,CAAA,EAAA,EAPyE,CAAA,UAAA,EAAA,WAAA,EAAA,IAAA,EAAA,QAAA,EAAA,WAAA,EAAA,aAAA,CAOzE,C;;AAER,QAAM,SAAS,GAAG,SAAlB;AACA,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,KAAR,EAAa;AAAE,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,cAAR,EAAwB,SAAxB;AAAhB,GAAb,CAAA,EACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,IAAA,SAAS,EAAE,MAAM,CAAC;AAAtB,GAAA,EACG,WAAW,IACV,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,MAAM,CAAC;AAAxB,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,IAAf,CADF,CAFJ,EAMG,CAAC,EAAD,IAAO,SAAS,KAAK,QAArB,IACC,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,cAAR,EAAwB,MAAM,CAAC,SAAP,CAAiB,OAAzC,CAAtB;AAAuE,oBAAA,IAAvE;AAAsF,IAAA,IAAI,EAAC;AAA3F,GAAA,EACG,QADH,CAPJ,EAWG,EAAE,IACD,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AACR,IAAA,IAAI,EAAE,EADE;AAER,IAAA,MAAM,EAAE,MAFA;AAGR,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,cAAR,EAAwB,MAAM,CAAC,SAAP,CAAiB,OAAzC,CAHN;AAGuD,oBAClD;AAJL,GAAV,EAMG,QANH,CAZJ,EAqBG,CAAC,EAAD,IAAO,SAAS,KAAK,QAArB,IAAiC,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe,IAAf,EAAiB,QAAjB,CArBpC,CADF,CADF;AA2BD,CArCM;AAsCP,iBAAiB,CAAC,WAAlB,GAAgC,mBAAhC","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nexport const BreadcrumbHeading = (_a) => {\n    var { children = null, className = '', to = null, target = null, component = 'a', showDivider } = _a, props = __rest(_a, [\"children\", \"className\", \"to\", \"target\", \"component\", \"showDivider\"]);\n    const Component = component;\n    return (React.createElement(\"li\", Object.assign({}, props, { className: css(styles.breadcrumbItem, className) }),\n        React.createElement(\"h1\", { className: styles.breadcrumbHeading },\n            showDivider && (React.createElement(\"span\", { className: styles.breadcrumbItemDivider },\n                React.createElement(AngleRightIcon, null))),\n            !to && component === 'button' && (React.createElement(\"button\", { className: css(styles.breadcrumbLink, styles.modifiers.current), \"aria-current\": true, type: \"button\" }, children)),\n            to && (React.createElement(Component, { href: to, target: target, className: css(styles.breadcrumbLink, styles.modifiers.current), \"aria-current\": \"page\" }, children)),\n            !to && component !== 'button' && React.createElement(React.Fragment, null, children))));\n};\nBreadcrumbHeading.displayName = 'BreadcrumbHeading';\n//# sourceMappingURL=BreadcrumbHeading.js.map"]},"metadata":{},"sourceType":"module"}