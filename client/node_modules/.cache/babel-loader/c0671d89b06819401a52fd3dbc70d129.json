{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { canUseDOM } from '../../helpers';\nimport { AlertGroupInline } from './AlertGroupInline';\nexport class AlertGroup extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      container: undefined\n    };\n  }\n\n  componentDidMount() {\n    const container = document.createElement('div');\n    const target = this.getTargetElement();\n    this.setState({\n      container\n    });\n    target.appendChild(container);\n  }\n\n  componentWillUnmount() {\n    const target = this.getTargetElement();\n\n    if (this.state.container) {\n      target.removeChild(this.state.container);\n    }\n  }\n\n  getTargetElement() {\n    const appendTo = this.props.appendTo;\n\n    if (typeof appendTo === 'function') {\n      return appendTo();\n    }\n\n    return appendTo || document.body;\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      className,\n      children,\n      isToast\n    } = _a,\n          props = __rest(_a, [\"className\", \"children\", \"isToast\"]);\n\n    const alertGroup = React.createElement(AlertGroupInline, Object.assign({\n      className: className,\n      isToast: isToast\n    }, props), children);\n\n    if (!this.props.isToast) {\n      return alertGroup;\n    }\n\n    const container = this.state.container;\n\n    if (!canUseDOM || !container) {\n      return null;\n    }\n\n    return ReactDOM.createPortal(alertGroup, container);\n  }\n\n}\nAlertGroup.displayName = 'AlertGroup';","map":{"version":3,"sources":["../../../../src/components/AlertGroup/AlertGroup.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAK,QAAZ,MAA0B,WAA1B;AACA,SAAS,SAAT,QAA0B,eAA1B;AACA,SAAS,gBAAT,QAAiC,oBAAjC;AAiBA,OAAM,MAAO,UAAP,SAA0B,KAAK,CAAC,SAAhC,CAA2E;AAAjF,EAAA,WAAA,GAAA;;AAEE,SAAA,KAAA,GAAQ;AACN,MAAA,SAAS,EAAE;AADL,KAAR;AA6CD;;AAzCC,EAAA,iBAAiB,GAAA;AACf,UAAM,SAAS,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAlB;AACA,UAAM,MAAM,GAAgB,KAAK,gBAAL,EAA5B;AACA,SAAK,QAAL,CAAc;AAAE,MAAA;AAAF,KAAd;AACA,IAAA,MAAM,CAAC,WAAP,CAAmB,SAAnB;AACD;;AAED,EAAA,oBAAoB,GAAA;AAClB,UAAM,MAAM,GAAgB,KAAK,gBAAL,EAA5B;;AACA,QAAI,KAAK,KAAL,CAAW,SAAf,EAA0B;AACxB,MAAA,MAAM,CAAC,WAAP,CAAmB,KAAK,KAAL,CAAW,SAA9B;AACD;AACF;;AAED,EAAA,gBAAgB,GAAA;AACd,UAAM,QAAQ,GAAG,KAAK,KAAL,CAAW,QAA5B;;AACA,QAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAClC,aAAO,QAAQ,EAAf;AACD;;AACD,WAAO,QAAQ,IAAI,QAAQ,CAAC,IAA5B;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,UAAM,EAAA,GAA6C,KAAK,KAAxD;AAAA,UAAM;AAAE,MAAA,SAAF;AAAa,MAAA,QAAb;AAAuB,MAAA;AAAvB,QAA8B,EAApC;AAAA,UAAyC,KAAK,GAAA,MAAA,CAAA,EAAA,EAAxC,CAAA,WAAA,EAAA,UAAA,EAAA,SAAA,CAAwC,CAA9C;;AACA,UAAM,UAAU,GACd,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB,MAAA,CAAA,MAAA,CAAA;AAAC,MAAA,SAAS,EAAE,SAAZ;AAAuB,MAAA,OAAO,EAAE;AAAhC,KAAA,EAA6C,KAA7C,CAAjB,EACG,QADH,CADF;;AAKA,QAAI,CAAC,KAAK,KAAL,CAAW,OAAhB,EAAyB;AACvB,aAAO,UAAP;AACD;;AAED,UAAM,SAAS,GAAG,KAAK,KAAL,CAAW,SAA7B;;AAEA,QAAI,CAAC,SAAD,IAAc,CAAC,SAAnB,EAA8B;AAC5B,aAAO,IAAP;AACD;;AAED,WAAO,QAAQ,CAAC,YAAT,CAAsB,UAAtB,EAAkC,SAAlC,CAAP;AACD;;AA9C8E;AACxE,UAAA,CAAA,WAAA,GAAc,YAAd","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { canUseDOM } from '../../helpers';\nimport { AlertGroupInline } from './AlertGroupInline';\nexport class AlertGroup extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            container: undefined\n        };\n    }\n    componentDidMount() {\n        const container = document.createElement('div');\n        const target = this.getTargetElement();\n        this.setState({ container });\n        target.appendChild(container);\n    }\n    componentWillUnmount() {\n        const target = this.getTargetElement();\n        if (this.state.container) {\n            target.removeChild(this.state.container);\n        }\n    }\n    getTargetElement() {\n        const appendTo = this.props.appendTo;\n        if (typeof appendTo === 'function') {\n            return appendTo();\n        }\n        return appendTo || document.body;\n    }\n    render() {\n        const _a = this.props, { className, children, isToast } = _a, props = __rest(_a, [\"className\", \"children\", \"isToast\"]);\n        const alertGroup = (React.createElement(AlertGroupInline, Object.assign({ className: className, isToast: isToast }, props), children));\n        if (!this.props.isToast) {\n            return alertGroup;\n        }\n        const container = this.state.container;\n        if (!canUseDOM || !container) {\n            return null;\n        }\n        return ReactDOM.createPortal(alertGroup, container);\n    }\n}\nAlertGroup.displayName = 'AlertGroup';\n//# sourceMappingURL=AlertGroup.js.map"]},"metadata":{},"sourceType":"module"}