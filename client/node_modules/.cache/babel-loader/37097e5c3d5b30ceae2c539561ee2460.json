{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy';\nimport { css } from '@patternfly/react-styles';\nexport class ClipboardCopyExpanded extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      className,\n      children,\n      onChange,\n      isReadOnly,\n      isCode\n    } = _a,\n          props = __rest(_a, [\"className\", \"children\", \"onChange\", \"isReadOnly\", \"isCode\"]);\n\n    return React.createElement(\"div\", Object.assign({\n      suppressContentEditableWarning: true,\n      className: css(styles.clipboardCopyExpandableContent, className),\n      onInput: e => onChange(e.target.innerText, e),\n      contentEditable: !isReadOnly\n    }, props), isCode ? React.createElement(\"pre\", null, children) : children);\n  }\n\n}\nClipboardCopyExpanded.displayName = 'ClipboardCopyExpanded';\nClipboardCopyExpanded.defaultProps = {\n  onChange: () => undefined,\n  className: '',\n  isReadOnly: false,\n  isCode: false\n};","map":{"version":3,"sources":["../../../../src/components/ClipboardCopy/ClipboardCopyExpanded.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,sEAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AAYA,OAAM,MAAO,qBAAP,SAAqC,KAAK,CAAC,SAA3C,CAAgF;AAEpF,EAAA,WAAA,CAAY,KAAZ,EAAsB;AACpB,UAAM,KAAN;AACD;;AASD,EAAA,MAAM,GAAA;AACJ,UAAM,EAAA,GAAkE,KAAK,KAA7E;AAAA,UAAM;AAAE,MAAA,SAAF;AAAa,MAAA,QAAb;AAAuB,MAAA,QAAvB;AAAiC,MAAA,UAAjC;AAA6C,MAAA;AAA7C,QAAmD,EAAzD;AAAA,UAA8D,KAAK,GAAA,MAAA,CAAA,EAAA,EAA7D,CAAA,WAAA,EAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,QAAA,CAA6D,CAAnE;;AAEA,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACE,MAAA,8BAA8B,EAAA,IADhC;AAEE,MAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,8BAAR,EAAwC,SAAxC,CAFhB;AAGE,MAAA,OAAO,EAAG,CAAD,IAAY,QAAQ,CAAC,CAAC,CAAC,MAAF,CAAS,SAAV,EAAqB,CAArB,CAH/B;AAIE,MAAA,eAAe,EAAE,CAAC;AAJpB,KAAA,EAKM,KALN,CAAA,EAOG,MAAM,GAAG,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAM,QAAN,CAAH,GAA2B,QAPpC,CADF;AAWD;;AA3BmF;AAC7E,qBAAA,CAAA,WAAA,GAAc,uBAAd;AAKA,qBAAA,CAAA,YAAA,GAAyD;AAC9D,EAAA,QAAQ,EAAE,MAAW,SADyC;AAE9D,EAAA,SAAS,EAAE,EAFmD;AAG9D,EAAA,UAAU,EAAE,KAHkD;AAI9D,EAAA,MAAM,EAAE;AAJsD,CAAzD","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy';\nimport { css } from '@patternfly/react-styles';\nexport class ClipboardCopyExpanded extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const _a = this.props, { className, children, onChange, isReadOnly, isCode } = _a, props = __rest(_a, [\"className\", \"children\", \"onChange\", \"isReadOnly\", \"isCode\"]);\n        return (React.createElement(\"div\", Object.assign({ suppressContentEditableWarning: true, className: css(styles.clipboardCopyExpandableContent, className), onInput: (e) => onChange(e.target.innerText, e), contentEditable: !isReadOnly }, props), isCode ? React.createElement(\"pre\", null, children) : children));\n    }\n}\nClipboardCopyExpanded.displayName = 'ClipboardCopyExpanded';\nClipboardCopyExpanded.defaultProps = {\n    onChange: () => undefined,\n    className: '',\n    isReadOnly: false,\n    isCode: false\n};\n//# sourceMappingURL=ClipboardCopyExpanded.js.map"]},"metadata":{},"sourceType":"module"}