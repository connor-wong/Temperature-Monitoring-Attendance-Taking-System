{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';\nimport { DropdownContext } from '../Dropdown';\nimport { DropdownWithContext } from '../Dropdown/DropdownWithContext';\nimport { useOUIAId } from '../../helpers';\nexport var OptionsMenuPosition;\n\n(function (OptionsMenuPosition) {\n  OptionsMenuPosition[\"right\"] = \"right\";\n  OptionsMenuPosition[\"left\"] = \"left\";\n})(OptionsMenuPosition || (OptionsMenuPosition = {}));\n\nexport var OptionsMenuDirection;\n\n(function (OptionsMenuDirection) {\n  OptionsMenuDirection[\"up\"] = \"up\";\n  OptionsMenuDirection[\"down\"] = \"down\";\n})(OptionsMenuDirection || (OptionsMenuDirection = {}));\n\nexport const OptionsMenu = _a => {\n  var {\n    className = '',\n    menuItems,\n    toggle,\n    isText = false,\n    isGrouped = false,\n    id,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref,\n    menuAppendTo = 'inline',\n    ouiaId,\n    ouiaSafe = true\n  } = _a,\n      props = __rest(_a, [\"className\", \"menuItems\", \"toggle\", \"isText\", \"isGrouped\", \"id\", \"ref\", \"menuAppendTo\", \"ouiaId\", \"ouiaSafe\"]);\n\n  return React.createElement(DropdownContext.Provider, {\n    value: {\n      id,\n      onSelect: () => undefined,\n      toggleIndicatorClass: styles.optionsMenuToggleIcon,\n      toggleTextClass: styles.optionsMenuToggleText,\n      menuClass: styles.optionsMenuMenu,\n      itemClass: styles.optionsMenuMenuItem,\n      toggleClass: isText ? styles.optionsMenuToggleButton : styles.optionsMenuToggle,\n      baseClass: styles.optionsMenu,\n      disabledClass: styles.modifiers.disabled,\n      menuComponent: isGrouped ? 'div' : 'ul',\n      baseComponent: 'div',\n      ouiaId: useOUIAId(OptionsMenu.displayName, ouiaId),\n      ouiaSafe,\n      ouiaComponentType: OptionsMenu.displayName\n    }\n  }, React.createElement(DropdownWithContext, Object.assign({}, props, {\n    id: id,\n    dropdownItems: menuItems,\n    className: className,\n    isGrouped: isGrouped,\n    toggle: toggle,\n    menuAppendTo: menuAppendTo\n  })));\n};\nOptionsMenu.displayName = 'OptionsMenu';","map":{"version":3,"sources":["../../../../src/components/OptionsMenu/OptionsMenu.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,kEAAnB;AACA,SAAS,eAAT,QAAgC,aAAhC;AACA,SAAS,mBAAT,QAAoC,iCAApC;AACA,SAAoB,SAApB,QAAqC,eAArC;AAGA,OAAA,IAAY,mBAAZ;;AAAA,CAAA,UAAY,mBAAZ,EAA+B;AAC7B,EAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,mBAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACD,CAHD,EAAY,mBAAmB,KAAnB,mBAAmB,GAAA,EAAA,CAA/B;;AAKA,OAAA,IAAY,oBAAZ;;AAAA,CAAA,UAAY,oBAAZ,EAAgC;AAC9B,EAAA,oBAAA,CAAA,IAAA,CAAA,GAAA,IAAA;AACA,EAAA,oBAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACD,CAHD,EAAY,oBAAoB,KAApB,oBAAoB,GAAA,EAAA,CAAhC;;AA4BA,OAAO,MAAM,WAAW,GAA+C,EAAD,IAa/C;MAbgD;AACrE,IAAA,SAAS,GAAG,EADyD;AAErE,IAAA,SAFqE;AAGrE,IAAA,MAHqE;AAIrE,IAAA,MAAM,GAAG,KAJ4D;AAKrE,IAAA,SAAS,GAAG,KALyD;AAMrE,IAAA,EANqE;AAOrE;AACA,IAAA,GARqE;AASrE,IAAA,YAAY,GAAG,QATsD;AAUrE,IAAA,MAVqE;AAWrE,IAAA,QAAQ,GAAG;AAX0D,MAWtD,E;MACZ,KAAK,GAAA,MAAA,CAAA,EAAA,EAZ6D,CAAA,WAAA,EAAA,WAAA,EAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,IAAA,EAAA,KAAA,EAAA,cAAA,EAAA,QAAA,EAAA,UAAA,CAY7D,C;;AACc,SACtB,KAAA,CAAA,aAAA,CAAC,eAAe,CAAC,QAAjB,EAAyB;AACvB,IAAA,KAAK,EAAE;AACL,MAAA,EADK;AAEL,MAAA,QAAQ,EAAE,MAAM,SAFX;AAGL,MAAA,oBAAoB,EAAE,MAAM,CAAC,qBAHxB;AAIL,MAAA,eAAe,EAAE,MAAM,CAAC,qBAJnB;AAKL,MAAA,SAAS,EAAE,MAAM,CAAC,eALb;AAML,MAAA,SAAS,EAAE,MAAM,CAAC,mBANb;AAOL,MAAA,WAAW,EAAE,MAAM,GAAG,MAAM,CAAC,uBAAV,GAAoC,MAAM,CAAC,iBAPzD;AAQL,MAAA,SAAS,EAAE,MAAM,CAAC,WARb;AASL,MAAA,aAAa,EAAE,MAAM,CAAC,SAAP,CAAiB,QAT3B;AAUL,MAAA,aAAa,EAAE,SAAS,GAAG,KAAH,GAAW,IAV9B;AAWL,MAAA,aAAa,EAAE,KAXV;AAYL,MAAA,MAAM,EAAE,SAAS,CAAC,WAAW,CAAC,WAAb,EAA0B,MAA1B,CAZZ;AAaL,MAAA,QAbK;AAcL,MAAA,iBAAiB,EAAE,WAAW,CAAC;AAd1B;AADgB,GAAzB,EAkBE,KAAA,CAAA,aAAA,CAAC,mBAAD,EAAoB,MAAA,CAAA,MAAA,CAAA,EAAA,EACd,KADc,EACT;AACT,IAAA,EAAE,EAAE,EADK;AAET,IAAA,aAAa,EAAE,SAFN;AAGT,IAAA,SAAS,EAAE,SAHF;AAIT,IAAA,SAAS,EAAE,SAJF;AAKT,IAAA,MAAM,EAAE,MALC;AAMT,IAAA,YAAY,EAAE;AANL,GADS,CAApB,CAlBF,CADsB;AA6BvB,CA1CM;AA2CP,WAAW,CAAC,WAAZ,GAA0B,aAA1B","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';\nimport { DropdownContext } from '../Dropdown';\nimport { DropdownWithContext } from '../Dropdown/DropdownWithContext';\nimport { useOUIAId } from '../../helpers';\nexport var OptionsMenuPosition;\n(function (OptionsMenuPosition) {\n    OptionsMenuPosition[\"right\"] = \"right\";\n    OptionsMenuPosition[\"left\"] = \"left\";\n})(OptionsMenuPosition || (OptionsMenuPosition = {}));\nexport var OptionsMenuDirection;\n(function (OptionsMenuDirection) {\n    OptionsMenuDirection[\"up\"] = \"up\";\n    OptionsMenuDirection[\"down\"] = \"down\";\n})(OptionsMenuDirection || (OptionsMenuDirection = {}));\nexport const OptionsMenu = (_a) => {\n    var { className = '', menuItems, toggle, isText = false, isGrouped = false, id, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref, menuAppendTo = 'inline', ouiaId, ouiaSafe = true } = _a, props = __rest(_a, [\"className\", \"menuItems\", \"toggle\", \"isText\", \"isGrouped\", \"id\", \"ref\", \"menuAppendTo\", \"ouiaId\", \"ouiaSafe\"]);\n    return (React.createElement(DropdownContext.Provider, { value: {\n            id,\n            onSelect: () => undefined,\n            toggleIndicatorClass: styles.optionsMenuToggleIcon,\n            toggleTextClass: styles.optionsMenuToggleText,\n            menuClass: styles.optionsMenuMenu,\n            itemClass: styles.optionsMenuMenuItem,\n            toggleClass: isText ? styles.optionsMenuToggleButton : styles.optionsMenuToggle,\n            baseClass: styles.optionsMenu,\n            disabledClass: styles.modifiers.disabled,\n            menuComponent: isGrouped ? 'div' : 'ul',\n            baseComponent: 'div',\n            ouiaId: useOUIAId(OptionsMenu.displayName, ouiaId),\n            ouiaSafe,\n            ouiaComponentType: OptionsMenu.displayName\n        } },\n        React.createElement(DropdownWithContext, Object.assign({}, props, { id: id, dropdownItems: menuItems, className: className, isGrouped: isGrouped, toggle: toggle, menuAppendTo: menuAppendTo }))));\n};\nOptionsMenu.displayName = 'OptionsMenu';\n//# sourceMappingURL=OptionsMenu.js.map"]},"metadata":{},"sourceType":"module"}