{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/SimpleList/simple-list';\nimport { SimpleListContext } from './SimpleList';\nexport class SimpleListItem extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.ref = React.createRef();\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      children,\n      isCurrent,\n      isActive,\n      className,\n      component: Component,\n      componentClassName,\n      componentProps,\n      onClick,\n      type,\n      href,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      itemId\n    } = _a,\n          props = __rest(_a, [\"children\", \"isCurrent\", \"isActive\", \"className\", \"component\", \"componentClassName\", \"componentProps\", \"onClick\", \"type\", \"href\", \"itemId\"]);\n\n    return React.createElement(SimpleListContext.Consumer, null, ({\n      currentRef,\n      updateCurrentRef,\n      isControlled\n    }) => {\n      const isButton = Component === 'button';\n      const isCurrentItem = this.ref && currentRef && isControlled ? currentRef.current === this.ref.current : isActive || isCurrent;\n      const additionalComponentProps = isButton ? {\n        type\n      } : {\n        tabIndex: 0,\n        href\n      };\n      return React.createElement(\"li\", Object.assign({\n        className: css(className)\n      }, props), React.createElement(Component, Object.assign({\n        className: css(styles.simpleListItemLink, isCurrentItem && styles.modifiers.current, componentClassName),\n        onClick: evt => {\n          onClick(evt);\n          updateCurrentRef(this.ref, this.props);\n        },\n        ref: this.ref\n      }, componentProps, additionalComponentProps), children));\n    });\n  }\n\n}\nSimpleListItem.displayName = 'SimpleListItem';\nSimpleListItem.defaultProps = {\n  children: null,\n  className: '',\n  isActive: false,\n  isCurrent: false,\n  component: 'button',\n  componentClassName: '',\n  type: 'button',\n  href: '',\n  onClick: () => {}\n};","map":{"version":3,"sources":["../../../../src/components/SimpleList/SimpleListItem.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,gEAAnB;AACA,SAAS,iBAAT,QAAkC,cAAlC;AA2BA,OAAM,MAAO,cAAP,SAA8B,KAAK,CAAC,SAApC,CAAkE;AAAxE,EAAA,WAAA,GAAA;;AAEE,SAAA,GAAA,GAAM,KAAK,CAAC,SAAN,EAAN;AAqED;;AAxDC,EAAA,MAAM,GAAA;AACJ,UAAM,EAAA,GAcF,KAAK,KAdT;AAAA,UAAM;AACJ,MAAA,QADI;AAEJ,MAAA,SAFI;AAGJ,MAAA,QAHI;AAIJ,MAAA,SAJI;AAKJ,MAAA,SAAS,EAAE,SALP;AAMJ,MAAA,kBANI;AAOJ,MAAA,cAPI;AAQJ,MAAA,OARI;AASJ,MAAA,IATI;AAUJ,MAAA,IAVI;AAWJ;AACA,MAAA;AAZI,QAYE,EAZR;AAAA,UAaK,KAAK,GAAA,MAAA,CAAA,EAAA,EAbJ,CAAA,UAAA,EAAA,WAAA,EAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,oBAAA,EAAA,gBAAA,EAAA,SAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,CAaI,CAbV;;AAeA,WACE,KAAA,CAAA,aAAA,CAAC,iBAAiB,CAAC,QAAnB,EAA2B,IAA3B,EACG,CAAC;AAAE,MAAA,UAAF;AAAc,MAAA,gBAAd;AAAgC,MAAA;AAAhC,KAAD,KAAmD;AAClD,YAAM,QAAQ,GAAG,SAAS,KAAK,QAA/B;AACA,YAAM,aAAa,GACjB,KAAK,GAAL,IAAY,UAAZ,IAA0B,YAA1B,GAAyC,UAAU,CAAC,OAAX,KAAuB,KAAK,GAAL,CAAS,OAAzE,GAAmF,QAAQ,IAAI,SADjG;AAGA,YAAM,wBAAwB,GAAG,QAAQ,GACrC;AACE,QAAA;AADF,OADqC,GAIrC;AACE,QAAA,QAAQ,EAAE,CADZ;AAEE,QAAA;AAFF,OAJJ;AASA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAI,QAAA,SAAS,EAAE,GAAG,CAAC,SAAD;AAAlB,OAAA,EAAmC,KAAnC,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,MAAA,CAAA,MAAA,CAAA;AACR,QAAA,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,kBADK,EAEZ,aAAa,IAAI,MAAM,CAAC,SAAP,CAAiB,OAFtB,EAGZ,kBAHY,CADN;AAMR,QAAA,OAAO,EAAG,GAAD,IAA0B;AACjC,UAAA,OAAO,CAAC,GAAD,CAAP;AACA,UAAA,gBAAgB,CAAC,KAAK,GAAN,EAAW,KAAK,KAAhB,CAAhB;AACD,SATO;AAUR,QAAA,GAAG,EAAE,KAAK;AAVF,OAAA,EAWJ,cAXI,EAYJ,wBAZI,CAAV,EAcG,QAdH,CADF,CADF;AAoBD,KAnCH,CADF;AAuCD;;AAtEqE;AAC/D,cAAA,CAAA,WAAA,GAAc,gBAAd;AAEA,cAAA,CAAA,YAAA,GAAoC;AACzC,EAAA,QAAQ,EAAE,IAD+B;AAEzC,EAAA,SAAS,EAAE,EAF8B;AAGzC,EAAA,QAAQ,EAAE,KAH+B;AAIzC,EAAA,SAAS,EAAE,KAJ8B;AAKzC,EAAA,SAAS,EAAE,QAL8B;AAMzC,EAAA,kBAAkB,EAAE,EANqB;AAOzC,EAAA,IAAI,EAAE,QAPmC;AAQzC,EAAA,IAAI,EAAE,EARmC;AASzC,EAAA,OAAO,EAAE,MAAK,CAAG;AATwB,CAApC","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/SimpleList/simple-list';\nimport { SimpleListContext } from './SimpleList';\nexport class SimpleListItem extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.ref = React.createRef();\n    }\n    render() {\n        const _a = this.props, { children, isCurrent, isActive, className, component: Component, componentClassName, componentProps, onClick, type, href, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        itemId } = _a, props = __rest(_a, [\"children\", \"isCurrent\", \"isActive\", \"className\", \"component\", \"componentClassName\", \"componentProps\", \"onClick\", \"type\", \"href\", \"itemId\"]);\n        return (React.createElement(SimpleListContext.Consumer, null, ({ currentRef, updateCurrentRef, isControlled }) => {\n            const isButton = Component === 'button';\n            const isCurrentItem = this.ref && currentRef && isControlled ? currentRef.current === this.ref.current : isActive || isCurrent;\n            const additionalComponentProps = isButton\n                ? {\n                    type\n                }\n                : {\n                    tabIndex: 0,\n                    href\n                };\n            return (React.createElement(\"li\", Object.assign({ className: css(className) }, props),\n                React.createElement(Component, Object.assign({ className: css(styles.simpleListItemLink, isCurrentItem && styles.modifiers.current, componentClassName), onClick: (evt) => {\n                        onClick(evt);\n                        updateCurrentRef(this.ref, this.props);\n                    }, ref: this.ref }, componentProps, additionalComponentProps), children)));\n        }));\n    }\n}\nSimpleListItem.displayName = 'SimpleListItem';\nSimpleListItem.defaultProps = {\n    children: null,\n    className: '',\n    isActive: false,\n    isCurrent: false,\n    component: 'button',\n    componentClassName: '',\n    type: 'button',\n    href: '',\n    onClick: () => { }\n};\n//# sourceMappingURL=SimpleListItem.js.map"]},"metadata":{},"sourceType":"module"}