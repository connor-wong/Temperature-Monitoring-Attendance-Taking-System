{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\src\\\\components\\\\Authentication\\\\ChangePassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { AccountContext } from \"./Account\";\nimport { Row, Col, Container, Form, Button, Spinner } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangePassword = () => {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    getSession,\n    authenticate\n  } = useContext(AccountContext);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    getSession().then(({\n      user,\n      email\n    }) => {\n      authenticate(email, password).then(() => {\n        user.changePassword(password, newPassword, (err, result) => {\n          if (err) console.error(err);\n          console.log(result);\n        });\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Email\",\n          onChange: event => setEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicPassword\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newPassword,\n        onChange: event => setNewPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Change password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChangePassword, \"d7Gc437gPK/K2RwO7+/Au8qVS3U=\");\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/src/components/Authentication/ChangePassword.js"],"names":["React","useState","useContext","AccountContext","Row","Col","Container","Form","Button","Spinner","ChangePassword","password","setPassword","newPassword","setNewPassword","isLoading","setIsLoading","getSession","authenticate","onSubmit","event","preventDefault","then","user","email","changePassword","err","result","console","error","log","setEmail","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,EAA8BC,IAA9B,EAAoCC,MAApC,EAA4CC,OAA5C,QAA2D,iBAA3D;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM;AAAEgB,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA+BhB,UAAU,CAACC,cAAD,CAA/C;;AAEA,QAAMgB,QAAQ,GAAIC,KAAD,IAAW;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AAEAJ,IAAAA,UAAU,GAAGK,IAAb,CAAkB,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,KAAqB;AACrCN,MAAAA,YAAY,CAACM,KAAD,EAAQb,QAAR,CAAZ,CAA8BW,IAA9B,CAAmC,MAAM;AACvCC,QAAAA,IAAI,CAACE,cAAL,CAAoBd,QAApB,EAA8BE,WAA9B,EAA2C,CAACa,GAAD,EAAMC,MAAN,KAAiB;AAC1D,cAAID,GAAJ,EAASE,OAAO,CAACC,KAAR,CAAcH,GAAd;AACTE,UAAAA,OAAO,CAACE,GAAR,CAAYH,MAAZ;AACD,SAHD;AAID,OALD;AAMD,KAPD;AAQD,GAXD;;AAaA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAER,QAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,gBAAtB;AAAA,+BACE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,WAAW,EAAC,OAFd;AAGE,UAAA,QAAQ,EAAGC,KAAD,IAAWW,QAAQ,CAACX,KAAK,CAACY,MAAN,CAAaC,KAAd;AAH/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,mBAAtB;AAAA,+BACE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,WAAW,EAAC,UAFd;AAGE,UAAA,QAAQ,EAAGb,KAAD,IAAWR,WAAW,CAACQ,KAAK,CAACY,MAAN,CAAaC,KAAd;AAHlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eAgBE;AACE,QAAA,KAAK,EAAEtB,QADT;AAEE,QAAA,QAAQ,EAAGS,KAAD,IAAWR,WAAW,CAACQ,KAAK,CAACY,MAAN,CAAaC,KAAd;AAFlC;AAAA;AAAA;AAAA;AAAA,cAhBF,eAqBE;AACE,QAAA,KAAK,EAAEpB,WADT;AAEE,QAAA,QAAQ,EAAGO,KAAD,IAAWN,cAAc,CAACM,KAAK,CAACY,MAAN,CAAaC,KAAd;AAFrC;AAAA;AAAA;AAAA;AAAA,cArBF,eA0BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CApDD;;GAAMvB,c;;KAAAA,c;AAsDN,eAAeA,cAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { AccountContext } from \"./Account\";\r\nimport { Row, Col, Container, Form, Button, Spinner } from \"react-bootstrap\";\r\n\r\nconst ChangePassword = () => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { getSession, authenticate } = useContext(AccountContext);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    getSession().then(({ user, email }) => {\r\n      authenticate(email, password).then(() => {\r\n        user.changePassword(password, newPassword, (err, result) => {\r\n          if (err) console.error(err);\r\n          console.log(result);\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            onChange={(event) => setEmail(event.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={(event) => setPassword(event.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <input\r\n          value={password}\r\n          onChange={(event) => setPassword(event.target.value)}\r\n        />\r\n\r\n        <input\r\n          value={newPassword}\r\n          onChange={(event) => setNewPassword(event.target.value)}\r\n        />\r\n\r\n        <button type=\"submit\">Change password</button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n"]},"metadata":{},"sourceType":"module"}