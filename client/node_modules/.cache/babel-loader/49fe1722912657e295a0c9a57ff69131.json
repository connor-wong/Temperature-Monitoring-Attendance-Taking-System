{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\client\\\\src\\\\components\\\\Dashboard\\\\AttendanceList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Container, ListGroup, Spinner, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AttendanceList = () => {\n  _s();\n\n  const [attendanceArray, setAttendanceArray] = useState([]);\n  const [attendanceList, setAttendanceList] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [showAttendance, setShowAttendance] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [studentList, setStudentList] = useState([]);\n  const [absent, setAbsent] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    let mounted = true;\n    let dateArray = [];\n\n    const getData = async () => {\n      const studentArray = await fetch(\"/sheet/student\").then(res => res.json()); // Get Student List\n\n      const response = await fetch(\"/aws/api\").then(res => res.json()); // Get Student Attendance\n\n      response.sort((a, b) => {\n        // Sort to latest date\n        return new Date(b.Date) - new Date(a.Date);\n      });\n      response.forEach(data => {\n        dateArray.push(data.Date.split(\" \")[0]);\n      });\n      dateArray = [...new Set(dateArray)]; // Remove Duplicates\n\n      if (mounted) {\n        setAttendanceArray(response);\n        setDates(dateArray);\n        setStudentList(studentArray);\n        setIsLoading(false);\n      }\n    };\n\n    getData();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const getAttendanceList = date => {\n    let absent = [];\n    const selectedDate = date;\n    const attendance = attendanceArray.filter((res // Filter Attendance By Selected Date\n    ) => res.Date.includes(selectedDate));\n    console.log(\"Attendance: \", attendance);\n    console.log(\"Students: \", studentList);\n    studentList.forEach(res => {\n      // Filter Absent Students\n      attendance.forEach(student => {\n        if (res[0] !== student.Name) {\n          console.log(student.Name);\n        }\n      });\n    });\n    setSelectedDate(date);\n    setAttendanceList(attendance);\n    setShowAttendance(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center attendancelist\",\n      children: showAttendance ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontWeight: \"bold\",\n                color: \"white\",\n                textAlign: \"left\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\"\n              },\n              children: selectedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              children: attendanceList.map(student => {\n                return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      xl: 8,\n                      lg: 8,\n                      md: 8,\n                      sm: 8,\n                      xs: 8,\n                      style: {\n                        fontWeight: \"bold\",\n                        color: \"#535353\",\n                        textAlign: \"left\"\n                      },\n                      children: student.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      xl: 4,\n                      lg: 4,\n                      md: 4,\n                      sm: 4,\n                      xs: 4,\n                      style: {\n                        fontWeight: \"bold\",\n                        color: \"#535353\",\n                        textAlign: \"right\"\n                      },\n                      children: [student.Temperature, \" \\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 25\n                  }, this)\n                }, student.Name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                width: \"100%\",\n                backgroundColor: \"white\",\n                color: \"#535353\",\n                fontWeight: \"bold\",\n                marginTop: \"10px\"\n              },\n              onClick: () => setShowAttendance(false),\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                width: \"100%\",\n                backgroundColor: \"white\",\n                color: \"#535353\",\n                fontWeight: \"bold\",\n                marginTop: \"10px\"\n              },\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontWeight: \"bold\",\n                color: \"white\",\n                textAlign: \"left\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\"\n              },\n              children: \"Attendance List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              style: {\n                color: \"white\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n              children: dates.map(date => {\n                return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  id: date,\n                  action: true,\n                  onClick: e => getAttendanceList(e.target.id),\n                  style: {\n                    fontWeight: \"bold\",\n                    color: \"#535353\"\n                  },\n                  children: date\n                }, date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AttendanceList, \"Mh7H82IJ+LHL6y/S4ASiV9wLJ8A=\");\n\n_c = AttendanceList;\nexport default AttendanceList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttendanceList\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/src/components/Dashboard/AttendanceList.js"],"names":["React","useState","useEffect","Row","Col","Container","ListGroup","Spinner","Button","AttendanceList","attendanceArray","setAttendanceArray","attendanceList","setAttendanceList","dates","setDates","showAttendance","setShowAttendance","selectedDate","setSelectedDate","studentList","setStudentList","absent","setAbsent","isLoading","setIsLoading","mounted","dateArray","getData","studentArray","fetch","then","res","json","response","sort","a","b","Date","forEach","data","push","split","Set","getAttendanceList","date","attendance","filter","includes","console","log","student","Name","fontWeight","color","textAlign","marginTop","marginBottom","map","Temperature","width","backgroundColor","e","target","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  ListGroup,\r\n  Spinner,\r\n  Button,\r\n} from \"react-bootstrap\";\r\n\r\nconst AttendanceList = () => {\r\n  const [attendanceArray, setAttendanceArray] = useState([]);\r\n  const [attendanceList, setAttendanceList] = useState([]);\r\n  const [dates, setDates] = useState([]);\r\n  const [showAttendance, setShowAttendance] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [studentList, setStudentList] = useState([]);\r\n  const [absent, setAbsent] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    let dateArray = [];\r\n\r\n    const getData = async () => {\r\n      const studentArray = await fetch(\"/sheet/student\").then((res) =>\r\n        res.json()\r\n      ); // Get Student List\r\n      const response = await fetch(\"/aws/api\").then((res) => res.json()); // Get Student Attendance\r\n\r\n      response.sort((a, b) => {\r\n        // Sort to latest date\r\n        return new Date(b.Date) - new Date(a.Date);\r\n      });\r\n\r\n      response.forEach((data) => {\r\n        dateArray.push(data.Date.split(\" \")[0]);\r\n      });\r\n\r\n      dateArray = [...new Set(dateArray)]; // Remove Duplicates\r\n\r\n      if (mounted) {\r\n        setAttendanceArray(response);\r\n        setDates(dateArray);\r\n        setStudentList(studentArray);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    getData();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const getAttendanceList = (date) => {\r\n    let absent = [];\r\n    const selectedDate = date;\r\n    const attendance = attendanceArray.filter((\r\n      res // Filter Attendance By Selected Date\r\n    ) => res.Date.includes(selectedDate));\r\n\r\n    console.log(\"Attendance: \", attendance);\r\n    console.log(\"Students: \", studentList);\r\n\r\n    studentList.forEach((res) => {\r\n      // Filter Absent Students\r\n      attendance.forEach((student) => {\r\n        if (res[0] !== student.Name) {\r\n          console.log(student.Name);\r\n        }\r\n      });\r\n    });\r\n\r\n    setSelectedDate(date);\r\n    setAttendanceList(attendance);\r\n    setShowAttendance(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"text-center attendancelist\">\r\n        {showAttendance ? (\r\n          <>\r\n            <Row>\r\n              <Col>\r\n                <h3\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\",\r\n                    textAlign: \"left\",\r\n                    marginTop: \"10px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                >\r\n                  {selectedDate}\r\n                </h3>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <ListGroup>\r\n                  {attendanceList.map((student) => {\r\n                    return (\r\n                      <ListGroup.Item key={student.Name}>\r\n                        <Row>\r\n                          <Col\r\n                            xl={8}\r\n                            lg={8}\r\n                            md={8}\r\n                            sm={8}\r\n                            xs={8}\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              color: \"#535353\",\r\n                              textAlign: \"left\",\r\n                            }}\r\n                          >\r\n                            {student.Name}\r\n                          </Col>\r\n                          <Col\r\n                            xl={4}\r\n                            lg={4}\r\n                            md={4}\r\n                            sm={4}\r\n                            xs={4}\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              color: \"#535353\",\r\n                              textAlign: \"right\",\r\n                            }}\r\n                          >\r\n                            {student.Temperature} °C\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    );\r\n                  })}\r\n                </ListGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Button\r\n                  style={{\r\n                    width: \"100%\",\r\n                    backgroundColor: \"white\",\r\n                    color: \"#535353\",\r\n                    fontWeight: \"bold\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                  onClick={() => setShowAttendance(false)}\r\n                >\r\n                  Back\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  style={{\r\n                    width: \"100%\",\r\n                    backgroundColor: \"white\",\r\n                    color: \"#535353\",\r\n                    fontWeight: \"bold\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  Download\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Row>\r\n              <Col>\r\n                <h3\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\",\r\n                    textAlign: \"left\",\r\n                    marginTop: \"10px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                >\r\n                  Attendance List\r\n                </h3>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                {isLoading ? (\r\n                  <Spinner animation=\"border\" style={{ color: \"white\" }} />\r\n                ) : (\r\n                  <ListGroup>\r\n                    {dates.map((date) => {\r\n                      return (\r\n                        <ListGroup.Item\r\n                          key={date}\r\n                          id={date}\r\n                          action\r\n                          onClick={(e) => getAttendanceList(e.target.id)}\r\n                          style={{ fontWeight: \"bold\", color: \"#535353\" }}\r\n                        >\r\n                          {date}\r\n                        </ListGroup.Item>\r\n                      );\r\n                    })}\r\n                  </ListGroup>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttendanceList;\r\n"]},"metadata":{},"sourceType":"module"}