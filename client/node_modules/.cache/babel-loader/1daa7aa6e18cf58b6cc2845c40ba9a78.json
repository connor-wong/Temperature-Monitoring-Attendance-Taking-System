{"ast":null,"code":"import _toConsumableArray from\"C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Row,Col,Container,Spinner,ListGroup,Button,Form}from\"react-bootstrap\";import CsvDownload from\"react-json-to-csv\";import AWS from\"aws-sdk\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SelectedAttendance=function SelectedAttendance(props){var selectedDate=props.date;var setUpdateData=props.setUpdateData;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isSave=_useState4[0],setIsSave=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),attendanceList=_useState6[0],setAttendanceList=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),studentList=_useState8[0],setstudentList=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),selectedClass=_useState10[0],setSelectedClass=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),absentList=_useState12[0],setAbsentList=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),editStatus=_useState14[0],setEditStatus=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),removeStudents=_useState16[0],setRemoveStudents=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),addStudents=_useState18[0],setAddStudents=_useState18[1];var _process$env=process.env,AWS_DEFAULT_REGION=_process$env.AWS_DEFAULT_REGION,AWS_ACCESS_KEY_ID=_process$env.AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY=_process$env.AWS_SECRET_ACCESS_KEY;// AWS DynamoDB Config\nAWS.config.update({region:AWS_DEFAULT_REGION,accessKeyId:AWS_ACCESS_KEY_ID,secretAccessKey:AWS_SECRET_ACCESS_KEY});var dynamodbClient=new AWS.DynamoDB.DocumentClient();var TABLE_NAME=\"March\";useEffect(function(){var mounted=true;var studentList=[];var absentList;var getData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,studentArray,attendance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"/aws/api\").then(function(res){return res.json();});case 2:response=_context.sent;_context.next=5;return fetch(\"/sheet/student\").then(function(res){return res.json();});case 5:studentArray=_context.sent;// Get Student List\n// Convert array to object\nstudentArray.forEach(function(res){studentList.push({Name:res[0],ID:res[1]});});response.sort(function(a,b){// Sort to latest datex\nreturn new Date(b.Date)-new Date(a.Date);});attendance=response.filter(function(res// Filter Attendance By Selected Date\n){return res.Date.includes(selectedDate);});// Filter absent students\nabsentList=studentList.filter(function(_ref2){var id1=_ref2.Name;return!attendance.some(function(_ref3){var id2=_ref3.Name;return id2===id1;});});if(mounted){setSelectedClass(attendance[0].Class);setAttendanceList(attendance);setAbsentList(absentList);setstudentList(studentList);setIsLoading(false);}case 11:case\"end\":return _context.stop();}}},_callee);}));return function getData(){return _ref.apply(this,arguments);};}();getData();return function(){mounted=false;};},[selectedDate]);var afterSaveHandler=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,attendance,absentList;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"/aws/api\").then(function(res){return res.json();});case 2:response=_context2.sent;// Get Student Attendance\nresponse.sort(function(a,b){// Sort to latest datex\nreturn new Date(b.Date)-new Date(a.Date);});attendance=response.filter(function(res// Filter Attendance By Selected Date\n){return res.Date.includes(selectedDate);});// Filter absent students\nabsentList=studentList.filter(function(_ref5){var id1=_ref5.Name;return!attendance.some(function(_ref6){var id2=_ref6.Name;return id2===id1;});});setAttendanceList(attendance);setAbsentList(absentList);setUpdateData(true);case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function afterSaveHandler(){return _ref4.apply(this,arguments);};}();var removeStudentHandler=function removeStudentHandler(e,student){var checked=e.target.checked;var removeList=_toConsumableArray(removeStudents);if(checked){removeList=removeList.filter(function(item){return item.Name!==student.Name;});setRemoveStudents(removeList);}else{removeList=[].concat(_toConsumableArray(removeStudents),[student]);setRemoveStudents(removeList);}};var addStudentHandler=function addStudentHandler(e,student){var checked=e.target.checked;var addList=_toConsumableArray(addStudents);if(checked){addList=[].concat(_toConsumableArray(addStudents),[student]);setAddStudents(addList);}else{addList=addList.filter(function(item){return item.Name!==student.Name;});setAddStudents(addList);}};var saveHandler=function saveHandler(){// Add Student\naddStudents.forEach(function(student){var saveParams={TableName:TABLE_NAME,Item:{Date:selectedDate,Name:student.Name,Class:selectedClass,\"Student ID\":student.ID}};dynamodbClient.put(saveParams,function(err,data){if(err){console.error(\"Unable to add item. Error JSON:\",JSON.stringify(err,null,2));}else{console.log(\"Added item:\",JSON.stringify(data,null,2));}});});//Remove Student\nremoveStudents.forEach(function(student){var deleteParams={TableName:TABLE_NAME,Key:{Date:student.Date,Name:student.Name}};dynamodbClient.delete(deleteParams,function(err,data){if(err){console.error(\"Unable to delete item. Error JSON:\",JSON.stringify(err,null,2));}else{console.log(\"DeleteItem succeeded:\",JSON.stringify(data,null,2));}});});setTimeout(function(){setIsSave(false);setEditStatus(false);setAddStudents([]);setRemoveStudents([]);afterSaveHandler();},1500);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Container,{className:\"selected-attendance text-center\",fluid:true,children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"h3\",{style:{fontWeight:\"bold\",color:\"white\",textAlign:\"left\"},children:selectedDate})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:isLoading?/*#__PURE__*/_jsx(Spinner,{animation:\"border\",style:{color:\"white\"}}):/*#__PURE__*/_jsxs(ListGroup,{children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:\"white\"},children:\"Attended\"}),attendanceList.map(function(student){return/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xl:6,lg:6,md:6,sm:6,xs:6,style:{fontWeight:\"bold\",fontSize:\"calc(0.5rem + 0.6vw)\",color:\"#535353\",textAlign:\"left\"},children:student.Name}),/*#__PURE__*/_jsxs(Col,{xl:3,lg:3,md:3,sm:3,xs:3,style:{fontWeight:\"bold\",fontSize:\"calc(0.5rem + 0.6vw)\",color:\"#535353\",textAlign:\"right\"},children:[student.Temperature,\" \\xB0C\"]}),editStatus===true&&/*#__PURE__*/_jsx(Col,{xl:3,lg:3,md:3,sm:3,xs:3,children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",defaultChecked:true,onChange:function onChange(e){removeStudentHandler(e,student);}})})]})},student.Name);}),/*#__PURE__*/_jsx(\"h3\",{style:{color:\"white\",marginTop:\"5px\"},children:\"Absent\"}),absentList.map(function(student){return/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xl:6,lg:6,md:6,sm:6,xs:6,style:{fontWeight:\"bold\",fontSize:\"calc(0.5rem + 0.6vw)\",color:\"#535353\",textAlign:\"left\"},children:student.Name}),/*#__PURE__*/_jsx(Col,{xl:3,lg:3,md:3,sm:3,xs:3,style:{fontWeight:\"bold\",fontSize:\"calc(0.5rem + 0.6vw)\",color:\"#535353\",textAlign:\"right\"},children:student.ID}),editStatus===true&&/*#__PURE__*/_jsx(Col,{xl:3,lg:3,md:3,sm:3,xs:3,children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",onChange:function onChange(e){addStudentHandler(e,student);}})})]})},student.Name);})]})})}),editStatus===false&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Button,{style:{width:\"100%\",backgroundColor:\"white\",color:\"#535353\",fontWeight:\"bold\",marginTop:\"10px\",borderColor:\"#007bff\"},onClick:function onClick(){return setEditStatus(true);},children:\"Edit\"})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(CsvDownload,{data:attendanceList,filename:selectedDate+\" \"+selectedClass+\".csv\",style:{width:\"100%\",backgroundColor:\"white\",color:\"#535353\",fontWeight:\"bold\",marginTop:\"10px\",borderRadius:\"5px\",borderColor:\"#007bff\",padding:\".375rem .75rem\"},children:\"Download\"})})})]}),editStatus===true&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Button,{disabled:removeStudents.length===0&&addStudents.length===0,style:{width:\"100%\",backgroundColor:\"white\",color:\"#535353\",fontWeight:\"bold\",marginTop:\"10px\",borderColor:\"#007bff\"},onClick:function onClick(){setIsSave(true);saveHandler();},children:isSave?/*#__PURE__*/_jsx(Spinner,{as:\"span\",animation:\"border\",size:\"sm\",role:\"status\",\"aria-hidden\":\"true\"}):/*#__PURE__*/_jsx(\"span\",{children:\"Save\"})})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Button,{style:{width:\"100%\",backgroundColor:\"white\",color:\"#535353\",fontWeight:\"bold\",marginTop:\"10px\",borderColor:\"#007bff\"},onClick:function onClick(){setAddStudents([]);setRemoveStudents([]);setEditStatus(false);},children:\"Cancel\"})})})]})]})});};export default SelectedAttendance;","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/src/components/Dashboard/LatestAttendance/SelectedAttendance.js"],"names":["React","useState","useEffect","Row","Col","Container","Spinner","ListGroup","Button","Form","CsvDownload","AWS","SelectedAttendance","props","selectedDate","date","setUpdateData","isLoading","setIsLoading","isSave","setIsSave","attendanceList","setAttendanceList","studentList","setstudentList","selectedClass","setSelectedClass","absentList","setAbsentList","editStatus","setEditStatus","removeStudents","setRemoveStudents","addStudents","setAddStudents","process","env","AWS_DEFAULT_REGION","AWS_ACCESS_KEY_ID","AWS_SECRET_ACCESS_KEY","config","update","region","accessKeyId","secretAccessKey","dynamodbClient","DynamoDB","DocumentClient","TABLE_NAME","mounted","getData","fetch","then","res","json","response","studentArray","forEach","push","Name","ID","sort","a","b","Date","attendance","filter","includes","id1","some","id2","Class","afterSaveHandler","removeStudentHandler","e","student","checked","target","removeList","item","addStudentHandler","addList","saveHandler","saveParams","TableName","Item","put","err","data","console","error","JSON","stringify","log","deleteParams","Key","delete","setTimeout","fontWeight","color","textAlign","map","fontSize","Temperature","marginTop","width","backgroundColor","borderColor","borderRadius","padding","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Spinner,\r\n  ListGroup,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport CsvDownload from \"react-json-to-csv\";\r\nimport AWS from \"aws-sdk\";\r\n\r\nconst SelectedAttendance = (props) => {\r\n  const selectedDate = props.date;\r\n  const setUpdateData = props.setUpdateData;\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSave, setIsSave] = useState(false);\r\n  const [attendanceList, setAttendanceList] = useState([]);\r\n  const [studentList, setstudentList] = useState([]);\r\n  const [selectedClass, setSelectedClass] = useState(\"\");\r\n  const [absentList, setAbsentList] = useState([]);\r\n  const [editStatus, setEditStatus] = useState(false);\r\n  const [removeStudents, setRemoveStudents] = useState([]);\r\n  const [addStudents, setAddStudents] = useState([]);\r\n\r\n  const { AWS_DEFAULT_REGION, AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY } =\r\n    process.env;\r\n\r\n  // AWS DynamoDB Config\r\n  AWS.config.update({\r\n    region: AWS_DEFAULT_REGION,\r\n    accessKeyId: AWS_ACCESS_KEY_ID,\r\n    secretAccessKey: AWS_SECRET_ACCESS_KEY,\r\n  });\r\n\r\n  const dynamodbClient = new AWS.DynamoDB.DocumentClient();\r\n  const TABLE_NAME = \"March\";\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    let studentList = [];\r\n    let absentList;\r\n\r\n    const getData = async () => {\r\n      const response = await fetch(\"/aws/api\").then((res) => res.json()); // Get Student Attendance\r\n      const studentArray = await fetch(\"/sheet/student\").then((res) =>\r\n        res.json()\r\n      ); // Get Student List\r\n\r\n      // Convert array to object\r\n      studentArray.forEach((res) => {\r\n        studentList.push({\r\n          Name: res[0],\r\n          ID: res[1],\r\n        });\r\n      });\r\n\r\n      response.sort((a, b) => {\r\n        // Sort to latest datex\r\n        return new Date(b.Date) - new Date(a.Date);\r\n      });\r\n\r\n      const attendance = response.filter(\r\n        (\r\n          res // Filter Attendance By Selected Date\r\n        ) => res.Date.includes(selectedDate)\r\n      );\r\n\r\n      // Filter absent students\r\n      absentList = studentList.filter(\r\n        ({ Name: id1 }) => !attendance.some(({ Name: id2 }) => id2 === id1)\r\n      );\r\n\r\n      if (mounted) {\r\n        setSelectedClass(attendance[0].Class);\r\n        setAttendanceList(attendance);\r\n        setAbsentList(absentList);\r\n        setstudentList(studentList);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    getData();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [selectedDate]);\r\n\r\n  const afterSaveHandler = async () => {\r\n    const response = await fetch(\"/aws/api\").then((res) => res.json()); // Get Student Attendance\r\n\r\n    response.sort((a, b) => {\r\n      // Sort to latest datex\r\n      return new Date(b.Date) - new Date(a.Date);\r\n    });\r\n\r\n    const attendance = response.filter(\r\n      (\r\n        res // Filter Attendance By Selected Date\r\n      ) => res.Date.includes(selectedDate)\r\n    );\r\n\r\n    // Filter absent students\r\n    const absentList = studentList.filter(\r\n      ({ Name: id1 }) => !attendance.some(({ Name: id2 }) => id2 === id1)\r\n    );\r\n\r\n    setAttendanceList(attendance);\r\n    setAbsentList(absentList);\r\n    setUpdateData(true);\r\n  };\r\n\r\n  const removeStudentHandler = (e, student) => {\r\n    let checked = e.target.checked;\r\n    let removeList = [...removeStudents];\r\n\r\n    if (checked) {\r\n      removeList = removeList.filter((item) => item.Name !== student.Name);\r\n      setRemoveStudents(removeList);\r\n    } else {\r\n      removeList = [...removeStudents, student];\r\n      setRemoveStudents(removeList);\r\n    }\r\n  };\r\n\r\n  const addStudentHandler = (e, student) => {\r\n    let checked = e.target.checked;\r\n    let addList = [...addStudents];\r\n\r\n    if (checked) {\r\n      addList = [...addStudents, student];\r\n      setAddStudents(addList);\r\n    } else {\r\n      addList = addList.filter((item) => item.Name !== student.Name);\r\n      setAddStudents(addList);\r\n    }\r\n  };\r\n\r\n  const saveHandler = () => {\r\n    // Add Student\r\n    addStudents.forEach((student) => {\r\n      const saveParams = {\r\n        TableName: TABLE_NAME,\r\n        Item: {\r\n          Date: selectedDate,\r\n          Name: student.Name,\r\n          Class: selectedClass,\r\n          \"Student ID\": student.ID,\r\n        },\r\n      };\r\n\r\n      dynamodbClient.put(saveParams, function (err, data) {\r\n        if (err) {\r\n          console.error(\r\n            \"Unable to add item. Error JSON:\",\r\n            JSON.stringify(err, null, 2)\r\n          );\r\n        } else {\r\n          console.log(\"Added item:\", JSON.stringify(data, null, 2));\r\n        }\r\n      });\r\n    });\r\n\r\n    //Remove Student\r\n    removeStudents.forEach((student) => {\r\n      const deleteParams = {\r\n        TableName: TABLE_NAME,\r\n        Key: {\r\n          Date: student.Date,\r\n          Name: student.Name,\r\n        },\r\n      };\r\n\r\n      dynamodbClient.delete(deleteParams, function (err, data) {\r\n        if (err) {\r\n          console.error(\r\n            \"Unable to delete item. Error JSON:\",\r\n            JSON.stringify(err, null, 2)\r\n          );\r\n        } else {\r\n          console.log(\"DeleteItem succeeded:\", JSON.stringify(data, null, 2));\r\n        }\r\n      });\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setIsSave(false);\r\n      setEditStatus(false);\r\n      setAddStudents([]);\r\n      setRemoveStudents([]);\r\n      afterSaveHandler();\r\n    }, 1500);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"selected-attendance text-center\" fluid>\r\n        <Row>\r\n          <Col>\r\n            <h3\r\n              style={{ fontWeight: \"bold\", color: \"white\", textAlign: \"left\" }}\r\n            >\r\n              {selectedDate}\r\n            </h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {isLoading ? (\r\n              <Spinner animation=\"border\" style={{ color: \"white\" }} />\r\n            ) : (\r\n              <ListGroup>\r\n                <h3 style={{ color: \"white\" }}>Attended</h3>\r\n                {attendanceList.map((student) => {\r\n                  return (\r\n                    <ListGroup.Item key={student.Name}>\r\n                      <Row>\r\n                        <Col\r\n                          xl={6}\r\n                          lg={6}\r\n                          md={6}\r\n                          sm={6}\r\n                          xs={6}\r\n                          style={{\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"calc(0.5rem + 0.6vw)\",\r\n                            color: \"#535353\",\r\n                            textAlign: \"left\",\r\n                          }}\r\n                        >\r\n                          {student.Name}\r\n                        </Col>\r\n                        <Col\r\n                          xl={3}\r\n                          lg={3}\r\n                          md={3}\r\n                          sm={3}\r\n                          xs={3}\r\n                          style={{\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"calc(0.5rem + 0.6vw)\",\r\n                            color: \"#535353\",\r\n                            textAlign: \"right\",\r\n                          }}\r\n                        >\r\n                          {student.Temperature} °C\r\n                        </Col>\r\n                        {editStatus === true && (\r\n                          <Col xl={3} lg={3} md={3} sm={3} xs={3}>\r\n                            <Form.Check\r\n                              type=\"checkbox\"\r\n                              defaultChecked\r\n                              onChange={(e) => {\r\n                                removeStudentHandler(e, student);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        )}\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  );\r\n                })}\r\n                <h3 style={{ color: \"white\", marginTop: \"5px\" }}>Absent</h3>\r\n                {absentList.map((student) => {\r\n                  return (\r\n                    <ListGroup.Item key={student.Name}>\r\n                      <Row>\r\n                        <Col\r\n                          xl={6}\r\n                          lg={6}\r\n                          md={6}\r\n                          sm={6}\r\n                          xs={6}\r\n                          style={{\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"calc(0.5rem + 0.6vw)\",\r\n                            color: \"#535353\",\r\n                            textAlign: \"left\",\r\n                          }}\r\n                        >\r\n                          {student.Name}\r\n                        </Col>\r\n                        <Col\r\n                          xl={3}\r\n                          lg={3}\r\n                          md={3}\r\n                          sm={3}\r\n                          xs={3}\r\n                          style={{\r\n                            fontWeight: \"bold\",\r\n                            fontSize: \"calc(0.5rem + 0.6vw)\",\r\n                            color: \"#535353\",\r\n                            textAlign: \"right\",\r\n                          }}\r\n                        >\r\n                          {student.ID}\r\n                        </Col>\r\n                        {editStatus === true && (\r\n                          <Col xl={3} lg={3} md={3} sm={3} xs={3}>\r\n                            <Form.Check\r\n                              type=\"checkbox\"\r\n                              onChange={(e) => {\r\n                                addStudentHandler(e, student);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        )}\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  );\r\n                })}\r\n              </ListGroup>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n\r\n        {editStatus === false && (\r\n          <>\r\n            <Row>\r\n              <Col>\r\n                <Button\r\n                  style={{\r\n                    width: \"100%\",\r\n                    backgroundColor: \"white\",\r\n                    color: \"#535353\",\r\n                    fontWeight: \"bold\",\r\n                    marginTop: \"10px\",\r\n                    borderColor: \"#007bff\",\r\n                  }}\r\n                  onClick={() => setEditStatus(true)}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <CsvDownload\r\n                  data={attendanceList}\r\n                  filename={selectedDate + \" \" + selectedClass + \".csv\"}\r\n                  style={{\r\n                    width: \"100%\",\r\n                    backgroundColor: \"white\",\r\n                    color: \"#535353\",\r\n                    fontWeight: \"bold\",\r\n                    marginTop: \"10px\",\r\n                    borderRadius: \"5px\",\r\n                    borderColor: \"#007bff\",\r\n                    padding: \".375rem .75rem\",\r\n                  }}\r\n                >\r\n                  Download\r\n                </CsvDownload>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n\r\n        {editStatus === true && (\r\n          <>\r\n            <Row>\r\n              <Col>\r\n                <Button\r\n                  disabled={\r\n                    removeStudents.length === 0 && addStudents.length === 0\r\n                  }\r\n                  style={{\r\n                    width: \"100%\",\r\n                    backgroundColor: \"white\",\r\n                    color: \"#535353\",\r\n                    fontWeight: \"bold\",\r\n                    marginTop: \"10px\",\r\n                    borderColor: \"#007bff\",\r\n                  }}\r\n                  onClick={() => {\r\n                    setIsSave(true);\r\n                    saveHandler();\r\n                  }}\r\n                >\r\n                  {isSave ? (\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"border\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                  ) : (\r\n                    <span>Save</span>\r\n                  )}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Button\r\n                  style={{\r\n                    width: \"100%\",\r\n                    backgroundColor: \"white\",\r\n                    color: \"#535353\",\r\n                    fontWeight: \"bold\",\r\n                    marginTop: \"10px\",\r\n                    borderColor: \"#007bff\",\r\n                  }}\r\n                  onClick={() => {\r\n                    setAddStudents([]);\r\n                    setRemoveStudents([]);\r\n                    setEditStatus(false);\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectedAttendance;\r\n"]},"metadata":{},"sourceType":"module"}