{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nexport var DrawerColorVariant;\n\n(function (DrawerColorVariant) {\n  DrawerColorVariant[\"default\"] = \"default\";\n  DrawerColorVariant[\"light200\"] = \"light-200\";\n})(DrawerColorVariant || (DrawerColorVariant = {}));\n\nexport const DrawerContext = React.createContext({\n  isExpanded: false,\n  isStatic: false,\n  onExpand: () => {},\n  position: 'right',\n  drawerRef: null\n});\nexport const Drawer = _a => {\n  var {\n    className = '',\n    children,\n    isExpanded = false,\n    isInline = false,\n    isStatic = false,\n    position = 'right',\n    onExpand = () => {}\n  } = _a,\n      props = __rest(_a, [\"className\", \"children\", \"isExpanded\", \"isInline\", \"isStatic\", \"position\", \"onExpand\"]);\n\n  const drawerRef = React.useRef();\n  return React.createElement(DrawerContext.Provider, {\n    value: {\n      isExpanded,\n      isStatic,\n      onExpand,\n      position,\n      drawerRef\n    }\n  }, React.createElement(\"div\", Object.assign({\n    className: css(styles.drawer, isExpanded && styles.modifiers.expanded, isInline && styles.modifiers.inline, isStatic && styles.modifiers.static, position === 'left' && styles.modifiers.panelLeft, position === 'bottom' && styles.modifiers.panelBottom, className),\n    ref: drawerRef\n  }, props), children));\n};\nDrawer.displayName = 'Drawer';","map":{"version":3,"sources":["../../../../src/components/Drawer/Drawer.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,uDAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AAEA,OAAA,IAAY,kBAAZ;;AAAA,CAAA,UAAY,kBAAZ,EAA8B;AAC5B,EAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,kBAAA,CAAA,UAAA,CAAA,GAAA,WAAA;AACD,CAHD,EAAY,kBAAkB,KAAlB,kBAAkB,GAAA,EAAA,CAA9B;;AA8BA,OAAO,MAAM,aAAa,GAAG,KAAK,CAAC,aAAN,CAAiD;AAC5E,EAAA,UAAU,EAAE,KADgE;AAE5E,EAAA,QAAQ,EAAE,KAFkE;AAG5E,EAAA,QAAQ,EAAE,MAAK,CAAG,CAH0D;AAI5E,EAAA,QAAQ,EAAE,OAJkE;AAK5E,EAAA,SAAS,EAAE;AALiE,CAAjD,CAAtB;AAQP,OAAO,MAAM,MAAM,GAA0C,EAAD,IAS1C;MAT2C;AAC3D,IAAA,SAAS,GAAG,EAD+C;AAE3D,IAAA,QAF2D;AAG3D,IAAA,UAAU,GAAG,KAH8C;AAI3D,IAAA,QAAQ,GAAG,KAJgD;AAK3D,IAAA,QAAQ,GAAG,KALgD;AAM3D,IAAA,QAAQ,GAAG,OANgD;AAO3D,IAAA,QAAQ,GAAG,MAAK,CAAG;AAPwC,MAOxC,E;MAChB,KAAK,GAAA,MAAA,CAAA,EAAA,EARmD,CAAA,WAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,CAQnD,C;;AAER,QAAM,SAAS,GAAG,KAAK,CAAC,MAAN,EAAlB;AACA,SACE,KAAA,CAAA,aAAA,CAAC,aAAa,CAAC,QAAf,EAAuB;AAAC,IAAA,KAAK,EAAE;AAAE,MAAA,UAAF;AAAc,MAAA,QAAd;AAAwB,MAAA,QAAxB;AAAkC,MAAA,QAAlC;AAA4C,MAAA;AAA5C;AAAR,GAAvB,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,MADK,EAEZ,UAAU,IAAI,MAAM,CAAC,SAAP,CAAiB,QAFnB,EAGZ,QAAQ,IAAI,MAAM,CAAC,SAAP,CAAiB,MAHjB,EAIZ,QAAQ,IAAI,MAAM,CAAC,SAAP,CAAiB,MAJjB,EAKZ,QAAQ,KAAK,MAAb,IAAuB,MAAM,CAAC,SAAP,CAAiB,SAL5B,EAMZ,QAAQ,KAAK,QAAb,IAAyB,MAAM,CAAC,SAAP,CAAiB,WAN9B,EAOZ,SAPY,CADhB;AAUE,IAAA,GAAG,EAAE;AAVP,GAAA,EAWM,KAXN,CAAA,EAaG,QAbH,CADF,CADF;AAmBD,CA9BM;AA+BP,MAAM,CAAC,WAAP,GAAqB,QAArB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nexport var DrawerColorVariant;\n(function (DrawerColorVariant) {\n    DrawerColorVariant[\"default\"] = \"default\";\n    DrawerColorVariant[\"light200\"] = \"light-200\";\n})(DrawerColorVariant || (DrawerColorVariant = {}));\nexport const DrawerContext = React.createContext({\n    isExpanded: false,\n    isStatic: false,\n    onExpand: () => { },\n    position: 'right',\n    drawerRef: null\n});\nexport const Drawer = (_a) => {\n    var { className = '', children, isExpanded = false, isInline = false, isStatic = false, position = 'right', onExpand = () => { } } = _a, props = __rest(_a, [\"className\", \"children\", \"isExpanded\", \"isInline\", \"isStatic\", \"position\", \"onExpand\"]);\n    const drawerRef = React.useRef();\n    return (React.createElement(DrawerContext.Provider, { value: { isExpanded, isStatic, onExpand, position, drawerRef } },\n        React.createElement(\"div\", Object.assign({ className: css(styles.drawer, isExpanded && styles.modifiers.expanded, isInline && styles.modifiers.inline, isStatic && styles.modifiers.static, position === 'left' && styles.modifiers.panelLeft, position === 'bottom' && styles.modifiers.panelBottom, className), ref: drawerRef }, props), children)));\n};\nDrawer.displayName = 'Drawer';\n//# sourceMappingURL=Drawer.js.map"]},"metadata":{},"sourceType":"module"}