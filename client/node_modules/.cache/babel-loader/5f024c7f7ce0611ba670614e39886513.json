{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\client\\\\src\\\\components\\\\Dashboard\\\\LatestAttendance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LatestAttendance = () => {\n  _s();\n\n  const [classes, setClasses] = useState([]);\n  const [data, setData] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [attendance, setAttendance] = useState([]);\n\n  const getData = async () => {\n    let classArray = [];\n    let studentArray = [];\n    await fetch(\"/drive/api\");\n    await fetch(\"/sheet/api\") // Get Class List\n    .then(res => res.json()).then(res => {\n      res.sheets.forEach(result => {\n        classArray.push(result.properties.title);\n      });\n    });\n    await fetch(\"/sheet/student\") // Get Student List\n    .then(res => res.json()).then(res => {\n      setStudents(res);\n    });\n    await fetch(\"/aws/api\") // Get Student Attendance\n    .then(res => res.json()).then(res => setData(res));\n    setClasses(classArray);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []); // Sort to latest date\n\n  data.sort((a, b) => {\n    return new Date(b.Date) - new Date(a.Date);\n  });\n  const latestAttendanceData = data.filter(res => res.Date.includes(data[0].Date.split(\" \")[0]));\n  let totalStudents = students.length;\n  students.forEach(res => {\n    latestAttendanceData.forEach(student => {\n      if (res[0].includes(student.Name)) {\n        totalStudents = totalStudents - 1;\n      }\n    });\n  });\n  console.log(latestAttendanceData);\n  console.log(totalStudents); //console.log(classes)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"latest-attendance text-center\",\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"white\",\n          textAlign: \"left\"\n        },\n        children: \"Latest Attendance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(LatestAttendance, \"No9W1T2IFdRw2HDHByul+bLasjA=\");\n\n_c = LatestAttendance;\nexport default LatestAttendance;\n\nvar _c;\n\n$RefreshReg$(_c, \"LatestAttendance\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/src/components/Dashboard/LatestAttendance.js"],"names":["React","useState","useEffect","Row","Col","Container","Button","LatestAttendance","classes","setClasses","data","setData","students","setStudents","attendance","setAttendance","getData","classArray","studentArray","fetch","then","res","json","sheets","forEach","result","push","properties","title","sort","a","b","Date","latestAttendanceData","filter","includes","split","totalStudents","length","student","Name","console","log","color","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\r\n\r\nconst LatestAttendance = () => {\r\n  const [classes, setClasses] = useState([])\r\n  const [data, setData] = useState([])\r\n  const [students, setStudents] = useState([])\r\n  const [attendance, setAttendance] = useState([])\r\n\r\n  const getData = async () => {\r\n    let classArray = []\r\n    let studentArray = []\r\n\r\n    await fetch(\"/drive/api\")\r\n    \r\n    await fetch(\"/sheet/api\") // Get Class List\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        res.sheets.forEach((result) => {\r\n          classArray.push(result.properties.title)\r\n        })\r\n      });\r\n\r\n    await fetch(\"/sheet/student\") // Get Student List\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setStudents(res)\r\n      });\r\n\r\n    await fetch(\"/aws/api\") // Get Student Attendance\r\n      .then((res) => res.json())\r\n      .then((res) => setData(res))\r\n\r\n      setClasses(classArray)\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  // Sort to latest date\r\n  data.sort((a, b) => {\r\n    return new Date(b.Date) - new Date(a.Date); \r\n  })\r\n\r\n  const latestAttendanceData = data.filter((res) => res.Date.includes(data[0].Date.split(\" \")[0]))\r\n\r\n  let totalStudents = students.length\r\n\r\n  students.forEach((res) => {\r\n    latestAttendanceData.forEach((student) => {\r\n      if(res[0].includes(student.Name)){\r\n        totalStudents = totalStudents - 1\r\n      }\r\n    })\r\n  })\r\n\r\n  console.log(latestAttendanceData)\r\n  console.log(totalStudents)\r\n  //console.log(classes)\r\n  \r\n  return (\r\n    <>\r\n      <Container className=\"latest-attendance text-center\" fluid>\r\n        <h3 style={{ color: \"white\", textAlign: \"left\" }}>Latest Attendance</h3>\r\n        <Row>\r\n        \r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LatestAttendance;\r\n"]},"metadata":{},"sourceType":"module"}