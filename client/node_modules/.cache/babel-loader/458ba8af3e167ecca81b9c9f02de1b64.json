{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { ToggleTemplate } from './ToggleTemplate';\nimport styles from '@patternfly/react-styles/css/components/Pagination/pagination';\nimport { css } from '@patternfly/react-styles';\nimport { Navigation } from './Navigation';\nimport { PaginationOptionsMenu } from './PaginationOptionsMenu';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nimport widthChars from \"@patternfly/react-tokens/dist/esm/c_pagination__nav_page_select_c_form_control_width_chars\";\nexport var PaginationVariant;\n\n(function (PaginationVariant) {\n  PaginationVariant[\"top\"] = \"top\";\n  PaginationVariant[\"bottom\"] = \"bottom\";\n})(PaginationVariant || (PaginationVariant = {}));\n\nconst defaultPerPageOptions = [{\n  title: '10',\n  value: 10\n}, {\n  title: '20',\n  value: 20\n}, {\n  title: '50',\n  value: 50\n}, {\n  title: '100',\n  value: 100\n}];\n\nconst handleInputWidth = (lastPage, node) => {\n  if (!node) {\n    return;\n  }\n\n  const len = String(lastPage).length;\n\n  if (len >= 3) {\n    node.style.setProperty(widthChars.name, `${len}`);\n  } else {\n    node.style.setProperty(widthChars.name, '2');\n  }\n};\n\nlet paginationId = 0;\nexport class Pagination extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.paginationRef = React.createRef();\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Pagination.displayName, this.props.variant)\n    };\n  }\n\n  getLastPage() {\n    const {\n      itemCount,\n      perPage\n    } = this.props;\n    return Math.ceil(itemCount / perPage) || 0;\n  }\n\n  componentDidMount() {\n    const node = this.paginationRef.current;\n    handleInputWidth(this.getLastPage(), node);\n  }\n\n  componentDidUpdate(prevProps) {\n    const node = this.paginationRef.current;\n\n    if (prevProps.perPage !== this.props.perPage || prevProps.itemCount !== this.props.itemCount) {\n      handleInputWidth(this.getLastPage(), node);\n    }\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      children,\n      className,\n      variant,\n      isDisabled,\n      isCompact,\n      isStatic,\n      isSticky,\n      perPage,\n      titles,\n      firstPage,\n      page: propPage,\n      offset,\n      defaultToFullPage,\n      itemCount,\n      itemsStart,\n      itemsEnd,\n      perPageOptions,\n      dropDirection: dropDirectionProp,\n      widgetId,\n      toggleTemplate,\n      onSetPage,\n      onPerPageSelect,\n      onFirstClick,\n      onPreviousClick,\n      onNextClick,\n      onPageInput,\n      onLastClick,\n      ouiaId,\n      ouiaSafe\n    } = _a,\n          props = __rest(_a, [\"children\", \"className\", \"variant\", \"isDisabled\", \"isCompact\", \"isStatic\", \"isSticky\", \"perPage\", \"titles\", \"firstPage\", \"page\", \"offset\", \"defaultToFullPage\", \"itemCount\", \"itemsStart\", \"itemsEnd\", \"perPageOptions\", \"dropDirection\", \"widgetId\", \"toggleTemplate\", \"onSetPage\", \"onPerPageSelect\", \"onFirstClick\", \"onPreviousClick\", \"onNextClick\", \"onPageInput\", \"onLastClick\", \"ouiaId\", \"ouiaSafe\"]);\n\n    const dropDirection = dropDirectionProp || (variant === 'bottom' && !isStatic ? 'up' : 'down');\n    let page = propPage;\n\n    if (!page && offset) {\n      page = Math.ceil(offset / perPage);\n    }\n\n    const lastPage = this.getLastPage();\n\n    if (page < firstPage && itemCount > 0) {\n      page = firstPage;\n    } else if (page > lastPage) {\n      page = lastPage;\n    }\n\n    const firstIndex = itemCount <= 0 ? 0 : (page - 1) * perPage + 1;\n    let lastIndex;\n\n    if (itemCount <= 0) {\n      lastIndex = 0;\n    } else {\n      lastIndex = page === lastPage ? itemCount : page * perPage;\n    }\n\n    return React.createElement(\"div\", Object.assign({\n      ref: this.paginationRef,\n      className: css(styles.pagination, variant === PaginationVariant.bottom && styles.modifiers.bottom, isCompact && styles.modifiers.compact, isStatic && styles.modifiers.static, isSticky && styles.modifiers.sticky, className),\n      id: `${widgetId}-${paginationId++}`\n    }, getOUIAProps(Pagination.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props), variant === PaginationVariant.top && React.createElement(\"div\", {\n      className: css(styles.paginationTotalItems)\n    }, React.createElement(ToggleTemplate, {\n      firstIndex: firstIndex,\n      lastIndex: lastIndex,\n      itemCount: itemCount,\n      itemsTitle: titles.items,\n      ofWord: titles.ofWord\n    })), React.createElement(PaginationOptionsMenu, {\n      itemsPerPageTitle: titles.itemsPerPage,\n      perPageSuffix: titles.perPageSuffix,\n      itemsTitle: isCompact ? '' : titles.items,\n      optionsToggle: titles.optionsToggle,\n      perPageOptions: perPageOptions,\n      firstIndex: itemsStart !== null ? itemsStart : firstIndex,\n      lastIndex: itemsEnd !== null ? itemsEnd : lastIndex,\n      defaultToFullPage: defaultToFullPage,\n      itemCount: itemCount,\n      page: page,\n      perPage: perPage,\n      lastPage: lastPage,\n      onPerPageSelect: onPerPageSelect,\n      dropDirection: dropDirection,\n      widgetId: widgetId,\n      toggleTemplate: toggleTemplate,\n      isDisabled: isDisabled\n    }), React.createElement(Navigation, {\n      pagesTitle: titles.page,\n      toLastPage: titles.toLastPage,\n      toPreviousPage: titles.toPreviousPage,\n      toNextPage: titles.toNextPage,\n      toFirstPage: titles.toFirstPage,\n      currPage: titles.currPage,\n      paginationTitle: titles.paginationTitle,\n      ofWord: titles.ofWord,\n      page: itemCount <= 0 ? 0 : page,\n      perPage: perPage,\n      firstPage: itemsStart !== null ? itemsStart : 1,\n      lastPage: lastPage,\n      onSetPage: onSetPage,\n      onFirstClick: onFirstClick,\n      onPreviousClick: onPreviousClick,\n      onNextClick: onNextClick,\n      onLastClick: onLastClick,\n      onPageInput: onPageInput,\n      isDisabled: isDisabled,\n      isCompact: isCompact\n    }), children);\n  }\n\n}\nPagination.displayName = 'Pagination';\nPagination.defaultProps = {\n  children: null,\n  className: '',\n  variant: PaginationVariant.top,\n  isDisabled: false,\n  isCompact: false,\n  isSticky: false,\n  perPage: defaultPerPageOptions[0].value,\n  titles: {\n    items: '',\n    page: '',\n    itemsPerPage: 'Items per page',\n    perPageSuffix: 'per page',\n    toFirstPage: 'Go to first page',\n    toPreviousPage: 'Go to previous page',\n    toLastPage: 'Go to last page',\n    toNextPage: 'Go to next page',\n    optionsToggle: 'Items per page',\n    currPage: 'Current page',\n    paginationTitle: 'Pagination',\n    ofWord: 'of'\n  },\n  firstPage: 1,\n  page: 0,\n  offset: 0,\n  defaultToFullPage: false,\n  itemsStart: null,\n  itemsEnd: null,\n  perPageOptions: defaultPerPageOptions,\n  widgetId: 'pagination-options-menu',\n  toggleTemplate: ToggleTemplate,\n  onSetPage: () => undefined,\n  onPerPageSelect: () => undefined,\n  onFirstClick: () => undefined,\n  onPreviousClick: () => undefined,\n  onNextClick: () => undefined,\n  onPageInput: () => undefined,\n  onLastClick: () => undefined,\n  ouiaSafe: true\n};","map":{"version":3,"sources":["../../../../src/components/Pagination/Pagination.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { ToggleTemplate } from './ToggleTemplate';\nimport styles from '@patternfly/react-styles/css/components/Pagination/pagination';\nimport { css } from '@patternfly/react-styles';\nimport { Navigation } from './Navigation';\nimport { PaginationOptionsMenu } from './PaginationOptionsMenu';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nimport widthChars from \"@patternfly/react-tokens/dist/esm/c_pagination__nav_page_select_c_form_control_width_chars\";\nexport var PaginationVariant;\n(function (PaginationVariant) {\n    PaginationVariant[\"top\"] = \"top\";\n    PaginationVariant[\"bottom\"] = \"bottom\";\n})(PaginationVariant || (PaginationVariant = {}));\nconst defaultPerPageOptions = [\n    {\n        title: '10',\n        value: 10\n    },\n    {\n        title: '20',\n        value: 20\n    },\n    {\n        title: '50',\n        value: 50\n    },\n    {\n        title: '100',\n        value: 100\n    }\n];\nconst handleInputWidth = (lastPage, node) => {\n    if (!node) {\n        return;\n    }\n    const len = String(lastPage).length;\n    if (len >= 3) {\n        node.style.setProperty(widthChars.name, `${len}`);\n    }\n    else {\n        node.style.setProperty(widthChars.name, '2');\n    }\n};\nlet paginationId = 0;\nexport class Pagination extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.paginationRef = React.createRef();\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(Pagination.displayName, this.props.variant)\n        };\n    }\n    getLastPage() {\n        const { itemCount, perPage } = this.props;\n        return Math.ceil(itemCount / perPage) || 0;\n    }\n    componentDidMount() {\n        const node = this.paginationRef.current;\n        handleInputWidth(this.getLastPage(), node);\n    }\n    componentDidUpdate(prevProps) {\n        const node = this.paginationRef.current;\n        if (prevProps.perPage !== this.props.perPage || prevProps.itemCount !== this.props.itemCount) {\n            handleInputWidth(this.getLastPage(), node);\n        }\n    }\n    render() {\n        const _a = this.props, { children, className, variant, isDisabled, isCompact, isStatic, isSticky, perPage, titles, firstPage, page: propPage, offset, defaultToFullPage, itemCount, itemsStart, itemsEnd, perPageOptions, dropDirection: dropDirectionProp, widgetId, toggleTemplate, onSetPage, onPerPageSelect, onFirstClick, onPreviousClick, onNextClick, onPageInput, onLastClick, ouiaId, ouiaSafe } = _a, props = __rest(_a, [\"children\", \"className\", \"variant\", \"isDisabled\", \"isCompact\", \"isStatic\", \"isSticky\", \"perPage\", \"titles\", \"firstPage\", \"page\", \"offset\", \"defaultToFullPage\", \"itemCount\", \"itemsStart\", \"itemsEnd\", \"perPageOptions\", \"dropDirection\", \"widgetId\", \"toggleTemplate\", \"onSetPage\", \"onPerPageSelect\", \"onFirstClick\", \"onPreviousClick\", \"onNextClick\", \"onPageInput\", \"onLastClick\", \"ouiaId\", \"ouiaSafe\"]);\n        const dropDirection = dropDirectionProp || (variant === 'bottom' && !isStatic ? 'up' : 'down');\n        let page = propPage;\n        if (!page && offset) {\n            page = Math.ceil(offset / perPage);\n        }\n        const lastPage = this.getLastPage();\n        if (page < firstPage && itemCount > 0) {\n            page = firstPage;\n        }\n        else if (page > lastPage) {\n            page = lastPage;\n        }\n        const firstIndex = itemCount <= 0 ? 0 : (page - 1) * perPage + 1;\n        let lastIndex;\n        if (itemCount <= 0) {\n            lastIndex = 0;\n        }\n        else {\n            lastIndex = page === lastPage ? itemCount : page * perPage;\n        }\n        return (React.createElement(\"div\", Object.assign({ ref: this.paginationRef, className: css(styles.pagination, variant === PaginationVariant.bottom && styles.modifiers.bottom, isCompact && styles.modifiers.compact, isStatic && styles.modifiers.static, isSticky && styles.modifiers.sticky, className), id: `${widgetId}-${paginationId++}` }, getOUIAProps(Pagination.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props),\n            variant === PaginationVariant.top && (React.createElement(\"div\", { className: css(styles.paginationTotalItems) },\n                React.createElement(ToggleTemplate, { firstIndex: firstIndex, lastIndex: lastIndex, itemCount: itemCount, itemsTitle: titles.items, ofWord: titles.ofWord }))),\n            React.createElement(PaginationOptionsMenu, { itemsPerPageTitle: titles.itemsPerPage, perPageSuffix: titles.perPageSuffix, itemsTitle: isCompact ? '' : titles.items, optionsToggle: titles.optionsToggle, perPageOptions: perPageOptions, firstIndex: itemsStart !== null ? itemsStart : firstIndex, lastIndex: itemsEnd !== null ? itemsEnd : lastIndex, defaultToFullPage: defaultToFullPage, itemCount: itemCount, page: page, perPage: perPage, lastPage: lastPage, onPerPageSelect: onPerPageSelect, dropDirection: dropDirection, widgetId: widgetId, toggleTemplate: toggleTemplate, isDisabled: isDisabled }),\n            React.createElement(Navigation, { pagesTitle: titles.page, toLastPage: titles.toLastPage, toPreviousPage: titles.toPreviousPage, toNextPage: titles.toNextPage, toFirstPage: titles.toFirstPage, currPage: titles.currPage, paginationTitle: titles.paginationTitle, ofWord: titles.ofWord, page: itemCount <= 0 ? 0 : page, perPage: perPage, firstPage: itemsStart !== null ? itemsStart : 1, lastPage: lastPage, onSetPage: onSetPage, onFirstClick: onFirstClick, onPreviousClick: onPreviousClick, onNextClick: onNextClick, onLastClick: onLastClick, onPageInput: onPageInput, isDisabled: isDisabled, isCompact: isCompact }),\n            children));\n    }\n}\nPagination.displayName = 'Pagination';\nPagination.defaultProps = {\n    children: null,\n    className: '',\n    variant: PaginationVariant.top,\n    isDisabled: false,\n    isCompact: false,\n    isSticky: false,\n    perPage: defaultPerPageOptions[0].value,\n    titles: {\n        items: '',\n        page: '',\n        itemsPerPage: 'Items per page',\n        perPageSuffix: 'per page',\n        toFirstPage: 'Go to first page',\n        toPreviousPage: 'Go to previous page',\n        toLastPage: 'Go to last page',\n        toNextPage: 'Go to next page',\n        optionsToggle: 'Items per page',\n        currPage: 'Current page',\n        paginationTitle: 'Pagination',\n        ofWord: 'of'\n    },\n    firstPage: 1,\n    page: 0,\n    offset: 0,\n    defaultToFullPage: false,\n    itemsStart: null,\n    itemsEnd: null,\n    perPageOptions: defaultPerPageOptions,\n    widgetId: 'pagination-options-menu',\n    toggleTemplate: ToggleTemplate,\n    onSetPage: () => undefined,\n    onPerPageSelect: () => undefined,\n    onFirstClick: () => undefined,\n    onPreviousClick: () => undefined,\n    onNextClick: () => undefined,\n    onPageInput: () => undefined,\n    onLastClick: () => undefined,\n    ouiaSafe: true\n};\n//# sourceMappingURL=Pagination.js.map"]},"metadata":{},"sourceType":"module"}