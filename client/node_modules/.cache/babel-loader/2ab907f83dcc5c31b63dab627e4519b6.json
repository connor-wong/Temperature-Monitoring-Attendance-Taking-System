{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\client\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport NavBar from \"./NavBar\";\nimport LatestAttendance from \"./LatestAttendance\";\nimport StudentMatters from \"./StudentMatters\";\nimport Classes from \"./Classes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [classes, setClasses] = useState([]);\n  const [attendance, setAttendance] = useState([]);\n  const [temperatureMatter, setTemperatureMatter] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    let mounted = true;\n\n    const getData = async () => {\n      let classes = [];\n      let classArray = [];\n      let studentArray = [];\n      let dataArray = [];\n      let attendance = [];\n      let temperatureMatter = [];\n      await fetch(\"/drive/api\");\n      await fetch(\"/sheet/api\").then(res => res.json()).then(res => {\n        classes = res.sheets;\n        res.sheets.forEach(result => {\n          classArray.push(result.properties.title);\n        });\n      });\n      console.log(classArray);\n\n      for (const classTitle of classArray) {\n        axios.post(\"/sheet/class\", classTitle);\n        await fetch(\"/sheet/student\") // Get Student List\n        .then(res => res.json()).then(res => {\n          studentArray = res;\n        });\n        await fetch(\"/aws/api\") // Get Student Attendance\n        .then(res => res.json()).then(res => {\n          dataArray = res;\n        }); // Sort to latest date\n\n        dataArray.sort((a, b) => {\n          return new Date(b.Date) - new Date(a.Date);\n        }); // Data formation\n\n        const latestAttendanceData = dataArray.filter(res => res.Date.includes(dataArray[0].Date.split(\" \")[0]));\n\n        if (dataArray.length < 1 || dataArray === undefined) {// do nothing\n        } else {\n          const date = dataArray[0].Date.split(\" \")[0];\n          const totalStudents = studentArray.length;\n          let presentCount = 0;\n          studentArray.forEach(res => {\n            latestAttendanceData.forEach(student => {\n              if (res[0].includes(student.Name)) {\n                presentCount = presentCount + 1;\n              }\n            });\n          }); // Class, Date, Present, Total Students\n\n          attendance.push({\n            Class: classTitle,\n            Date: date,\n            Present: presentCount,\n            Total_Students: totalStudents\n          });\n          latestAttendanceData.forEach(student => {\n            if (student.Temperature >= 37.5) {\n              temperatureMatter.push(student);\n            }\n          });\n        }\n      }\n\n      if (mounted) {\n        setClasses(classes); // Class Component\n\n        setAttendance(attendance); // LatestAttendance Component\n\n        setTemperatureMatter(temperatureMatter);\n        setIsLoading(false);\n      }\n    };\n\n    getData();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center dashboard\",\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontSize: \"calc(22px + 2vw)\",\n              fontWeight: \"bold\",\n              color: \"#535353\",\n              textAlign: \"left\"\n            },\n            children: \"Your Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xl: 6,\n          lg: 12,\n          md: 12,\n          sm: 12,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              marginBottom: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xl: 12,\n              lg: 12,\n              md: 12,\n              sm: 12,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(LatestAttendance, {\n                attendance: attendance,\n                isLoading: isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              marginBottom: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xl: 12,\n              lg: 12,\n              md: 12,\n              sm: 12,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(StudentMatters, {\n                temperatureMatter: temperatureMatter,\n                isLoading: isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xl: 6,\n          lg: 12,\n          md: 12,\n          sm: 12,\n          xs: 12,\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Classes, {\n            classes: classes,\n            isLoading: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"VN6uY4mjcA2ncj68UPy3mg6eKzo=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/src/components/Dashboard/Dashboard.js"],"names":["React","useEffect","useState","axios","Row","Col","Container","NavBar","LatestAttendance","StudentMatters","Classes","Dashboard","classes","setClasses","attendance","setAttendance","temperatureMatter","setTemperatureMatter","isLoading","setIsLoading","mounted","getData","classArray","studentArray","dataArray","fetch","then","res","json","sheets","forEach","result","push","properties","title","console","log","classTitle","post","sort","a","b","Date","latestAttendanceData","filter","includes","split","length","undefined","date","totalStudents","presentCount","student","Name","Class","Present","Total_Students","Temperature","fontSize","fontWeight","color","textAlign","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\n\r\nimport NavBar from \"./NavBar\";\r\nimport LatestAttendance from \"./LatestAttendance\";\r\nimport StudentMatters from \"./StudentMatters\";\r\nimport Classes from \"./Classes\";\r\n\r\nconst Dashboard = () => {\r\n  const [classes, setClasses] = useState([]);\r\n  const [attendance, setAttendance] = useState([]);\r\n  const [temperatureMatter, setTemperatureMatter] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const getData = async () => {\r\n      let classes = [];\r\n      let classArray = [];\r\n      let studentArray = [];\r\n      let dataArray = [];\r\n      let attendance = [];\r\n      let temperatureMatter = [];\r\n\r\n      await fetch(\"/drive/api\");\r\n\r\n      await fetch(\"/sheet/api\")\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          classes = res.sheets;\r\n          res.sheets.forEach((result) => {\r\n            classArray.push(result.properties.title);\r\n          });\r\n        });\r\n\r\n      console.log(classArray);\r\n\r\n      for (const classTitle of classArray) {\r\n        axios.post(\"/sheet/class\", classTitle);\r\n\r\n        await fetch(\"/sheet/student\") // Get Student List\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            studentArray = res;\r\n          });\r\n\r\n        await fetch(\"/aws/api\") // Get Student Attendance\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            dataArray = res;\r\n          });\r\n\r\n        // Sort to latest date\r\n        dataArray.sort((a, b) => {\r\n          return new Date(b.Date) - new Date(a.Date);\r\n        });\r\n\r\n        // Data formation\r\n        const latestAttendanceData = dataArray.filter((res) =>\r\n          res.Date.includes(dataArray[0].Date.split(\" \")[0])\r\n        );\r\n\r\n        if (dataArray.length < 1 || dataArray === undefined) {\r\n          // do nothing\r\n        } else {\r\n          const date = dataArray[0].Date.split(\" \")[0];\r\n          const totalStudents = studentArray.length;\r\n          let presentCount = 0;\r\n\r\n          studentArray.forEach((res) => {\r\n            latestAttendanceData.forEach((student) => {\r\n              if (res[0].includes(student.Name)) {\r\n                presentCount = presentCount + 1;\r\n              }\r\n            });\r\n          });\r\n\r\n          // Class, Date, Present, Total Students\r\n          attendance.push({\r\n            Class: classTitle,\r\n            Date: date,\r\n            Present: presentCount,\r\n            Total_Students: totalStudents,\r\n          });\r\n\r\n          latestAttendanceData.forEach((student) => {\r\n            if (student.Temperature >= 37.5) {\r\n              temperatureMatter.push(student);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if (mounted) {\r\n        setClasses(classes); // Class Component\r\n        setAttendance(attendance); // LatestAttendance Component\r\n        setTemperatureMatter(temperatureMatter);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    getData();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Container className=\"text-center dashboard\" fluid>\r\n        <Row>\r\n          <Col>\r\n            <h3\r\n              style={{\r\n                fontSize: \"calc(22px + 2vw)\",\r\n                fontWeight: \"bold\",\r\n                color: \"#535353\",\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              Your Dashboard\r\n            </h3>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col xl={6} lg={12} md={12} sm={12} xs={12}>\r\n            <Row style={{ marginBottom: \"10px\" }}>\r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                <LatestAttendance\r\n                  attendance={attendance}\r\n                  isLoading={isLoading}\r\n                />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row style={{ marginBottom: \"10px\" }}>\r\n              <Col xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                <StudentMatters\r\n                  temperatureMatter={temperatureMatter}\r\n                  isLoading={isLoading}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col\r\n            xl={6}\r\n            lg={12}\r\n            md={12}\r\n            sm={12}\r\n            xs={12}\r\n            style={{ marginBottom: \"10px\" }}\r\n          >\r\n            <Classes classes={classes} isLoading={isLoading} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}