{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\client\\\\src\\\\components\\\\Dashboard\\\\StudentMatters\\\\StudentMatters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Container, Toast, Spinner, Button, OverlayTrigger, Popover } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StudentMatters = props => {\n  _s();\n\n  const temperatureMatterArray = props.temperatureMatter;\n  const lowAttendanceMatterArray = props.lowAttendanceMatter;\n  const isLoading = props.isLoading;\n  const [absentList, setAbsentList] = useState([]);\n  const [selectedList, setSelectedList] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    let classArray = [];\n    let absentArray = [];\n    let absentList = [];\n\n    const processData = () => {\n      lowAttendanceMatterArray.forEach(student => {\n        classArray.push(student.Class);\n      });\n      classArray = [...new Set(classArray)];\n      classArray.forEach(classTitle => {\n        absentArray = lowAttendanceMatterArray.filter(res => res.Class.includes(classTitle));\n        absentList.push({\n          Class: classTitle,\n          Student: absentArray\n        });\n      });\n\n      if (mounted) {\n        setAbsentList(absentList);\n      }\n    };\n\n    processData();\n    return () => {\n      mounted = false;\n    };\n  }, [lowAttendanceMatterArray]);\n\n  const clickHandler = e => {\n    let selectedList = [];\n    selectedList = lowAttendanceMatterArray.filter(res => res.Class.includes(e.target.value));\n    setSelectedList(selectedList);\n  };\n\n  console.log(selectedList);\n\n  const popover = /*#__PURE__*/_jsxDEV(Popover, {\n    style: {\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Popover.Title, {\n      as: \"h3\",\n      children: \"Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover.Content, {\n      children: [\"And here's some \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"amazing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this), \" content. It's very engaging. right?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"student-matters text-center\",\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: \"white\",\n        textAlign: \"left\"\n      },\n      children: \"Student Matters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xl: 6,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: \"white\",\n            fontSize: \"22px\",\n            textAlign: \"left\"\n          },\n          children: \"High Temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              style: {\n                color: \"white\",\n                marginBottom: \"20px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [temperatureMatterArray.length === 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              color: \"white\"\n            },\n            children: \"No Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), temperatureMatterArray.length > 0 && /*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              marginBottom: \"10px\"\n            },\n            children: temperatureMatterArray.map((result, index) => {\n              return /*#__PURE__*/_jsxDEV(Col, {\n                xl: 12,\n                lg: 12,\n                md: 12,\n                sm: 12,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Toast, {\n                  style: {\n                    marginBottom: \"5px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      className: \"mr-auto\",\n                      children: result.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: result.Class\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                    style: {\n                      color: \"#535353\",\n                      fontWeight: \"bold\",\n                      textAlign: \"left\"\n                    },\n                    children: [result.Temperature, \" \\xB0C \\u2003 \", result.Date]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xl: 6,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: \"white\",\n            fontSize: \"22px\",\n            textAlign: \"left\"\n          },\n          children: \"Low Attendance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              style: {\n                color: \"white\",\n                marginBottom: \"20px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [absentList.length === 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              color: \"white\"\n            },\n            children: \"No Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), absentList.length > 0 && /*#__PURE__*/_jsxDEV(Row, {\n            children: absentList.map((result, index) => {\n              return /*#__PURE__*/_jsxDEV(Col, {\n                xl: 12,\n                lg: 12,\n                md: 12,\n                sm: 12,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                  trigger: \"click\",\n                  placement: \"bottom\",\n                  overlay: popover,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      color: \"#535353\",\n                      backgroundColor: \"white\",\n                      width: \"100%\",\n                      fontWeight: \"bold\",\n                      marginBottom: \"10px\"\n                    },\n                    value: result.Class,\n                    onClick: e => clickHandler(e),\n                    children: [result.Class, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: [result.Student.length, \" Alerts\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StudentMatters, \"aNo7zpYElYTT0JZuD0tbauXV2PU=\");\n\n_c = StudentMatters;\nexport default StudentMatters;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentMatters\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/src/components/Dashboard/StudentMatters/StudentMatters.js"],"names":["React","useState","useEffect","Row","Col","Container","Toast","Spinner","Button","OverlayTrigger","Popover","StudentMatters","props","temperatureMatterArray","temperatureMatter","lowAttendanceMatterArray","lowAttendanceMatter","isLoading","absentList","setAbsentList","selectedList","setSelectedList","mounted","classArray","absentArray","processData","forEach","student","push","Class","Set","classTitle","filter","res","includes","Student","clickHandler","e","target","value","console","log","popover","width","color","textAlign","marginBottom","fontSize","length","map","result","index","Name","fontWeight","Temperature","Date","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Toast,\r\n  Spinner,\r\n  Button,\r\n  OverlayTrigger,\r\n  Popover,\r\n} from \"react-bootstrap\";\r\n\r\nconst StudentMatters = (props) => {\r\n  const temperatureMatterArray = props.temperatureMatter;\r\n  const lowAttendanceMatterArray = props.lowAttendanceMatter;\r\n  const isLoading = props.isLoading;\r\n\r\n  const [absentList, setAbsentList] = useState([]);\r\n  const [selectedList, setSelectedList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    let classArray = [];\r\n    let absentArray = [];\r\n    let absentList = [];\r\n\r\n    const processData = () => {\r\n      lowAttendanceMatterArray.forEach((student) => {\r\n        classArray.push(student.Class);\r\n      });\r\n\r\n      classArray = [...new Set(classArray)];\r\n\r\n      classArray.forEach((classTitle) => {\r\n        absentArray = lowAttendanceMatterArray.filter((res) =>\r\n          res.Class.includes(classTitle)\r\n        );\r\n        absentList.push({\r\n          Class: classTitle,\r\n          Student: absentArray,\r\n        });\r\n      });\r\n\r\n      if (mounted) {\r\n        setAbsentList(absentList);\r\n      }\r\n    };\r\n\r\n    processData();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [lowAttendanceMatterArray]);\r\n\r\n  const clickHandler = (e) => {\r\n    let selectedList = [];\r\n\r\n    selectedList = lowAttendanceMatterArray.filter((res) =>\r\n      res.Class.includes(e.target.value)\r\n    );\r\n\r\n    setSelectedList(selectedList);\r\n  };\r\n\r\n  console.log(selectedList);\r\n\r\n  const popover = (\r\n    <Popover style={{ width: \"100%\" }}>\r\n      <Popover.Title as=\"h3\">Students</Popover.Title>\r\n      <Popover.Content>\r\n        And here's some <strong>amazing</strong> content. It's very engaging.\r\n        right?\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n\r\n  return (\r\n    <Container className=\"student-matters text-center\" fluid>\r\n      <h3 style={{ color: \"white\", textAlign: \"left\" }}>Student Matters</h3>\r\n      <Row style={{ marginBottom: \"10px\" }}>\r\n        <Col xl={6} lg={6} md={6} sm={12} xs={12}>\r\n          <h3 style={{ color: \"white\", fontSize: \"22px\", textAlign: \"left\" }}>\r\n            High Temperature\r\n          </h3>\r\n\r\n          {isLoading ? (\r\n            <Row>\r\n              <Col>\r\n                <Spinner\r\n                  animation=\"border\"\r\n                  style={{ color: \"white\", marginBottom: \"20px\" }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          ) : (\r\n            <>\r\n              {temperatureMatterArray.length === 0 && (\r\n                <h3 style={{ color: \"white\" }}>No Data</h3>\r\n              )}\r\n              {temperatureMatterArray.length > 0 && (\r\n                <Row style={{ marginBottom: \"10px\" }}>\r\n                  {temperatureMatterArray.map((result, index) => {\r\n                    return (\r\n                      <Col xl={12} lg={12} md={12} sm={12} xs={12} key={index}>\r\n                        <Toast style={{ marginBottom: \"5px\" }}>\r\n                          <Toast.Header>\r\n                            <strong className=\"mr-auto\">{result.Name}</strong>\r\n                            <strong>{result.Class}</strong>\r\n                          </Toast.Header>\r\n                          <Toast.Body\r\n                            style={{\r\n                              color: \"#535353\",\r\n                              fontWeight: \"bold\",\r\n                              textAlign: \"left\",\r\n                            }}\r\n                          >\r\n                            {result.Temperature} °C &emsp; {result.Date}\r\n                          </Toast.Body>\r\n                        </Toast>\r\n                      </Col>\r\n                    );\r\n                  })}\r\n                </Row>\r\n              )}\r\n            </>\r\n          )}\r\n        </Col>\r\n\r\n        <Col xl={6} lg={6} md={6} sm={12} xs={12}>\r\n          <h3 style={{ color: \"white\", fontSize: \"22px\", textAlign: \"left\" }}>\r\n            Low Attendance\r\n          </h3>\r\n          {isLoading ? (\r\n            <Row>\r\n              <Col>\r\n                <Spinner\r\n                  animation=\"border\"\r\n                  style={{ color: \"white\", marginBottom: \"20px\" }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          ) : (\r\n            <>\r\n              {absentList.length === 0 && (\r\n                <h3 style={{ color: \"white\" }}>No Data</h3>\r\n              )}\r\n              {absentList.length > 0 && (\r\n                <Row>\r\n                  {absentList.map((result, index) => {\r\n                    return (\r\n                      <Col xl={12} lg={12} md={12} sm={12} xs={12} key={index}>\r\n                        <OverlayTrigger\r\n                          trigger=\"click\"\r\n                          placement=\"bottom\"\r\n                          overlay={popover}\r\n                        >\r\n                          <Button\r\n                            style={{\r\n                              color: \"#535353\",\r\n                              backgroundColor: \"white\",\r\n                              width: \"100%\",\r\n                              fontWeight: \"bold\",\r\n                              marginBottom: \"10px\",\r\n                            }}\r\n                            value={result.Class}\r\n                            onClick={(e) => clickHandler(e)}\r\n                          >\r\n                            {result.Class}{\" \"}\r\n                            <span style={{ color: \"red\" }}>\r\n                              {result.Student.length} Alerts\r\n                            </span>\r\n                          </Button>\r\n                        </OverlayTrigger>\r\n                      </Col>\r\n                    );\r\n                  })}\r\n                </Row>\r\n              )}\r\n            </>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StudentMatters;\r\n"]},"metadata":{},"sourceType":"module"}