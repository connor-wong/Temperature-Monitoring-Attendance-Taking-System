{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nexport var IconSize;\n\n(function (IconSize) {\n  IconSize[\"sm\"] = \"sm\";\n  IconSize[\"md\"] = \"md\";\n  IconSize[\"lg\"] = \"lg\";\n  IconSize[\"xl\"] = \"xl\";\n})(IconSize || (IconSize = {}));\n\nexport const getSize = size => {\n  switch (size) {\n    case IconSize.sm:\n      return '1em';\n\n    case IconSize.md:\n      return '1.5em';\n\n    case IconSize.lg:\n      return '2em';\n\n    case IconSize.xl:\n      return '3em';\n\n    default:\n      return '1em';\n  }\n};\nlet currentId = 0;\n/**\n * Factory to create Icon class components for consumers\n */\n\nexport function createIcon({\n  name,\n  xOffset = 0,\n  yOffset = 0,\n  width,\n  height,\n  svgPath\n}) {\n  var _a;\n\n  return _a = class SVGIcon extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.id = `icon-title-${currentId++}`;\n    }\n\n    render() {\n      const _a = this.props,\n            {\n        size,\n        color,\n        title,\n        noVerticalAlign\n      } = _a,\n            props = __rest(_a, [\"size\", \"color\", \"title\", \"noVerticalAlign\"]);\n\n      const hasTitle = Boolean(title);\n      const heightWidth = getSize(size);\n      const baseAlign = -0.125 * Number.parseFloat(heightWidth);\n      const style = noVerticalAlign ? null : {\n        verticalAlign: `${baseAlign}em`\n      };\n      const viewBox = [xOffset, yOffset, width, height].join(' ');\n      return React.createElement(\"svg\", Object.assign({\n        style: style,\n        fill: color,\n        height: heightWidth,\n        width: heightWidth,\n        viewBox: viewBox,\n        \"aria-labelledby\": hasTitle ? this.id : null,\n        \"aria-hidden\": hasTitle ? null : true,\n        role: \"img\"\n      }, props), hasTitle && React.createElement(\"title\", {\n        id: this.id\n      }, title), React.createElement(\"path\", {\n        d: svgPath\n      }));\n    }\n\n  }, _a.displayName = name, _a.defaultProps = {\n    color: 'currentColor',\n    size: IconSize.sm,\n    noVerticalAlign: false\n  }, _a;\n}","map":{"version":3,"sources":["../../src/createIcon.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nexport var IconSize;\n(function (IconSize) {\n    IconSize[\"sm\"] = \"sm\";\n    IconSize[\"md\"] = \"md\";\n    IconSize[\"lg\"] = \"lg\";\n    IconSize[\"xl\"] = \"xl\";\n})(IconSize || (IconSize = {}));\nexport const getSize = (size) => {\n    switch (size) {\n        case IconSize.sm:\n            return '1em';\n        case IconSize.md:\n            return '1.5em';\n        case IconSize.lg:\n            return '2em';\n        case IconSize.xl:\n            return '3em';\n        default:\n            return '1em';\n    }\n};\nlet currentId = 0;\n/**\n * Factory to create Icon class components for consumers\n */\nexport function createIcon({ name, xOffset = 0, yOffset = 0, width, height, svgPath }) {\n    var _a;\n    return _a = class SVGIcon extends React.Component {\n            constructor() {\n                super(...arguments);\n                this.id = `icon-title-${currentId++}`;\n            }\n            render() {\n                const _a = this.props, { size, color, title, noVerticalAlign } = _a, props = __rest(_a, [\"size\", \"color\", \"title\", \"noVerticalAlign\"]);\n                const hasTitle = Boolean(title);\n                const heightWidth = getSize(size);\n                const baseAlign = -0.125 * Number.parseFloat(heightWidth);\n                const style = noVerticalAlign ? null : { verticalAlign: `${baseAlign}em` };\n                const viewBox = [xOffset, yOffset, width, height].join(' ');\n                return (React.createElement(\"svg\", Object.assign({ style: style, fill: color, height: heightWidth, width: heightWidth, viewBox: viewBox, \"aria-labelledby\": hasTitle ? this.id : null, \"aria-hidden\": hasTitle ? null : true, role: \"img\" }, props),\n                    hasTitle && React.createElement(\"title\", { id: this.id }, title),\n                    React.createElement(\"path\", { d: svgPath })));\n            }\n        },\n        _a.displayName = name,\n        _a.defaultProps = {\n            color: 'currentColor',\n            size: IconSize.sm,\n            noVerticalAlign: false\n        },\n        _a;\n}\n//# sourceMappingURL=createIcon.js.map"]},"metadata":{},"sourceType":"module"}