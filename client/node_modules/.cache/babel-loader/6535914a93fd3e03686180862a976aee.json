{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button, ButtonVariant } from '../Button';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationBadge/notification-badge';\nimport AttentionBellIcon from \"@patternfly/react-icons/dist/esm/icons/attention-bell-icon\";\nimport BellIcon from \"@patternfly/react-icons/dist/esm/icons/bell-icon\";\nexport var NotificationBadgeVariant;\n\n(function (NotificationBadgeVariant) {\n  NotificationBadgeVariant[\"read\"] = \"read\";\n  NotificationBadgeVariant[\"unread\"] = \"unread\";\n  NotificationBadgeVariant[\"attention\"] = \"attention\";\n})(NotificationBadgeVariant || (NotificationBadgeVariant = {}));\n\nexport const NotificationBadge = _a => {\n  var {\n    isRead,\n    children,\n    variant = isRead ? 'read' : 'unread',\n    count = 0,\n    attentionIcon = React.createElement(AttentionBellIcon, null),\n    icon = React.createElement(BellIcon, null),\n    className\n  } = _a,\n      props = __rest(_a, [\"isRead\", \"children\", \"variant\", \"count\", \"attentionIcon\", \"icon\", \"className\"]);\n\n  let notificationChild = icon;\n\n  if (children !== undefined) {\n    notificationChild = children;\n  } else if (variant === NotificationBadgeVariant.attention) {\n    notificationChild = attentionIcon;\n  }\n\n  return React.createElement(Button, Object.assign({\n    variant: ButtonVariant.plain,\n    className: className\n  }, props), React.createElement(\"span\", {\n    className: css(styles.notificationBadge, styles.modifiers[variant])\n  }, notificationChild, count > 0 && React.createElement(\"span\", {\n    className: css(styles.notificationBadgeCount)\n  }, count)));\n};\nNotificationBadge.displayName = 'NotificationBadge';","map":{"version":3,"sources":["../../../../src/components/NotificationBadge/NotificationBadge.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,MAAT,EAAiB,aAAjB,QAAmD,WAAnD;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,8EAAnB;AACA,OAAO,iBAAP,MAAwB,4DAAxB;AACA,OAAO,QAAP,MAAe,kDAAf;AAEA,OAAA,IAAY,wBAAZ;;AAAA,CAAA,UAAY,wBAAZ,EAAoC;AAClC,EAAA,wBAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,wBAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,wBAAA,CAAA,WAAA,CAAA,GAAA,WAAA;AACD,CAJD,EAAY,wBAAwB,KAAxB,wBAAwB,GAAA,EAAA,CAApC;;AAyBA,OAAO,MAAM,iBAAiB,GAAqD,EAAD,IASrD;MATsD;AACjF,IAAA,MADiF;AAEjF,IAAA,QAFiF;AAGjF,IAAA,OAAO,GAAG,MAAM,GAAG,MAAH,GAAY,QAHqD;AAIjF,IAAA,KAAK,GAAG,CAJyE;AAKjF,IAAA,aAAa,GAAG,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAkB,IAAlB,CALiE;AAMjF,IAAA,IAAI,GAAG,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS,IAAT,CAN0E;AAOjF,IAAA;AAPiF,MAOxE,E;MACN,KAAK,GAAA,MAAA,CAAA,EAAA,EARyE,CAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,OAAA,EAAA,eAAA,EAAA,MAAA,EAAA,WAAA,CAQzE,C;;AAER,MAAI,iBAAiB,GAAG,IAAxB;;AACA,MAAI,QAAQ,KAAK,SAAjB,EAA4B;AAC1B,IAAA,iBAAiB,GAAG,QAApB;AACD,GAFD,MAEO,IAAI,OAAO,KAAK,wBAAwB,CAAC,SAAzC,EAAoD;AACzD,IAAA,iBAAiB,GAAG,aAApB;AACD;;AACD,SACE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,OAAO,EAAE,aAAa,CAAC,KAAxB;AAA+B,IAAA,SAAS,EAAE;AAA1C,GAAA,EAAyD,KAAzD,CAAP,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,iBAAR,EAA2B,MAAM,CAAC,SAAP,CAAiB,OAAjB,CAA3B;AAApB,GAAA,EACG,iBADH,EAEG,KAAK,GAAG,CAAR,IAAa,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,sBAAR;AAApB,GAAA,EAAsD,KAAtD,CAFhB,CADF,CADF;AAQD,CAxBM;AAyBP,iBAAiB,CAAC,WAAlB,GAAgC,mBAAhC","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button, ButtonVariant } from '../Button';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationBadge/notification-badge';\nimport AttentionBellIcon from \"@patternfly/react-icons/dist/esm/icons/attention-bell-icon\";\nimport BellIcon from \"@patternfly/react-icons/dist/esm/icons/bell-icon\";\nexport var NotificationBadgeVariant;\n(function (NotificationBadgeVariant) {\n    NotificationBadgeVariant[\"read\"] = \"read\";\n    NotificationBadgeVariant[\"unread\"] = \"unread\";\n    NotificationBadgeVariant[\"attention\"] = \"attention\";\n})(NotificationBadgeVariant || (NotificationBadgeVariant = {}));\nexport const NotificationBadge = (_a) => {\n    var { isRead, children, variant = isRead ? 'read' : 'unread', count = 0, attentionIcon = React.createElement(AttentionBellIcon, null), icon = React.createElement(BellIcon, null), className } = _a, props = __rest(_a, [\"isRead\", \"children\", \"variant\", \"count\", \"attentionIcon\", \"icon\", \"className\"]);\n    let notificationChild = icon;\n    if (children !== undefined) {\n        notificationChild = children;\n    }\n    else if (variant === NotificationBadgeVariant.attention) {\n        notificationChild = attentionIcon;\n    }\n    return (React.createElement(Button, Object.assign({ variant: ButtonVariant.plain, className: className }, props),\n        React.createElement(\"span\", { className: css(styles.notificationBadge, styles.modifiers[variant]) },\n            notificationChild,\n            count > 0 && React.createElement(\"span\", { className: css(styles.notificationBadgeCount) }, count))));\n};\nNotificationBadge.displayName = 'NotificationBadge';\n//# sourceMappingURL=NotificationBadge.js.map"]},"metadata":{},"sourceType":"module"}