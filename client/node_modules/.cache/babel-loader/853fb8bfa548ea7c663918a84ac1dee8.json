{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tile/tile';\nimport { css } from '@patternfly/react-styles';\nexport const Tile = _a => {\n  var {\n    children,\n    title,\n    icon,\n    isStacked,\n    isSelected,\n    isDisabled,\n    isDisplayLarge,\n    className\n  } = _a,\n      props = __rest(_a, [\"children\", \"title\", \"icon\", \"isStacked\", \"isSelected\", \"isDisabled\", \"isDisplayLarge\", \"className\"]);\n\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.tile, isSelected && styles.modifiers.selected, isDisabled && styles.modifiers.disabled, isDisplayLarge && styles.modifiers.displayLg, className),\n    tabIndex: 0\n  }, props), React.createElement(\"div\", {\n    className: css(styles.tileHeader, isStacked && styles.modifiers.stacked)\n  }, icon && React.createElement(\"div\", {\n    className: css(styles.tileIcon)\n  }, icon), React.createElement(\"div\", {\n    className: css(styles.tileTitle)\n  }, title)), children && React.createElement(\"div\", {\n    className: css(styles.tileBody)\n  }, children));\n};\nTile.displayName = 'Tile';","map":{"version":3,"sources":["../../../../src/components/Tile/Tile.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,mDAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AAqBA,OAAO,MAAM,IAAI,GAAwC,EAAD,IAUxC;MAVyC;AACvD,IAAA,QADuD;AAEvD,IAAA,KAFuD;AAGvD,IAAA,IAHuD;AAIvD,IAAA,SAJuD;AAKvD,IAAA,UALuD;AAMvD,IAAA,UANuD;AAOvD,IAAA,cAPuD;AAQvD,IAAA;AARuD,MAQ9C,E;MACN,KAAK,GAAA,MAAA,CAAA,EAAA,EAT+C,CAAA,UAAA,EAAA,OAAA,EAAA,MAAA,EAAA,WAAA,EAAA,YAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,WAAA,CAS/C,C;;AACO,SACf,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,IADK,EAEZ,UAAU,IAAI,MAAM,CAAC,SAAP,CAAiB,QAFnB,EAGZ,UAAU,IAAI,MAAM,CAAC,SAAP,CAAiB,QAHnB,EAIZ,cAAc,IAAI,MAAM,CAAC,SAAP,CAAiB,SAJvB,EAKZ,SALY,CADhB;AAQE,IAAA,QAAQ,EAAE;AARZ,GAAA,EASM,KATN,CAAA,EAWE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,UAAR,EAAoB,SAAS,IAAI,MAAM,CAAC,SAAP,CAAiB,OAAlD;AAAnB,GAAA,EACG,IAAI,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,QAAR;AAAnB,GAAA,EAAuC,IAAvC,CADX,EAEE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,SAAR;AAAnB,GAAA,EAAwC,KAAxC,CAFF,CAXF,EAeG,QAAQ,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,QAAR;AAAnB,GAAA,EAAuC,QAAvC,CAff,CADe;AAkBhB,CA5BM;AA6BP,IAAI,CAAC,WAAL,GAAmB,MAAnB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tile/tile';\nimport { css } from '@patternfly/react-styles';\nexport const Tile = (_a) => {\n    var { children, title, icon, isStacked, isSelected, isDisabled, isDisplayLarge, className } = _a, props = __rest(_a, [\"children\", \"title\", \"icon\", \"isStacked\", \"isSelected\", \"isDisabled\", \"isDisplayLarge\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.tile, isSelected && styles.modifiers.selected, isDisabled && styles.modifiers.disabled, isDisplayLarge && styles.modifiers.displayLg, className), tabIndex: 0 }, props),\n        React.createElement(\"div\", { className: css(styles.tileHeader, isStacked && styles.modifiers.stacked) },\n            icon && React.createElement(\"div\", { className: css(styles.tileIcon) }, icon),\n            React.createElement(\"div\", { className: css(styles.tileTitle) }, title)),\n        children && React.createElement(\"div\", { className: css(styles.tileBody) }, children)));\n};\nTile.displayName = 'Tile';\n//# sourceMappingURL=Tile.js.map"]},"metadata":{},"sourceType":"module"}