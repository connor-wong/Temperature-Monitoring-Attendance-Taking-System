{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\nexport class ContextSelectorMenuList extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.refsCollection = [];\n\n    this.sendRef = (index, ref) => {\n      this.refsCollection[index] = ref;\n    };\n\n    this.render = () => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const _a = this.props,\n            {\n        className,\n        isOpen,\n        children\n      } = _a,\n            props = __rest(_a, [\"className\", \"isOpen\", \"children\"]);\n\n      return React.createElement(\"ul\", Object.assign({\n        className: css(styles.contextSelectorMenuList, className),\n        hidden: !isOpen,\n        role: \"menu\"\n      }, props), this.extendChildren());\n    };\n  }\n\n  extendChildren() {\n    return React.Children.map(this.props.children, (child, index) => React.cloneElement(child, {\n      sendRef: this.sendRef,\n      index\n    }));\n  }\n\n}\nContextSelectorMenuList.displayName = 'ContextSelectorMenuList';\nContextSelectorMenuList.defaultProps = {\n  children: null,\n  className: '',\n  isOpen: true\n};","map":{"version":3,"sources":["../../../../src/components/ContextSelector/ContextSelectorMenuList.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,0EAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AAWA,OAAM,MAAO,uBAAP,SAAuC,KAAK,CAAC,SAA7C,CAAoF;AAA1F,EAAA,WAAA,GAAA;;AAQE,SAAA,cAAA,GAAiB,EAAjB;;AAEA,SAAA,OAAA,GAAU,CAAC,KAAD,EAAgB,GAAhB,KAA4B;AACpC,WAAK,cAAL,CAAoB,KAApB,IAA6B,GAA7B;AACD,KAFD;;AAaA,SAAA,MAAA,GAAS,MAAK;AACZ;AACA,YAAM,EAAA,GAA4C,KAAK,KAAvD;AAAA,YAAM;AAAE,QAAA,SAAF;AAAa,QAAA,MAAb;AAAqB,QAAA;AAArB,UAA6B,EAAnC;AAAA,YAAwC,KAAK,GAAA,MAAA,CAAA,EAAA,EAAvC,CAAA,WAAA,EAAA,QAAA,EAAA,UAAA,CAAuC,CAA7C;;AACA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAI,QAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,uBAAR,EAAiC,SAAjC,CAAlB;AAA+D,QAAA,MAAM,EAAE,CAAC,MAAxE;AAAgF,QAAA,IAAI,EAAC;AAArF,OAAA,EAAgG,KAAhG,CAAA,EACG,KAAK,cAAL,EADH,CADF;AAKD,KARD;AASD;;AAlBC,EAAA,cAAc,GAAA;AACZ,WAAO,KAAK,CAAC,QAAN,CAAe,GAAf,CAAmB,KAAK,KAAL,CAAW,QAA9B,EAAwC,CAAC,KAAD,EAAQ,KAAR,KAC7C,KAAK,CAAC,YAAN,CAAmB,KAAnB,EAAqD;AACnD,MAAA,OAAO,EAAE,KAAK,OADqC;AAEnD,MAAA;AAFmD,KAArD,CADK,CAAP;AAMD;;AArBuF;AACjF,uBAAA,CAAA,WAAA,GAAc,yBAAd;AACA,uBAAA,CAAA,YAAA,GAA6C;AAClD,EAAA,QAAQ,EAAE,IADwC;AAElD,EAAA,SAAS,EAAE,EAFuC;AAGlD,EAAA,MAAM,EAAE;AAH0C,CAA7C","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\nexport class ContextSelectorMenuList extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.refsCollection = [];\n        this.sendRef = (index, ref) => {\n            this.refsCollection[index] = ref;\n        };\n        this.render = () => {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const _a = this.props, { className, isOpen, children } = _a, props = __rest(_a, [\"className\", \"isOpen\", \"children\"]);\n            return (React.createElement(\"ul\", Object.assign({ className: css(styles.contextSelectorMenuList, className), hidden: !isOpen, role: \"menu\" }, props), this.extendChildren()));\n        };\n    }\n    extendChildren() {\n        return React.Children.map(this.props.children, (child, index) => React.cloneElement(child, {\n            sendRef: this.sendRef,\n            index\n        }));\n    }\n}\nContextSelectorMenuList.displayName = 'ContextSelectorMenuList';\nContextSelectorMenuList.defaultProps = {\n    children: null,\n    className: '',\n    isOpen: true\n};\n//# sourceMappingURL=ContextSelectorMenuList.js.map"]},"metadata":{},"sourceType":"module"}