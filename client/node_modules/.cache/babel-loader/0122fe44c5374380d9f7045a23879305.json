{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { AlertIcon } from './AlertIcon';\nimport { capitalize, useOUIAProps } from '../../helpers';\nimport { AlertContext } from './AlertContext';\nimport maxLines from \"@patternfly/react-tokens/dist/esm/c_alert__title_max_lines\";\nimport { Tooltip } from '../Tooltip';\nexport var AlertVariant;\n\n(function (AlertVariant) {\n  AlertVariant[\"success\"] = \"success\";\n  AlertVariant[\"danger\"] = \"danger\";\n  AlertVariant[\"warning\"] = \"warning\";\n  AlertVariant[\"info\"] = \"info\";\n  AlertVariant[\"default\"] = \"default\";\n})(AlertVariant || (AlertVariant = {}));\n\nexport const Alert = _a => {\n  var {\n    variant = AlertVariant.default,\n    isInline = false,\n    isLiveRegion = false,\n    variantLabel = `${capitalize(variant)} alert:`,\n    'aria-label': ariaLabel = `${capitalize(variant)} Alert`,\n    actionClose,\n    actionLinks,\n    title,\n    children = '',\n    className = '',\n    ouiaId,\n    ouiaSafe = true,\n    timeout = false,\n    timeoutAnimation = 3000,\n    onTimeout = () => {},\n    truncateTitle = 0,\n    tooltipPosition,\n    customIcon,\n    onMouseEnter = () => {},\n    onMouseLeave = () => {}\n  } = _a,\n      props = __rest(_a, [\"variant\", \"isInline\", \"isLiveRegion\", \"variantLabel\", 'aria-label', \"actionClose\", \"actionLinks\", \"title\", \"children\", \"className\", \"ouiaId\", \"ouiaSafe\", \"timeout\", \"timeoutAnimation\", \"onTimeout\", \"truncateTitle\", \"tooltipPosition\", \"customIcon\", \"onMouseEnter\", \"onMouseLeave\"]);\n\n  const ouiaProps = useOUIAProps(Alert.displayName, ouiaId, ouiaSafe, variant);\n  const getHeadingContent = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: css(accessibleStyles.screenReader)\n  }, variantLabel), title);\n  const titleRef = React.useRef(null);\n  const divRef = React.useRef();\n  const [isTooltipVisible, setIsTooltipVisible] = useState(false);\n  React.useEffect(() => {\n    if (!titleRef.current || !truncateTitle) {\n      return;\n    }\n\n    titleRef.current.style.setProperty(maxLines.name, truncateTitle.toString());\n    const showTooltip = titleRef.current && titleRef.current.offsetHeight < titleRef.current.scrollHeight;\n\n    if (isTooltipVisible !== showTooltip) {\n      setIsTooltipVisible(showTooltip);\n    }\n  }, [titleRef, truncateTitle, isTooltipVisible]);\n  const [timedOut, setTimedOut] = useState(false);\n  const [timedOutAnimation, setTimedOutAnimation] = useState(true);\n  const [isMouseOver, setIsMouseOver] = useState();\n  const [containsFocus, setContainsFocus] = useState();\n  const dismissed = timedOut && timedOutAnimation && !isMouseOver && !containsFocus;\n  React.useEffect(() => {\n    timeout = timeout === true ? 8000 : Number(timeout);\n\n    if (timeout > 0) {\n      const timer = setTimeout(() => setTimedOut(true), timeout);\n      return () => clearTimeout(timer);\n    }\n  }, []);\n  React.useEffect(() => {\n    const onDocumentFocus = () => {\n      if (divRef.current) {\n        if (divRef.current.contains(document.activeElement)) {\n          setContainsFocus(true);\n          setTimedOutAnimation(false);\n        } else if (containsFocus) {\n          setContainsFocus(false);\n        }\n      }\n    };\n\n    document.addEventListener('focus', onDocumentFocus, true);\n    return () => document.removeEventListener('focus', onDocumentFocus, true);\n  }, [containsFocus]);\n  React.useEffect(() => {\n    if (containsFocus === false || isMouseOver === false) {\n      const timer = setTimeout(() => setTimedOutAnimation(true), timeoutAnimation);\n      return () => clearTimeout(timer);\n    }\n  }, [containsFocus, isMouseOver]);\n  React.useEffect(() => {\n    dismissed && onTimeout();\n  }, [dismissed]);\n\n  const myOnMouseEnter = ev => {\n    setIsMouseOver(true);\n    setTimedOutAnimation(false);\n    onMouseEnter(ev);\n  };\n\n  const myOnMouseLeave = ev => {\n    setIsMouseOver(false);\n    onMouseLeave(ev);\n  };\n\n  if (dismissed) {\n    return null;\n  }\n\n  const Title = React.createElement(\"h4\", Object.assign({}, isTooltipVisible && {\n    tabIndex: 0\n  }, {\n    ref: titleRef,\n    className: css(styles.alertTitle, truncateTitle && styles.modifiers.truncate)\n  }), getHeadingContent);\n  return React.createElement(\"div\", Object.assign({\n    ref: divRef,\n    className: css(styles.alert, isInline && styles.modifiers.inline, styles.modifiers[variant], className),\n    \"aria-label\": ariaLabel\n  }, ouiaProps, isLiveRegion && {\n    'aria-live': 'polite',\n    'aria-atomic': 'false'\n  }, {\n    onMouseEnter: myOnMouseEnter,\n    onMouseLeave: myOnMouseLeave\n  }, props), React.createElement(AlertIcon, {\n    variant: variant,\n    customIcon: customIcon\n  }), isTooltipVisible ? React.createElement(Tooltip, {\n    content: getHeadingContent,\n    position: tooltipPosition\n  }, Title) : Title, actionClose && React.createElement(AlertContext.Provider, {\n    value: {\n      title,\n      variantLabel\n    }\n  }, React.createElement(\"div\", {\n    className: css(styles.alertAction)\n  }, actionClose)), children && React.createElement(\"div\", {\n    className: css(styles.alertDescription)\n  }, children), actionLinks && React.createElement(\"div\", {\n    className: css(styles.alertActionGroup)\n  }, actionLinks));\n};\nAlert.displayName = 'Alert';","map":{"version":3,"sources":["../../../../src/components/Alert/Alert.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { AlertIcon } from './AlertIcon';\nimport { capitalize, useOUIAProps } from '../../helpers';\nimport { AlertContext } from './AlertContext';\nimport maxLines from \"@patternfly/react-tokens/dist/esm/c_alert__title_max_lines\";\nimport { Tooltip } from '../Tooltip';\nexport var AlertVariant;\n(function (AlertVariant) {\n    AlertVariant[\"success\"] = \"success\";\n    AlertVariant[\"danger\"] = \"danger\";\n    AlertVariant[\"warning\"] = \"warning\";\n    AlertVariant[\"info\"] = \"info\";\n    AlertVariant[\"default\"] = \"default\";\n})(AlertVariant || (AlertVariant = {}));\nexport const Alert = (_a) => {\n    var { variant = AlertVariant.default, isInline = false, isLiveRegion = false, variantLabel = `${capitalize(variant)} alert:`, 'aria-label': ariaLabel = `${capitalize(variant)} Alert`, actionClose, actionLinks, title, children = '', className = '', ouiaId, ouiaSafe = true, timeout = false, timeoutAnimation = 3000, onTimeout = () => { }, truncateTitle = 0, tooltipPosition, customIcon, onMouseEnter = () => { }, onMouseLeave = () => { } } = _a, props = __rest(_a, [\"variant\", \"isInline\", \"isLiveRegion\", \"variantLabel\", 'aria-label', \"actionClose\", \"actionLinks\", \"title\", \"children\", \"className\", \"ouiaId\", \"ouiaSafe\", \"timeout\", \"timeoutAnimation\", \"onTimeout\", \"truncateTitle\", \"tooltipPosition\", \"customIcon\", \"onMouseEnter\", \"onMouseLeave\"]);\n    const ouiaProps = useOUIAProps(Alert.displayName, ouiaId, ouiaSafe, variant);\n    const getHeadingContent = (React.createElement(React.Fragment, null,\n        React.createElement(\"span\", { className: css(accessibleStyles.screenReader) }, variantLabel),\n        title));\n    const titleRef = React.useRef(null);\n    const divRef = React.useRef();\n    const [isTooltipVisible, setIsTooltipVisible] = useState(false);\n    React.useEffect(() => {\n        if (!titleRef.current || !truncateTitle) {\n            return;\n        }\n        titleRef.current.style.setProperty(maxLines.name, truncateTitle.toString());\n        const showTooltip = titleRef.current && titleRef.current.offsetHeight < titleRef.current.scrollHeight;\n        if (isTooltipVisible !== showTooltip) {\n            setIsTooltipVisible(showTooltip);\n        }\n    }, [titleRef, truncateTitle, isTooltipVisible]);\n    const [timedOut, setTimedOut] = useState(false);\n    const [timedOutAnimation, setTimedOutAnimation] = useState(true);\n    const [isMouseOver, setIsMouseOver] = useState();\n    const [containsFocus, setContainsFocus] = useState();\n    const dismissed = timedOut && timedOutAnimation && !isMouseOver && !containsFocus;\n    React.useEffect(() => {\n        timeout = timeout === true ? 8000 : Number(timeout);\n        if (timeout > 0) {\n            const timer = setTimeout(() => setTimedOut(true), timeout);\n            return () => clearTimeout(timer);\n        }\n    }, []);\n    React.useEffect(() => {\n        const onDocumentFocus = () => {\n            if (divRef.current) {\n                if (divRef.current.contains(document.activeElement)) {\n                    setContainsFocus(true);\n                    setTimedOutAnimation(false);\n                }\n                else if (containsFocus) {\n                    setContainsFocus(false);\n                }\n            }\n        };\n        document.addEventListener('focus', onDocumentFocus, true);\n        return () => document.removeEventListener('focus', onDocumentFocus, true);\n    }, [containsFocus]);\n    React.useEffect(() => {\n        if (containsFocus === false || isMouseOver === false) {\n            const timer = setTimeout(() => setTimedOutAnimation(true), timeoutAnimation);\n            return () => clearTimeout(timer);\n        }\n    }, [containsFocus, isMouseOver]);\n    React.useEffect(() => {\n        dismissed && onTimeout();\n    }, [dismissed]);\n    const myOnMouseEnter = (ev) => {\n        setIsMouseOver(true);\n        setTimedOutAnimation(false);\n        onMouseEnter(ev);\n    };\n    const myOnMouseLeave = (ev) => {\n        setIsMouseOver(false);\n        onMouseLeave(ev);\n    };\n    if (dismissed) {\n        return null;\n    }\n    const Title = (React.createElement(\"h4\", Object.assign({}, (isTooltipVisible && { tabIndex: 0 }), { ref: titleRef, className: css(styles.alertTitle, truncateTitle && styles.modifiers.truncate) }), getHeadingContent));\n    return (React.createElement(\"div\", Object.assign({ ref: divRef, className: css(styles.alert, isInline && styles.modifiers.inline, styles.modifiers[variant], className), \"aria-label\": ariaLabel }, ouiaProps, (isLiveRegion && {\n        'aria-live': 'polite',\n        'aria-atomic': 'false'\n    }), { onMouseEnter: myOnMouseEnter, onMouseLeave: myOnMouseLeave }, props),\n        React.createElement(AlertIcon, { variant: variant, customIcon: customIcon }),\n        isTooltipVisible ? (React.createElement(Tooltip, { content: getHeadingContent, position: tooltipPosition }, Title)) : (Title),\n        actionClose && (React.createElement(AlertContext.Provider, { value: { title, variantLabel } },\n            React.createElement(\"div\", { className: css(styles.alertAction) }, actionClose))),\n        children && React.createElement(\"div\", { className: css(styles.alertDescription) }, children),\n        actionLinks && React.createElement(\"div\", { className: css(styles.alertActionGroup) }, actionLinks)));\n};\nAlert.displayName = 'Alert';\n//# sourceMappingURL=Alert.js.map"]},"metadata":{},"sourceType":"module"}