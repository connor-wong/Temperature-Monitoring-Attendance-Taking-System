{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\client\\\\src\\\\components\\\\Dashboard\\\\SelectedAttendance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Container, Spinner, ListGroup, Button } from \"react-bootstrap\";\nimport CsvDownload from \"react-json-to-csv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SelectedAttendance = date => {\n  _s();\n\n  const selectedDate = date.date;\n  const [isLoading, setIsLoading] = useState(true);\n  const [attendanceList, setAttendanceList] = useState([]);\n  const [selectedClass, setSelectedClass] = useState(\"\");\n  const [absentList, setAbsentList] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    let studentList = [];\n    let absentList;\n\n    const getData = async () => {\n      const response = await fetch(\"/aws/api\").then(res => res.json()); // Get Student Attendance\n\n      const studentArray = await fetch(\"/sheet/student\").then(res => res.json()); // Get Student List\n      // Convert array to object\n\n      studentArray.forEach(res => {\n        studentList.push({\n          Name: res[0],\n          ID: res[1]\n        });\n      });\n      response.sort((a, b) => {\n        // Sort to latest datex\n        return new Date(b.Date) - new Date(a.Date);\n      });\n      const attendance = response.filter((res // Filter Attendance By Selected Date\n      ) => res.Date.includes(selectedDate)); // Filter absent students\n\n      absentList = studentList.filter(({\n        Name: id1\n      }) => !attendance.some(({\n        Name: id2\n      }) => id2 === id1));\n\n      if (mounted) {\n        setSelectedClass(attendance[0].Class);\n        setAttendanceList(attendance);\n        setAbsentList(absentList);\n        setIsLoading(false);\n      }\n    };\n\n    getData();\n    return () => {\n      mounted = false;\n    };\n  }, [selectedDate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"selected-attendance text-center\",\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontWeight: \"bold\",\n              color: \"white\",\n              textAlign: \"left\"\n            },\n            children: selectedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            style: {\n              color: \"white\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                color: \"white\"\n              },\n              children: \"Attended\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), attendanceList.map(student => {\n              return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xl: 8,\n                    lg: 8,\n                    md: 8,\n                    sm: 8,\n                    xs: 8,\n                    style: {\n                      fontWeight: \"bold\",\n                      color: \"#535353\",\n                      textAlign: \"left\"\n                    },\n                    children: student.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xl: 2,\n                    lg: 2,\n                    md: 2,\n                    sm: 2,\n                    xs: 2,\n                    style: {\n                      fontWeight: \"bold\",\n                      color: \"#535353\",\n                      textAlign: \"right\"\n                    },\n                    children: [student.Temperature, \" \\xB0C\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xl: 2,\n                    lg: 2,\n                    md: 2,\n                    sm: 2,\n                    xs: 2,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      children: \"Remove\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }, this)\n              }, student.Name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                color: \"white\",\n                marginTop: \"5px\"\n              },\n              children: \"Absent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), absentList.map(student => {\n              return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xl: 8,\n                    lg: 8,\n                    md: 8,\n                    sm: 8,\n                    xs: 8,\n                    style: {\n                      fontWeight: \"bold\",\n                      color: \"#535353\",\n                      textAlign: \"left\"\n                    },\n                    children: student.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xl: 4,\n                    lg: 4,\n                    md: 4,\n                    sm: 4,\n                    xs: 4,\n                    style: {\n                      fontWeight: \"bold\",\n                      color: \"#535353\",\n                      textAlign: \"right\"\n                    },\n                    children: student.ID\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 23\n                }, this)\n              }, student.Name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(CsvDownload, {\n            data: attendanceList,\n            filename: selectedDate + \" \" + selectedClass + \".csv\",\n            style: {\n              width: \"100%\",\n              backgroundColor: \"white\",\n              color: \"#535353\",\n              fontWeight: \"bold\",\n              marginTop: \"10px\",\n              borderRadius: \"5px\",\n              borderColor: \"#007bff\",\n              padding: \".375rem .75rem\"\n            },\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SelectedAttendance, \"9+Vdo6QfMyazD1NbnoOnGL9rCQ8=\");\n\n_c = SelectedAttendance;\nexport default SelectedAttendance;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedAttendance\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/src/components/Dashboard/SelectedAttendance.js"],"names":["React","useState","useEffect","Row","Col","Container","Spinner","ListGroup","Button","CsvDownload","SelectedAttendance","date","selectedDate","isLoading","setIsLoading","attendanceList","setAttendanceList","selectedClass","setSelectedClass","absentList","setAbsentList","mounted","studentList","getData","response","fetch","then","res","json","studentArray","forEach","push","Name","ID","sort","a","b","Date","attendance","filter","includes","id1","some","id2","Class","fontWeight","color","textAlign","map","student","Temperature","marginTop","width","backgroundColor","borderRadius","borderColor","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Spinner,\r\n  ListGroup,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport CsvDownload from \"react-json-to-csv\";\r\n\r\nconst SelectedAttendance = (date) => {\r\n  const selectedDate = date.date;\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [attendanceList, setAttendanceList] = useState([]);\r\n  const [selectedClass, setSelectedClass] = useState(\"\");\r\n  const [absentList, setAbsentList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    let studentList = [];\r\n    let absentList;\r\n\r\n    const getData = async () => {\r\n      const response = await fetch(\"/aws/api\").then((res) => res.json()); // Get Student Attendance\r\n      const studentArray = await fetch(\"/sheet/student\").then((res) =>\r\n        res.json()\r\n      ); // Get Student List\r\n\r\n      // Convert array to object\r\n      studentArray.forEach((res) => {\r\n        studentList.push({\r\n          Name: res[0],\r\n          ID: res[1],\r\n        });\r\n      });\r\n\r\n      response.sort((a, b) => {\r\n        // Sort to latest datex\r\n        return new Date(b.Date) - new Date(a.Date);\r\n      });\r\n\r\n      const attendance = response.filter(\r\n        (\r\n          res // Filter Attendance By Selected Date\r\n        ) => res.Date.includes(selectedDate)\r\n      );\r\n\r\n      // Filter absent students\r\n      absentList = studentList.filter(\r\n        ({ Name: id1 }) => !attendance.some(({ Name: id2 }) => id2 === id1)\r\n      );\r\n\r\n      if (mounted) {\r\n        setSelectedClass(attendance[0].Class);\r\n        setAttendanceList(attendance);\r\n        setAbsentList(absentList);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    getData();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [selectedDate]);\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"selected-attendance text-center\" fluid>\r\n        <Row>\r\n          <Col>\r\n            <h3\r\n              style={{ fontWeight: \"bold\", color: \"white\", textAlign: \"left\" }}\r\n            >\r\n              {selectedDate}\r\n            </h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {isLoading ? (\r\n              <Spinner animation=\"border\" style={{ color: \"white\" }} />\r\n            ) : (\r\n              <ListGroup>\r\n                <h3 style={{ color: \"white\" }}>Attended</h3>\r\n                {attendanceList.map((student) => {\r\n                  return (\r\n                    <ListGroup.Item key={student.Name}>\r\n                      <Row>\r\n                        <Col\r\n                          xl={8}\r\n                          lg={8}\r\n                          md={8}\r\n                          sm={8}\r\n                          xs={8}\r\n                          style={{\r\n                            fontWeight: \"bold\",\r\n                            color: \"#535353\",\r\n                            textAlign: \"left\",\r\n                          }}\r\n                        >\r\n                          {student.Name}\r\n                        </Col>\r\n                        <Col\r\n                          xl={2}\r\n                          lg={2}\r\n                          md={2}\r\n                          sm={2}\r\n                          xs={2}\r\n                          style={{\r\n                            fontWeight: \"bold\",\r\n                            color: \"#535353\",\r\n                            textAlign: \"right\",\r\n                          }}\r\n                        >\r\n                          {student.Temperature} °C\r\n                        </Col>\r\n                        <Col xl={2} lg={2} md={2} sm={2} xs={2}>\r\n                          <Button>Remove</Button>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  );\r\n                })}\r\n                <h3 style={{ color: \"white\", marginTop: \"5px\" }}>Absent</h3>\r\n                {absentList.map((student) => {\r\n                  return (\r\n                    <ListGroup.Item key={student.Name}>\r\n                      <Row>\r\n                        <Col\r\n                          xl={8}\r\n                          lg={8}\r\n                          md={8}\r\n                          sm={8}\r\n                          xs={8}\r\n                          style={{\r\n                            fontWeight: \"bold\",\r\n                            color: \"#535353\",\r\n                            textAlign: \"left\",\r\n                          }}\r\n                        >\r\n                          {student.Name}\r\n                        </Col>\r\n                        <Col\r\n                          xl={4}\r\n                          lg={4}\r\n                          md={4}\r\n                          sm={4}\r\n                          xs={4}\r\n                          style={{\r\n                            fontWeight: \"bold\",\r\n                            color: \"#535353\",\r\n                            textAlign: \"right\",\r\n                          }}\r\n                        >\r\n                          {student.ID}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  );\r\n                })}\r\n              </ListGroup>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            <CsvDownload\r\n              data={attendanceList}\r\n              filename={selectedDate + \" \" + selectedClass + \".csv\"}\r\n              style={{\r\n                width: \"100%\",\r\n                backgroundColor: \"white\",\r\n                color: \"#535353\",\r\n                fontWeight: \"bold\",\r\n                marginTop: \"10px\",\r\n                borderRadius: \"5px\",\r\n                borderColor: \"#007bff\",\r\n                padding: \".375rem .75rem\",\r\n              }}\r\n            >\r\n              Download\r\n            </CsvDownload>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectedAttendance;\r\n"]},"metadata":{},"sourceType":"module"}