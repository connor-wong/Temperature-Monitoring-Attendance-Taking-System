{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\src\\\\components\\\\Dashboard\\\\Data.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, createContext } from \"react\";\nimport { AccountContext } from \"../Authentication/Account\";\nimport gapi from \"gapi-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Data = () => {\n  _s();\n\n  const {\n    userEmail\n  } = useContext(AccountContext);\n  const [classMetaData, setClassMetaData] = useState([]);\n  const [classArray, setClassArray] = useState([]);\n  const [sheetID, setSheetID] = useState(\"\");\n\n  const handleClientLoad = () => {\n    gapi.load(\"client:auth2\", initClient);\n  };\n\n  const initClient = () => {\n    var CLIENT_ID = \"714844314792-7qpq28p5nb943776gms8rin859iodaua.apps.googleusercontent.com\";\n    var API_KEY = \"AIzaSyDFjwcJ8OuJP24_WCn-bxX1LsJMCSvBsl8\";\n    var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\", \"https://sheets.googleapis.com/$discovery/rest?version=v4\"];\n    var SCOPES = \"https://www.googleapis.com/auth/drive.metadata.readonly https://www.googleapis.com/auth/spreadsheets.readonly\";\n    gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    }).then(() => {\n      //gapi.auth2.getAuthInstance().signIn();\n      //console.log(gapi.auth2.getAuthInstance().isSignedIn.get());\n      getClasses();\n    });\n  };\n\n  const getClasses = () => {\n    var sheetID; // GET SPECIFIC SPREADSHEETID FROM GOOGLE DRIVE\n\n    gapi.client.drive.files.list({\n      q: \"name = \" + \"'\" + userEmail + \"'\" // eslint-disable-line prefer-template\n\n    }).then(response => {\n      sheetID = response.result.files[0].id;\n      setSheetID(sheetID); // GET CLASSES FROM GOOGLE SHEET\n\n      gapi.client.sheets.spreadsheets.get({\n        spreadsheetId: sheetID\n      }).then(response => {\n        setClassMetaData(response.result.sheets);\n      });\n    });\n  };\n\n  const getStudents = () => {\n    var className; // GET STUDENTS FROM EACH CLASS\n\n    classMetaData.map(data => {\n      className = data.properties.title;\n      gapi.client.sheets.spreadsheets.values.get({\n        spreadsheetId: sheetID,\n        range: className\n      }).then(response => {\n        console.log(\" Students: \", response.result.values);\n      });\n    });\n  };\n\n  useEffect(() => {\n    handleClientLoad();\n  }, []);\n  getStudents();\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Data, \"f4uWxfl1gSD+IWbfTwb/g4NbUSc=\");\n\n_c = Data;\nexport default Data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/src/components/Dashboard/Data.js"],"names":["React","useContext","useState","useEffect","createContext","AccountContext","gapi","Data","userEmail","classMetaData","setClassMetaData","classArray","setClassArray","sheetID","setSheetID","handleClientLoad","load","initClient","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","client","init","apiKey","clientId","discoveryDocs","scope","then","getClasses","drive","files","list","q","response","result","id","sheets","spreadsheets","get","spreadsheetId","getStudents","className","map","data","properties","title","values","range","console","log"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, createContext } from \"react\";\r\nimport { AccountContext } from \"../Authentication/Account\";\r\nimport gapi from \"gapi-client\";\r\n\r\nconst Data = () => {\r\n  const { userEmail } = useContext(AccountContext);\r\n  const [classMetaData, setClassMetaData] = useState([]);\r\n  const [classArray, setClassArray] = useState([]);\r\n  const [sheetID, setSheetID] = useState(\"\");\r\n\r\n  const handleClientLoad = () => {\r\n    gapi.load(\"client:auth2\", initClient);\r\n  };\r\n\r\n  const initClient = () => {\r\n    var CLIENT_ID =\r\n      \"714844314792-7qpq28p5nb943776gms8rin859iodaua.apps.googleusercontent.com\";\r\n    var API_KEY = \"AIzaSyDFjwcJ8OuJP24_WCn-bxX1LsJMCSvBsl8\";\r\n\r\n    var DISCOVERY_DOCS = [\r\n      \"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\",\r\n      \"https://sheets.googleapis.com/$discovery/rest?version=v4\",\r\n    ];\r\n    var SCOPES =\r\n      \"https://www.googleapis.com/auth/drive.metadata.readonly https://www.googleapis.com/auth/spreadsheets.readonly\";\r\n\r\n    gapi.client\r\n      .init({\r\n        apiKey: API_KEY,\r\n        clientId: CLIENT_ID,\r\n        discoveryDocs: DISCOVERY_DOCS,\r\n        scope: SCOPES,\r\n      })\r\n      .then(() => {\r\n        //gapi.auth2.getAuthInstance().signIn();\r\n        //console.log(gapi.auth2.getAuthInstance().isSignedIn.get());\r\n        getClasses();\r\n      });\r\n  };\r\n\r\n  const getClasses = () => {\r\n    var sheetID;\r\n\r\n    // GET SPECIFIC SPREADSHEETID FROM GOOGLE DRIVE\r\n    gapi.client.drive.files\r\n      .list({\r\n        q: \"name = \" + \"'\" + userEmail + \"'\", // eslint-disable-line prefer-template\r\n      })\r\n      .then((response) => {\r\n        sheetID = response.result.files[0].id;\r\n        setSheetID(sheetID);\r\n        // GET CLASSES FROM GOOGLE SHEET\r\n        gapi.client.sheets.spreadsheets\r\n          .get({\r\n            spreadsheetId: sheetID,\r\n          })\r\n          .then((response) => {\r\n            setClassMetaData(response.result.sheets);\r\n          });\r\n      });\r\n  };\r\n\r\n  const getStudents = () => {\r\n    var className;\r\n    // GET STUDENTS FROM EACH CLASS\r\n    classMetaData.map((data) => {\r\n      className = data.properties.title;\r\n\r\n      gapi.client.sheets.spreadsheets.values\r\n        .get({\r\n          spreadsheetId: sheetID,\r\n          range: className,\r\n        })\r\n        .then((response) => {\r\n          console.log(\" Students: \", response.result.values);\r\n        });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleClientLoad();\r\n  }, []);\r\n\r\n  getStudents();\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default Data;\r\n"]},"metadata":{},"sourceType":"module"}