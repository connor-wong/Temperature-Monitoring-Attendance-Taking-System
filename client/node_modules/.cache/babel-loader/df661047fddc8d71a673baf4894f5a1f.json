{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nimport { ASTERISK } from '../../helpers/htmlConstants';\nimport { css } from '@patternfly/react-styles';\nimport { ValidatedOptions } from '../../helpers/constants';\nexport const FormGroup = _a => {\n  var {\n    children = null,\n    className = '',\n    label,\n    labelIcon,\n    isRequired = false,\n    validated = 'default',\n    isInline = false,\n    hasNoPaddingTop = false,\n    isStack = false,\n    helperText,\n    isHelperTextBeforeField = false,\n    helperTextInvalid,\n    helperTextIcon,\n    helperTextInvalidIcon,\n    fieldId\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"label\", \"labelIcon\", \"isRequired\", \"validated\", \"isInline\", \"hasNoPaddingTop\", \"isStack\", \"helperText\", \"isHelperTextBeforeField\", \"helperTextInvalid\", \"helperTextIcon\", \"helperTextInvalidIcon\", \"fieldId\"]);\n\n  const validHelperText = typeof helperText !== 'string' ? helperText : React.createElement(\"div\", {\n    className: css(styles.formHelperText, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning),\n    id: `${fieldId}-helper`,\n    \"aria-live\": \"polite\"\n  }, helperTextIcon && React.createElement(\"span\", {\n    className: css(styles.formHelperTextIcon)\n  }, helperTextIcon), helperText);\n  const inValidHelperText = typeof helperTextInvalid !== 'string' ? helperTextInvalid : React.createElement(\"div\", {\n    className: css(styles.formHelperText, styles.modifiers.error),\n    id: `${fieldId}-helper`,\n    \"aria-live\": \"polite\"\n  }, helperTextInvalidIcon && React.createElement(\"span\", {\n    className: css(styles.formHelperTextIcon)\n  }, helperTextInvalidIcon), helperTextInvalid);\n\n  const showValidHelperTxt = validationType => validationType !== ValidatedOptions.error && helperText ? validHelperText : '';\n\n  const helperTextToDisplay = validated === ValidatedOptions.error && helperTextInvalid ? inValidHelperText : showValidHelperTxt(validated);\n  return React.createElement(\"div\", Object.assign({}, props, {\n    className: css(styles.formGroup, className)\n  }), label && React.createElement(\"div\", {\n    className: css(styles.formGroupLabel, hasNoPaddingTop && styles.modifiers.noPaddingTop)\n  }, React.createElement(\"label\", {\n    className: css(styles.formLabel),\n    htmlFor: fieldId\n  }, React.createElement(\"span\", {\n    className: css(styles.formLabelText)\n  }, label), isRequired && React.createElement(\"span\", {\n    className: css(styles.formLabelRequired),\n    \"aria-hidden\": \"true\"\n  }, ' ', ASTERISK)), ' ', React.isValidElement(labelIcon) && labelIcon), React.createElement(\"div\", {\n    className: css(styles.formGroupControl, isInline && styles.modifiers.inline, isStack && styles.modifiers.stack)\n  }, isHelperTextBeforeField && helperTextToDisplay, children, !isHelperTextBeforeField && helperTextToDisplay));\n};\nFormGroup.displayName = 'FormGroup';","map":{"version":3,"sources":["../../../../src/components/Form/FormGroup.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nimport { ASTERISK } from '../../helpers/htmlConstants';\nimport { css } from '@patternfly/react-styles';\nimport { ValidatedOptions } from '../../helpers/constants';\nexport const FormGroup = (_a) => {\n    var { children = null, className = '', label, labelIcon, isRequired = false, validated = 'default', isInline = false, hasNoPaddingTop = false, isStack = false, helperText, isHelperTextBeforeField = false, helperTextInvalid, helperTextIcon, helperTextInvalidIcon, fieldId } = _a, props = __rest(_a, [\"children\", \"className\", \"label\", \"labelIcon\", \"isRequired\", \"validated\", \"isInline\", \"hasNoPaddingTop\", \"isStack\", \"helperText\", \"isHelperTextBeforeField\", \"helperTextInvalid\", \"helperTextIcon\", \"helperTextInvalidIcon\", \"fieldId\"]);\n    const validHelperText = typeof helperText !== 'string' ? (helperText) : (React.createElement(\"div\", { className: css(styles.formHelperText, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning), id: `${fieldId}-helper`, \"aria-live\": \"polite\" },\n        helperTextIcon && React.createElement(\"span\", { className: css(styles.formHelperTextIcon) }, helperTextIcon),\n        helperText));\n    const inValidHelperText = typeof helperTextInvalid !== 'string' ? (helperTextInvalid) : (React.createElement(\"div\", { className: css(styles.formHelperText, styles.modifiers.error), id: `${fieldId}-helper`, \"aria-live\": \"polite\" },\n        helperTextInvalidIcon && React.createElement(\"span\", { className: css(styles.formHelperTextIcon) }, helperTextInvalidIcon),\n        helperTextInvalid));\n    const showValidHelperTxt = (validationType) => validationType !== ValidatedOptions.error && helperText ? validHelperText : '';\n    const helperTextToDisplay = validated === ValidatedOptions.error && helperTextInvalid ? inValidHelperText : showValidHelperTxt(validated);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.formGroup, className) }),\n        label && (React.createElement(\"div\", { className: css(styles.formGroupLabel, hasNoPaddingTop && styles.modifiers.noPaddingTop) },\n            React.createElement(\"label\", { className: css(styles.formLabel), htmlFor: fieldId },\n                React.createElement(\"span\", { className: css(styles.formLabelText) }, label),\n                isRequired && (React.createElement(\"span\", { className: css(styles.formLabelRequired), \"aria-hidden\": \"true\" },\n                    ' ',\n                    ASTERISK))),\n            ' ',\n            React.isValidElement(labelIcon) && labelIcon)),\n        React.createElement(\"div\", { className: css(styles.formGroupControl, isInline && styles.modifiers.inline, isStack && styles.modifiers.stack) },\n            isHelperTextBeforeField && helperTextToDisplay,\n            children,\n            !isHelperTextBeforeField && helperTextToDisplay)));\n};\nFormGroup.displayName = 'FormGroup';\n//# sourceMappingURL=FormGroup.js.map"]},"metadata":{},"sourceType":"module"}