{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport globalBreakpointXl from \"@patternfly/react-tokens/dist/esm/global_breakpoint_xl\";\nimport { debounce } from '../../helpers/util';\nimport { Drawer, DrawerContent, DrawerContentBody, DrawerPanelContent } from '../Drawer';\nimport { PageGroup } from './PageGroup';\nexport var PageLayouts;\n\n(function (PageLayouts) {\n  PageLayouts[\"vertical\"] = \"vertical\";\n  PageLayouts[\"horizontal\"] = \"horizontal\";\n})(PageLayouts || (PageLayouts = {}));\n\nconst PageContext = React.createContext({\n  isManagedSidebar: false,\n  isNavOpen: false,\n  onNavToggle: () => null\n});\nexport const PageContextProvider = PageContext.Provider;\nexport const PageContextConsumer = PageContext.Consumer;\nexport class Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mainRef = React.createRef();\n\n    this.isMobile = () => // eslint-disable-next-line radix\n    window.innerWidth < Number.parseInt(globalBreakpointXl.value, 10);\n\n    this.resize = () => {\n      const {\n        onPageResize\n      } = this.props;\n      const mobileView = this.isMobile();\n\n      if (onPageResize) {\n        onPageResize({\n          mobileView,\n          windowSize: window.innerWidth\n        });\n      }\n\n      if (mobileView !== this.state.mobileView) {\n        this.setState({\n          mobileView\n        });\n      }\n    };\n\n    this.handleResize = debounce(this.resize, 250);\n\n    this.handleMainClick = () => {\n      if (this.isMobile() && this.state.mobileIsNavOpen && this.mainRef.current) {\n        this.setState({\n          mobileIsNavOpen: false\n        });\n      }\n    };\n\n    this.onNavToggleMobile = () => {\n      this.setState(prevState => ({\n        mobileIsNavOpen: !prevState.mobileIsNavOpen\n      }));\n    };\n\n    this.onNavToggleDesktop = () => {\n      this.setState(prevState => ({\n        desktopIsNavOpen: !prevState.desktopIsNavOpen\n      }));\n    };\n\n    const {\n      isManagedSidebar,\n      defaultManagedSidebarIsOpen\n    } = props;\n    const managedSidebarOpen = !isManagedSidebar ? true : defaultManagedSidebarIsOpen;\n    this.state = {\n      desktopIsNavOpen: managedSidebarOpen,\n      mobileIsNavOpen: false,\n      mobileView: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      isManagedSidebar,\n      onPageResize\n    } = this.props;\n\n    if (isManagedSidebar || onPageResize) {\n      window.addEventListener('resize', this.handleResize);\n      const currentRef = this.mainRef.current;\n\n      if (currentRef) {\n        currentRef.addEventListener('mousedown', this.handleMainClick);\n        currentRef.addEventListener('touchstart', this.handleMainClick);\n      } // Initial check if should be shown\n\n\n      this.resize();\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      isManagedSidebar,\n      onPageResize\n    } = this.props;\n\n    if (isManagedSidebar || onPageResize) {\n      window.removeEventListener('resize', this.handleResize);\n      const currentRef = this.mainRef.current;\n\n      if (currentRef) {\n        currentRef.removeEventListener('mousedown', this.handleMainClick);\n        currentRef.removeEventListener('touchstart', this.handleMainClick);\n      }\n    }\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      breadcrumb,\n      isBreadcrumbWidthLimited,\n      className,\n      children,\n      header,\n      sidebar,\n      notificationDrawer,\n      isNotificationDrawerExpanded,\n      onNotificationDrawerExpand,\n      isTertiaryNavWidthLimited,\n      skipToContent,\n      role,\n      mainContainerId,\n      isManagedSidebar,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      defaultManagedSidebarIsOpen,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onPageResize,\n      mainAriaLabel,\n      mainTabIndex,\n      tertiaryNav,\n      isTertiaryNavGrouped,\n      isBreadcrumbGrouped,\n      additionalGroupedContent,\n      groupProps\n    } = _a,\n          rest = __rest(_a, [\"breadcrumb\", \"isBreadcrumbWidthLimited\", \"className\", \"children\", \"header\", \"sidebar\", \"notificationDrawer\", \"isNotificationDrawerExpanded\", \"onNotificationDrawerExpand\", \"isTertiaryNavWidthLimited\", \"skipToContent\", \"role\", \"mainContainerId\", \"isManagedSidebar\", \"defaultManagedSidebarIsOpen\", \"onPageResize\", \"mainAriaLabel\", \"mainTabIndex\", \"tertiaryNav\", \"isTertiaryNavGrouped\", \"isBreadcrumbGrouped\", \"additionalGroupedContent\", \"groupProps\"]);\n\n    const {\n      mobileView,\n      mobileIsNavOpen,\n      desktopIsNavOpen\n    } = this.state;\n    const context = {\n      isManagedSidebar,\n      onNavToggle: mobileView ? this.onNavToggleMobile : this.onNavToggleDesktop,\n      isNavOpen: mobileView ? mobileIsNavOpen : desktopIsNavOpen\n    };\n    let nav = null;\n\n    if (tertiaryNav && isTertiaryNavWidthLimited) {\n      nav = React.createElement(\"div\", {\n        className: css(styles.pageMainNav, styles.modifiers.limitWidth)\n      }, React.createElement(\"div\", {\n        className: css(styles.pageMainBody)\n      }, tertiaryNav));\n    } else if (tertiaryNav) {\n      nav = React.createElement(\"div\", {\n        className: css(styles.pageMainNav)\n      }, tertiaryNav);\n    }\n\n    let crumb = null;\n\n    if (breadcrumb && isBreadcrumbWidthLimited) {\n      crumb = React.createElement(\"section\", {\n        className: css(styles.pageMainBreadcrumb, styles.modifiers.limitWidth)\n      }, React.createElement(\"div\", {\n        className: css(styles.pageMainBody)\n      }, breadcrumb));\n    } else if (breadcrumb) {\n      crumb = React.createElement(\"section\", {\n        className: css(styles.pageMainBreadcrumb)\n      }, breadcrumb);\n    }\n\n    const isGrouped = isTertiaryNavGrouped || isBreadcrumbGrouped || additionalGroupedContent;\n    const group = isGrouped ? React.createElement(PageGroup, Object.assign({}, groupProps), isTertiaryNavGrouped && nav, isBreadcrumbGrouped && crumb, additionalGroupedContent) : null;\n    const main = React.createElement(\"main\", {\n      ref: this.mainRef,\n      role: role,\n      id: mainContainerId,\n      className: css(styles.pageMain),\n      tabIndex: mainTabIndex,\n      \"aria-label\": mainAriaLabel\n    }, group, !isTertiaryNavGrouped && nav, !isBreadcrumbGrouped && crumb, children);\n    const panelContent = React.createElement(DrawerPanelContent, null, notificationDrawer);\n    return React.createElement(PageContextProvider, {\n      value: context\n    }, React.createElement(\"div\", Object.assign({}, rest, {\n      className: css(styles.page, className)\n    }), skipToContent, header, sidebar, notificationDrawer && React.createElement(\"div\", {\n      className: css(styles.pageDrawer)\n    }, React.createElement(Drawer, {\n      isExpanded: isNotificationDrawerExpanded,\n      onExpand: onNotificationDrawerExpand\n    }, React.createElement(DrawerContent, {\n      panelContent: panelContent\n    }, React.createElement(DrawerContentBody, null, main)))), !notificationDrawer && main));\n  }\n\n}\nPage.displayName = 'Page';\nPage.defaultProps = {\n  isManagedSidebar: false,\n  isBreadcrumbWidthLimited: false,\n  defaultManagedSidebarIsOpen: true,\n  onPageResize: () => null,\n  mainTabIndex: -1,\n  isNotificationDrawerExpanded: false,\n  onNotificationDrawerExpand: () => null\n};","map":{"version":3,"sources":["../../../../src/components/Page/Page.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport globalBreakpointXl from \"@patternfly/react-tokens/dist/esm/global_breakpoint_xl\";\nimport { debounce } from '../../helpers/util';\nimport { Drawer, DrawerContent, DrawerContentBody, DrawerPanelContent } from '../Drawer';\nimport { PageGroup } from './PageGroup';\nexport var PageLayouts;\n(function (PageLayouts) {\n    PageLayouts[\"vertical\"] = \"vertical\";\n    PageLayouts[\"horizontal\"] = \"horizontal\";\n})(PageLayouts || (PageLayouts = {}));\nconst PageContext = React.createContext({\n    isManagedSidebar: false,\n    isNavOpen: false,\n    onNavToggle: () => null\n});\nexport const PageContextProvider = PageContext.Provider;\nexport const PageContextConsumer = PageContext.Consumer;\nexport class Page extends React.Component {\n    constructor(props) {\n        super(props);\n        this.mainRef = React.createRef();\n        this.isMobile = () => \n        // eslint-disable-next-line radix\n        window.innerWidth < Number.parseInt(globalBreakpointXl.value, 10);\n        this.resize = () => {\n            const { onPageResize } = this.props;\n            const mobileView = this.isMobile();\n            if (onPageResize) {\n                onPageResize({ mobileView, windowSize: window.innerWidth });\n            }\n            if (mobileView !== this.state.mobileView) {\n                this.setState({ mobileView });\n            }\n        };\n        this.handleResize = debounce(this.resize, 250);\n        this.handleMainClick = () => {\n            if (this.isMobile() && this.state.mobileIsNavOpen && this.mainRef.current) {\n                this.setState({ mobileIsNavOpen: false });\n            }\n        };\n        this.onNavToggleMobile = () => {\n            this.setState(prevState => ({\n                mobileIsNavOpen: !prevState.mobileIsNavOpen\n            }));\n        };\n        this.onNavToggleDesktop = () => {\n            this.setState(prevState => ({\n                desktopIsNavOpen: !prevState.desktopIsNavOpen\n            }));\n        };\n        const { isManagedSidebar, defaultManagedSidebarIsOpen } = props;\n        const managedSidebarOpen = !isManagedSidebar ? true : defaultManagedSidebarIsOpen;\n        this.state = {\n            desktopIsNavOpen: managedSidebarOpen,\n            mobileIsNavOpen: false,\n            mobileView: false\n        };\n    }\n    componentDidMount() {\n        const { isManagedSidebar, onPageResize } = this.props;\n        if (isManagedSidebar || onPageResize) {\n            window.addEventListener('resize', this.handleResize);\n            const currentRef = this.mainRef.current;\n            if (currentRef) {\n                currentRef.addEventListener('mousedown', this.handleMainClick);\n                currentRef.addEventListener('touchstart', this.handleMainClick);\n            }\n            // Initial check if should be shown\n            this.resize();\n        }\n    }\n    componentWillUnmount() {\n        const { isManagedSidebar, onPageResize } = this.props;\n        if (isManagedSidebar || onPageResize) {\n            window.removeEventListener('resize', this.handleResize);\n            const currentRef = this.mainRef.current;\n            if (currentRef) {\n                currentRef.removeEventListener('mousedown', this.handleMainClick);\n                currentRef.removeEventListener('touchstart', this.handleMainClick);\n            }\n        }\n    }\n    render() {\n        const _a = this.props, { breadcrumb, isBreadcrumbWidthLimited, className, children, header, sidebar, notificationDrawer, isNotificationDrawerExpanded, onNotificationDrawerExpand, isTertiaryNavWidthLimited, skipToContent, role, mainContainerId, isManagedSidebar, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        defaultManagedSidebarIsOpen, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onPageResize, mainAriaLabel, mainTabIndex, tertiaryNav, isTertiaryNavGrouped, isBreadcrumbGrouped, additionalGroupedContent, groupProps } = _a, rest = __rest(_a, [\"breadcrumb\", \"isBreadcrumbWidthLimited\", \"className\", \"children\", \"header\", \"sidebar\", \"notificationDrawer\", \"isNotificationDrawerExpanded\", \"onNotificationDrawerExpand\", \"isTertiaryNavWidthLimited\", \"skipToContent\", \"role\", \"mainContainerId\", \"isManagedSidebar\", \"defaultManagedSidebarIsOpen\", \"onPageResize\", \"mainAriaLabel\", \"mainTabIndex\", \"tertiaryNav\", \"isTertiaryNavGrouped\", \"isBreadcrumbGrouped\", \"additionalGroupedContent\", \"groupProps\"]);\n        const { mobileView, mobileIsNavOpen, desktopIsNavOpen } = this.state;\n        const context = {\n            isManagedSidebar,\n            onNavToggle: mobileView ? this.onNavToggleMobile : this.onNavToggleDesktop,\n            isNavOpen: mobileView ? mobileIsNavOpen : desktopIsNavOpen\n        };\n        let nav = null;\n        if (tertiaryNav && isTertiaryNavWidthLimited) {\n            nav = (React.createElement(\"div\", { className: css(styles.pageMainNav, styles.modifiers.limitWidth) },\n                React.createElement(\"div\", { className: css(styles.pageMainBody) }, tertiaryNav)));\n        }\n        else if (tertiaryNav) {\n            nav = React.createElement(\"div\", { className: css(styles.pageMainNav) }, tertiaryNav);\n        }\n        let crumb = null;\n        if (breadcrumb && isBreadcrumbWidthLimited) {\n            crumb = (React.createElement(\"section\", { className: css(styles.pageMainBreadcrumb, styles.modifiers.limitWidth) },\n                React.createElement(\"div\", { className: css(styles.pageMainBody) }, breadcrumb)));\n        }\n        else if (breadcrumb) {\n            crumb = React.createElement(\"section\", { className: css(styles.pageMainBreadcrumb) }, breadcrumb);\n        }\n        const isGrouped = isTertiaryNavGrouped || isBreadcrumbGrouped || additionalGroupedContent;\n        const group = isGrouped ? (React.createElement(PageGroup, Object.assign({}, groupProps),\n            isTertiaryNavGrouped && nav,\n            isBreadcrumbGrouped && crumb,\n            additionalGroupedContent)) : null;\n        const main = (React.createElement(\"main\", { ref: this.mainRef, role: role, id: mainContainerId, className: css(styles.pageMain), tabIndex: mainTabIndex, \"aria-label\": mainAriaLabel },\n            group,\n            !isTertiaryNavGrouped && nav,\n            !isBreadcrumbGrouped && crumb,\n            children));\n        const panelContent = React.createElement(DrawerPanelContent, null, notificationDrawer);\n        return (React.createElement(PageContextProvider, { value: context },\n            React.createElement(\"div\", Object.assign({}, rest, { className: css(styles.page, className) }),\n                skipToContent,\n                header,\n                sidebar,\n                notificationDrawer && (React.createElement(\"div\", { className: css(styles.pageDrawer) },\n                    React.createElement(Drawer, { isExpanded: isNotificationDrawerExpanded, onExpand: onNotificationDrawerExpand },\n                        React.createElement(DrawerContent, { panelContent: panelContent },\n                            React.createElement(DrawerContentBody, null, main))))),\n                !notificationDrawer && main)));\n    }\n}\nPage.displayName = 'Page';\nPage.defaultProps = {\n    isManagedSidebar: false,\n    isBreadcrumbWidthLimited: false,\n    defaultManagedSidebarIsOpen: true,\n    onPageResize: () => null,\n    mainTabIndex: -1,\n    isNotificationDrawerExpanded: false,\n    onNotificationDrawerExpand: () => null\n};\n//# sourceMappingURL=Page.js.map"]},"metadata":{},"sourceType":"module"}