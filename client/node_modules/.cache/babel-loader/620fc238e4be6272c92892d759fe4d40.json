{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/NumberInput/number-input';\nimport { css } from '@patternfly/react-styles';\nimport MinusIcon from \"@patternfly/react-icons/dist/esm/icons/minus-icon\";\nimport PlusIcon from \"@patternfly/react-icons/dist/esm/icons/plus-icon\";\nimport { Button } from '../Button';\nexport const NumberInput = _a => {\n  var {\n    value = 0,\n    className,\n    widthChars,\n    isDisabled = false,\n    onMinus,\n    onChange,\n    onPlus,\n    unit,\n    unitPosition = 'after',\n    min,\n    max,\n    inputName,\n    inputAriaLabel = 'Input',\n    minusBtnAriaLabel = 'Minus',\n    plusBtnAriaLabel = 'Plus',\n    inputProps,\n    minusBtnProps,\n    plusBtnProps\n  } = _a,\n      props = __rest(_a, [\"value\", \"className\", \"widthChars\", \"isDisabled\", \"onMinus\", \"onChange\", \"onPlus\", \"unit\", \"unitPosition\", \"min\", \"max\", \"inputName\", \"inputAriaLabel\", \"minusBtnAriaLabel\", \"plusBtnAriaLabel\", \"inputProps\", \"minusBtnProps\", \"plusBtnProps\"]);\n\n  const numberInputUnit = React.createElement(\"div\", {\n    className: css(styles.numberInputUnit)\n  }, unit);\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.numberInput, className)\n  }, widthChars && {\n    style: Object.assign({\n      '--pf-c-number-input--c-form-control--width-chars': widthChars\n    }, props.style)\n  }, props), unit && unitPosition === 'before' && numberInputUnit, React.createElement(\"div\", {\n    className: css(styles.inputGroup)\n  }, React.createElement(Button, Object.assign({\n    variant: \"control\",\n    \"aria-label\": minusBtnAriaLabel,\n    isDisabled: isDisabled || value === min,\n    onClick: evt => onMinus(evt, inputName)\n  }, minusBtnProps), React.createElement(\"span\", {\n    className: css(styles.numberInputIcon)\n  }, React.createElement(MinusIcon, {\n    \"aria-hidden\": \"true\"\n  }))), React.createElement(\"input\", Object.assign({\n    className: css(styles.formControl),\n    type: \"number\",\n    value: value,\n    name: inputName,\n    \"aria-label\": inputAriaLabel\n  }, isDisabled && {\n    disabled: isDisabled\n  }, onChange && {\n    onChange\n  }, !onChange && {\n    readOnly: true\n  }, inputProps)), React.createElement(Button, Object.assign({\n    variant: \"control\",\n    \"aria-label\": plusBtnAriaLabel,\n    isDisabled: isDisabled || value === max,\n    onClick: evt => onPlus(evt, inputName)\n  }, plusBtnProps), React.createElement(\"span\", {\n    className: css(styles.numberInputIcon)\n  }, React.createElement(PlusIcon, {\n    \"aria-hidden\": \"true\"\n  })))), unit && unitPosition === 'after' && numberInputUnit);\n};\nNumberInput.displayName = 'NumberInput';","map":{"version":3,"sources":["../../../../src/components/NumberInput/NumberInput.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/NumberInput/number-input';\nimport { css } from '@patternfly/react-styles';\nimport MinusIcon from \"@patternfly/react-icons/dist/esm/icons/minus-icon\";\nimport PlusIcon from \"@patternfly/react-icons/dist/esm/icons/plus-icon\";\nimport { Button } from '../Button';\nexport const NumberInput = (_a) => {\n    var { value = 0, className, widthChars, isDisabled = false, onMinus, onChange, onPlus, unit, unitPosition = 'after', min, max, inputName, inputAriaLabel = 'Input', minusBtnAriaLabel = 'Minus', plusBtnAriaLabel = 'Plus', inputProps, minusBtnProps, plusBtnProps } = _a, props = __rest(_a, [\"value\", \"className\", \"widthChars\", \"isDisabled\", \"onMinus\", \"onChange\", \"onPlus\", \"unit\", \"unitPosition\", \"min\", \"max\", \"inputName\", \"inputAriaLabel\", \"minusBtnAriaLabel\", \"plusBtnAriaLabel\", \"inputProps\", \"minusBtnProps\", \"plusBtnProps\"]);\n    const numberInputUnit = React.createElement(\"div\", { className: css(styles.numberInputUnit) }, unit);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.numberInput, className) }, (widthChars && {\n        style: Object.assign({ '--pf-c-number-input--c-form-control--width-chars': widthChars }, props.style)\n    }), props),\n        unit && unitPosition === 'before' && numberInputUnit,\n        React.createElement(\"div\", { className: css(styles.inputGroup) },\n            React.createElement(Button, Object.assign({ variant: \"control\", \"aria-label\": minusBtnAriaLabel, isDisabled: isDisabled || value === min, onClick: evt => onMinus(evt, inputName) }, minusBtnProps),\n                React.createElement(\"span\", { className: css(styles.numberInputIcon) },\n                    React.createElement(MinusIcon, { \"aria-hidden\": \"true\" }))),\n            React.createElement(\"input\", Object.assign({ className: css(styles.formControl), type: \"number\", value: value, name: inputName, \"aria-label\": inputAriaLabel }, (isDisabled && { disabled: isDisabled }), (onChange && { onChange }), (!onChange && { readOnly: true }), inputProps)),\n            React.createElement(Button, Object.assign({ variant: \"control\", \"aria-label\": plusBtnAriaLabel, isDisabled: isDisabled || value === max, onClick: evt => onPlus(evt, inputName) }, plusBtnProps),\n                React.createElement(\"span\", { className: css(styles.numberInputIcon) },\n                    React.createElement(PlusIcon, { \"aria-hidden\": \"true\" })))),\n        unit && unitPosition === 'after' && numberInputUnit));\n};\nNumberInput.displayName = 'NumberInput';\n//# sourceMappingURL=NumberInput.js.map"]},"metadata":{},"sourceType":"module"}