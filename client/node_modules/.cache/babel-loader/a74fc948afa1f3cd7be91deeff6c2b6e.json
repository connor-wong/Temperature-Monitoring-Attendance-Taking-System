{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\client\\\\src\\\\components\\\\Dashboard\\\\StudentMatters\\\\StudentMatters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Container, Toast, Spinner, Button, OverlayTrigger, Popover, ListGroup, ButtonGroup } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StudentMatters = props => {\n  _s();\n\n  const temperatureMatterArray = props.temperatureMatter;\n  const lowAttendanceMatterArray = props.lowAttendanceMatter;\n  const isLoading = props.isLoading;\n  const [absentList, setAbsentList] = useState([]);\n  const [selectedList, setSelectedList] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    let classArray = [];\n    let absentArray = [];\n    let absentList = [];\n\n    const processData = () => {\n      lowAttendanceMatterArray.forEach(student => {\n        classArray.push(student.Class);\n      });\n      classArray = [...new Set(classArray)];\n      classArray.forEach(classTitle => {\n        absentArray = lowAttendanceMatterArray.filter(res => res.Class.includes(classTitle));\n        absentList.push({\n          Class: classTitle,\n          Student: absentArray\n        });\n      });\n\n      if (mounted) {\n        setAbsentList(absentList);\n      }\n    };\n\n    processData();\n    return () => {\n      mounted = false;\n    };\n  }, [lowAttendanceMatterArray]);\n\n  const clickHandler = e => {\n    console.log(e.target.value);\n    let selectedList = [];\n    selectedList = lowAttendanceMatterArray.filter(res => res.Class.includes(e.target.value));\n    setSelectedList(selectedList);\n  };\n\n  const popover = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"500px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Popover, {\n      children: [/*#__PURE__*/_jsxDEV(Popover.Title, {\n        as: \"h3\",\n        style: {\n          fontWeight: \"bold\",\n          color: \"#535353\"\n        },\n        children: \"Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popover.Content, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: selectedList.map((result, index) => {\n            return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xl: 6,\n                  lg: 6,\n                  md: 6,\n                  sm: 6,\n                  xs: 6,\n                  style: {\n                    textAlign: \"left\",\n                    fontWeight: \"bold\",\n                    color: \"#535353\"\n                  },\n                  children: result.Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xl: 6,\n                  lg: 6,\n                  md: 6,\n                  sm: 6,\n                  xs: 6,\n                  style: {\n                    textAlign: \"right\",\n                    fontWeight: \"bold\",\n                    color: \"#535353\"\n                  },\n                  children: result.ID\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"student-matters text-center\",\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: \"white\",\n        textAlign: \"left\"\n      },\n      children: \"Student Matters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xl: 6,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: \"white\",\n            fontSize: \"22px\",\n            textAlign: \"left\"\n          },\n          children: \"High Temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              style: {\n                color: \"white\",\n                marginBottom: \"20px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [temperatureMatterArray.length === 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              color: \"white\"\n            },\n            children: \"No Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this), temperatureMatterArray.length > 0 && /*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              marginBottom: \"10px\"\n            },\n            children: temperatureMatterArray.map((result, index) => {\n              return /*#__PURE__*/_jsxDEV(Col, {\n                xl: 12,\n                lg: 12,\n                md: 12,\n                sm: 12,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Toast, {\n                  style: {\n                    marginBottom: \"5px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      className: \"mr-auto\",\n                      children: result.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: result.Class\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                    style: {\n                      color: \"#535353\",\n                      fontWeight: \"bold\",\n                      textAlign: \"left\"\n                    },\n                    children: [result.Temperature, \" \\xB0C \\u2003 \", result.Date]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xl: 6,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: \"white\",\n            fontSize: \"22px\",\n            textAlign: \"left\"\n          },\n          children: \"Low Attendance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              style: {\n                color: \"white\",\n                marginBottom: \"20px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [absentList.length === 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              color: \"white\"\n            },\n            children: \"No Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this), absentList.length > 0 && /*#__PURE__*/_jsxDEV(Row, {\n            children: absentList.map((result, index) => {\n              return /*#__PURE__*/_jsxDEV(Col, {\n                xl: 12,\n                lg: 12,\n                md: 12,\n                sm: 12,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                  trigger: \"click\",\n                  placement: \"bottom\",\n                  overlay: popover,\n                  children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                    className: \"mb-2\",\n                    style: {\n                      width: \"100%\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      style: {\n                        color: \"#535353\",\n                        backgroundColor: \"white\",\n                        fontWeight: \"bold\",\n                        borderColor: \"white\"\n                      },\n                      value: result.Class,\n                      onClick: e => clickHandler(e),\n                      children: result.Class\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      style: {\n                        color: \"white\",\n                        backgroundColor: \"#fa1e0e\",\n                        fontWeight: \"bold\",\n                        borderColor: \"#fa1e0e\"\n                      },\n                      value: result.Class,\n                      onClick: e => clickHandler(e),\n                      children: [result.Student.length, \" Alerts\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StudentMatters, \"aNo7zpYElYTT0JZuD0tbauXV2PU=\");\n\n_c = StudentMatters;\nexport default StudentMatters;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentMatters\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/src/components/Dashboard/StudentMatters/StudentMatters.js"],"names":["React","useState","useEffect","Row","Col","Container","Toast","Spinner","Button","OverlayTrigger","Popover","ListGroup","ButtonGroup","StudentMatters","props","temperatureMatterArray","temperatureMatter","lowAttendanceMatterArray","lowAttendanceMatter","isLoading","absentList","setAbsentList","selectedList","setSelectedList","mounted","classArray","absentArray","processData","forEach","student","push","Class","Set","classTitle","filter","res","includes","Student","clickHandler","e","console","log","target","value","popover","width","fontWeight","color","map","result","index","textAlign","Name","ID","marginBottom","fontSize","length","Temperature","Date","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Toast,\r\n  Spinner,\r\n  Button,\r\n  OverlayTrigger,\r\n  Popover,\r\n  ListGroup,\r\n  ButtonGroup,\r\n} from \"react-bootstrap\";\r\n\r\nconst StudentMatters = (props) => {\r\n  const temperatureMatterArray = props.temperatureMatter;\r\n  const lowAttendanceMatterArray = props.lowAttendanceMatter;\r\n  const isLoading = props.isLoading;\r\n\r\n  const [absentList, setAbsentList] = useState([]);\r\n  const [selectedList, setSelectedList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    let classArray = [];\r\n    let absentArray = [];\r\n    let absentList = [];\r\n\r\n    const processData = () => {\r\n      lowAttendanceMatterArray.forEach((student) => {\r\n        classArray.push(student.Class);\r\n      });\r\n\r\n      classArray = [...new Set(classArray)];\r\n\r\n      classArray.forEach((classTitle) => {\r\n        absentArray = lowAttendanceMatterArray.filter((res) =>\r\n          res.Class.includes(classTitle)\r\n        );\r\n        absentList.push({\r\n          Class: classTitle,\r\n          Student: absentArray,\r\n        });\r\n      });\r\n\r\n      if (mounted) {\r\n        setAbsentList(absentList);\r\n      }\r\n    };\r\n\r\n    processData();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [lowAttendanceMatterArray]);\r\n\r\n  const clickHandler = (e) => {\r\n    console.log(e.target.value);\r\n    let selectedList = [];\r\n\r\n    selectedList = lowAttendanceMatterArray.filter((res) =>\r\n      res.Class.includes(e.target.value)\r\n    );\r\n\r\n    setSelectedList(selectedList);\r\n  };\r\n\r\n  const popover = (\r\n    <div style={{ width: \"500px\" }}>\r\n      <Popover>\r\n        <Popover.Title as=\"h3\" style={{ fontWeight: \"bold\", color: \"#535353\" }}>\r\n          Students\r\n        </Popover.Title>\r\n        <Popover.Content>\r\n          <ListGroup>\r\n            {selectedList.map((result, index) => {\r\n              return (\r\n                <ListGroup.Item key={index}>\r\n                  <Row>\r\n                    <Col\r\n                      xl={6}\r\n                      lg={6}\r\n                      md={6}\r\n                      sm={6}\r\n                      xs={6}\r\n                      style={{\r\n                        textAlign: \"left\",\r\n                        fontWeight: \"bold\",\r\n                        color: \"#535353\",\r\n                      }}\r\n                    >\r\n                      {result.Name}\r\n                    </Col>\r\n                    <Col\r\n                      xl={6}\r\n                      lg={6}\r\n                      md={6}\r\n                      sm={6}\r\n                      xs={6}\r\n                      style={{\r\n                        textAlign: \"right\",\r\n                        fontWeight: \"bold\",\r\n                        color: \"#535353\",\r\n                      }}\r\n                    >\r\n                      {result.ID}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              );\r\n            })}\r\n          </ListGroup>\r\n        </Popover.Content>\r\n      </Popover>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Container className=\"student-matters text-center\" fluid>\r\n      <h3 style={{ color: \"white\", textAlign: \"left\" }}>Student Matters</h3>\r\n      <Row style={{ marginBottom: \"10px\" }}>\r\n        <Col xl={6} lg={6} md={6} sm={12} xs={12}>\r\n          <h3 style={{ color: \"white\", fontSize: \"22px\", textAlign: \"left\" }}>\r\n            High Temperature\r\n          </h3>\r\n\r\n          {isLoading ? (\r\n            <Row>\r\n              <Col>\r\n                <Spinner\r\n                  animation=\"border\"\r\n                  style={{ color: \"white\", marginBottom: \"20px\" }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          ) : (\r\n            <>\r\n              {temperatureMatterArray.length === 0 && (\r\n                <h3 style={{ color: \"white\" }}>No Data</h3>\r\n              )}\r\n              {temperatureMatterArray.length > 0 && (\r\n                <Row style={{ marginBottom: \"10px\" }}>\r\n                  {temperatureMatterArray.map((result, index) => {\r\n                    return (\r\n                      <Col xl={12} lg={12} md={12} sm={12} xs={12} key={index}>\r\n                        <Toast style={{ marginBottom: \"5px\" }}>\r\n                          <Toast.Header>\r\n                            <strong className=\"mr-auto\">{result.Name}</strong>\r\n                            <strong>{result.Class}</strong>\r\n                          </Toast.Header>\r\n                          <Toast.Body\r\n                            style={{\r\n                              color: \"#535353\",\r\n                              fontWeight: \"bold\",\r\n                              textAlign: \"left\",\r\n                            }}\r\n                          >\r\n                            {result.Temperature} °C &emsp; {result.Date}\r\n                          </Toast.Body>\r\n                        </Toast>\r\n                      </Col>\r\n                    );\r\n                  })}\r\n                </Row>\r\n              )}\r\n            </>\r\n          )}\r\n        </Col>\r\n\r\n        <Col xl={6} lg={6} md={6} sm={12} xs={12}>\r\n          <h3 style={{ color: \"white\", fontSize: \"22px\", textAlign: \"left\" }}>\r\n            Low Attendance\r\n          </h3>\r\n          {isLoading ? (\r\n            <Row>\r\n              <Col>\r\n                <Spinner\r\n                  animation=\"border\"\r\n                  style={{ color: \"white\", marginBottom: \"20px\" }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          ) : (\r\n            <>\r\n              {absentList.length === 0 && (\r\n                <h3 style={{ color: \"white\" }}>No Data</h3>\r\n              )}\r\n              {absentList.length > 0 && (\r\n                <Row>\r\n                  {absentList.map((result, index) => {\r\n                    return (\r\n                      <Col xl={12} lg={12} md={12} sm={12} xs={12} key={index}>\r\n                        <OverlayTrigger\r\n                          trigger=\"click\"\r\n                          placement=\"bottom\"\r\n                          overlay={popover}\r\n                        >\r\n                          <ButtonGroup\r\n                            className=\"mb-2\"\r\n                            style={{ width: \"100%\" }}\r\n                          >\r\n                            <Button\r\n                              style={{\r\n                                color: \"#535353\",\r\n                                backgroundColor: \"white\",\r\n                                fontWeight: \"bold\",\r\n                                borderColor: \"white\",\r\n                              }}\r\n                              value={result.Class}\r\n                              onClick={(e) => clickHandler(e)}\r\n                            >\r\n                              {result.Class}\r\n                            </Button>\r\n                            <Button\r\n                              style={{\r\n                                color: \"white\",\r\n                                backgroundColor: \"#fa1e0e\",\r\n                                fontWeight: \"bold\",\r\n                                borderColor: \"#fa1e0e\",\r\n                              }}\r\n                              value={result.Class}\r\n                              onClick={(e) => clickHandler(e)}\r\n                            >\r\n                              {result.Student.length} Alerts\r\n                            </Button>\r\n                          </ButtonGroup>\r\n                        </OverlayTrigger>\r\n                      </Col>\r\n                    );\r\n                  })}\r\n                </Row>\r\n              )}\r\n            </>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StudentMatters;\r\n"]},"metadata":{},"sourceType":"module"}