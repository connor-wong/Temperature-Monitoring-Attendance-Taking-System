{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { DropdownContext } from './dropdownConstants';\nimport { css } from '@patternfly/react-styles';\nimport { KEY_CODES } from '../../helpers/constants';\nexport class Toggle extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.buttonRef = React.createRef();\n\n    this.componentDidMount = () => {\n      document.addEventListener('mousedown', this.onDocClick);\n      document.addEventListener('touchstart', this.onDocClick);\n      document.addEventListener('keydown', this.onEscPress, {\n        capture: true\n      });\n    };\n\n    this.componentWillUnmount = () => {\n      document.removeEventListener('mousedown', this.onDocClick);\n      document.removeEventListener('touchstart', this.onDocClick);\n      document.removeEventListener('keydown', this.onEscPress, {\n        capture: true\n      });\n    };\n\n    this.onDocClick = event => {\n      const {\n        isOpen,\n        parentRef,\n        onToggle,\n        getMenuRef\n      } = this.props;\n      const menuRef = getMenuRef && getMenuRef();\n      const clickedOnToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);\n      const clickedWithinMenu = menuRef && menuRef.contains && menuRef.contains(event.target);\n\n      if (isOpen && !(clickedOnToggle || clickedWithinMenu)) {\n        onToggle(false, event);\n        this.buttonRef.current.focus();\n      }\n    };\n\n    this.onEscPress = event => {\n      const {\n        parentRef,\n        getMenuRef\n      } = this.props;\n      const keyCode = event.keyCode || event.which;\n      const menuRef = getMenuRef && getMenuRef();\n      const escFromToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);\n      const escFromWithinMenu = menuRef && menuRef.contains && menuRef.contains(event.target);\n\n      if (this.props.isOpen && (keyCode === KEY_CODES.ESCAPE_KEY || event.key === 'Tab') && (escFromToggle || escFromWithinMenu)) {\n        this.props.onToggle(false, event);\n        this.buttonRef.current.focus();\n      }\n    };\n\n    this.onKeyDown = event => {\n      if (event.key === 'Tab' && !this.props.isOpen) {\n        return;\n      }\n\n      if ((event.key === 'Tab' || event.key === 'Enter' || event.key === ' ') && this.props.isOpen) {\n        if (!this.props.bubbleEvent) {\n          event.stopPropagation();\n        }\n\n        event.preventDefault();\n        this.props.onToggle(!this.props.isOpen, event);\n      } else if ((event.key === 'Enter' || event.key === ' ' || event.key === 'ArrowDown') && !this.props.isOpen) {\n        if (!this.props.bubbleEvent) {\n          event.stopPropagation();\n        }\n\n        event.preventDefault();\n        this.props.onToggle(!this.props.isOpen, event);\n        this.props.onEnter();\n      }\n    };\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      className,\n      children,\n      isOpen,\n      isDisabled,\n      isPlain,\n      isPrimary,\n      isSplitButton,\n      onToggle,\n      'aria-haspopup': ariaHasPopup,\n\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      isActive,\n      bubbleEvent,\n      onEnter,\n      parentRef,\n      getMenuRef,\n\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      id,\n      type\n    } = _a,\n          props = __rest(_a, [\"className\", \"children\", \"isOpen\", \"isDisabled\", \"isPlain\", \"isPrimary\", \"isSplitButton\", \"onToggle\", 'aria-haspopup', \"isActive\", \"bubbleEvent\", \"onEnter\", \"parentRef\", \"getMenuRef\", \"id\", \"type\"]);\n\n    return React.createElement(DropdownContext.Consumer, null, ({\n      toggleClass\n    }) => React.createElement(\"button\", Object.assign({}, props, {\n      id: id,\n      ref: this.buttonRef,\n      className: css(isSplitButton ? styles.dropdownToggleButton : toggleClass || styles.dropdownToggle, isActive && styles.modifiers.active, isPlain && styles.modifiers.plain, isPrimary && styles.modifiers.primary, className),\n      type: type || 'button',\n      onClick: event => onToggle(!isOpen, event),\n      \"aria-expanded\": isOpen,\n      \"aria-haspopup\": ariaHasPopup,\n      onKeyDown: event => this.onKeyDown(event),\n      disabled: isDisabled\n    }), children));\n  }\n\n}\nToggle.displayName = 'Toggle';\nToggle.defaultProps = {\n  className: '',\n  isOpen: false,\n  isActive: false,\n  isDisabled: false,\n  isPlain: false,\n  isPrimary: false,\n  isSplitButton: false,\n  onToggle: () => {},\n  onEnter: () => {},\n  bubbleEvent: false\n};","map":{"version":3,"sources":["../../../../src/components/Dropdown/Toggle.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { DropdownContext } from './dropdownConstants';\nimport { css } from '@patternfly/react-styles';\nimport { KEY_CODES } from '../../helpers/constants';\nexport class Toggle extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.buttonRef = React.createRef();\n        this.componentDidMount = () => {\n            document.addEventListener('mousedown', this.onDocClick);\n            document.addEventListener('touchstart', this.onDocClick);\n            document.addEventListener('keydown', this.onEscPress, { capture: true });\n        };\n        this.componentWillUnmount = () => {\n            document.removeEventListener('mousedown', this.onDocClick);\n            document.removeEventListener('touchstart', this.onDocClick);\n            document.removeEventListener('keydown', this.onEscPress, { capture: true });\n        };\n        this.onDocClick = (event) => {\n            const { isOpen, parentRef, onToggle, getMenuRef } = this.props;\n            const menuRef = getMenuRef && getMenuRef();\n            const clickedOnToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);\n            const clickedWithinMenu = menuRef && menuRef.contains && menuRef.contains(event.target);\n            if (isOpen && !(clickedOnToggle || clickedWithinMenu)) {\n                onToggle(false, event);\n                this.buttonRef.current.focus();\n            }\n        };\n        this.onEscPress = (event) => {\n            const { parentRef, getMenuRef } = this.props;\n            const keyCode = event.keyCode || event.which;\n            const menuRef = getMenuRef && getMenuRef();\n            const escFromToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);\n            const escFromWithinMenu = menuRef && menuRef.contains && menuRef.contains(event.target);\n            if (this.props.isOpen &&\n                (keyCode === KEY_CODES.ESCAPE_KEY || event.key === 'Tab') &&\n                (escFromToggle || escFromWithinMenu)) {\n                this.props.onToggle(false, event);\n                this.buttonRef.current.focus();\n            }\n        };\n        this.onKeyDown = (event) => {\n            if (event.key === 'Tab' && !this.props.isOpen) {\n                return;\n            }\n            if ((event.key === 'Tab' || event.key === 'Enter' || event.key === ' ') && this.props.isOpen) {\n                if (!this.props.bubbleEvent) {\n                    event.stopPropagation();\n                }\n                event.preventDefault();\n                this.props.onToggle(!this.props.isOpen, event);\n            }\n            else if ((event.key === 'Enter' || event.key === ' ' || event.key === 'ArrowDown') && !this.props.isOpen) {\n                if (!this.props.bubbleEvent) {\n                    event.stopPropagation();\n                }\n                event.preventDefault();\n                this.props.onToggle(!this.props.isOpen, event);\n                this.props.onEnter();\n            }\n        };\n    }\n    render() {\n        const _a = this.props, { className, children, isOpen, isDisabled, isPlain, isPrimary, isSplitButton, onToggle, 'aria-haspopup': ariaHasPopup, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        isActive, bubbleEvent, onEnter, parentRef, getMenuRef, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        id, type } = _a, props = __rest(_a, [\"className\", \"children\", \"isOpen\", \"isDisabled\", \"isPlain\", \"isPrimary\", \"isSplitButton\", \"onToggle\", 'aria-haspopup', \"isActive\", \"bubbleEvent\", \"onEnter\", \"parentRef\", \"getMenuRef\", \"id\", \"type\"]);\n        return (React.createElement(DropdownContext.Consumer, null, ({ toggleClass }) => (React.createElement(\"button\", Object.assign({}, props, { id: id, ref: this.buttonRef, className: css(isSplitButton ? styles.dropdownToggleButton : toggleClass || styles.dropdownToggle, isActive && styles.modifiers.active, isPlain && styles.modifiers.plain, isPrimary && styles.modifiers.primary, className), type: type || 'button', onClick: event => onToggle(!isOpen, event), \"aria-expanded\": isOpen, \"aria-haspopup\": ariaHasPopup, onKeyDown: event => this.onKeyDown(event), disabled: isDisabled }), children))));\n    }\n}\nToggle.displayName = 'Toggle';\nToggle.defaultProps = {\n    className: '',\n    isOpen: false,\n    isActive: false,\n    isDisabled: false,\n    isPlain: false,\n    isPrimary: false,\n    isSplitButton: false,\n    onToggle: () => { },\n    onEnter: () => { },\n    bubbleEvent: false\n};\n//# sourceMappingURL=Toggle.js.map"]},"metadata":{},"sourceType":"module"}