{"ast":null,"code":"var convertedVapidKey=urlBase64ToUint8Array(process.env.REACT_APP_PUBLIC_VAPID_KEY);function urlBase64ToUint8Array(base64String){var padding=\"=\".repeat((4-base64String.length%4)%4);// eslint-disable-next-line\nvar base64=(base64String+padding).replace(/\\-/g,\"+\").replace(/_/g,\"/\");var rawData=window.atob(base64);var outputArray=new Uint8Array(rawData.length);for(var i=0;i<rawData.length;++i){outputArray[i]=rawData.charCodeAt(i);}return outputArray;}function sendSubscription(subscription){console.log(JSON.stringify(subscription));return fetch(\"/notifications/subscribe\",{method:\"POST\",body:JSON.stringify(subscription),headers:{\"Content-Type\":\"application/json\"}});}export function subscribeUser(){if(\"serviceWorker\"in navigator){navigator.serviceWorker.ready.then(function(registration){if(!registration.pushManager){console.log(\"Push manager unavailable.\");return;}registration.pushManager.getSubscription().then(function(existedSubscription){if(existedSubscription===null){console.log(\"No subscription detected, make a request.\");registration.pushManager.subscribe({applicationServerKey:convertedVapidKey,userVisibleOnly:true}).then(function(newSubscription){console.log(\"New subscription added.\");sendSubscription(newSubscription);}).catch(function(e){if(Notification.permission!==\"granted\"){console.log(\"Permission was not granted.\");}else{console.error(\"An error ocurred during the subscription process.\",e);}});}else{console.log(\"Existed subscription detected.\");sendSubscription(existedSubscription);}});}).catch(function(e){console.error(\"An error ocurred during Service Worker registration.\",e);});}}","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/src/subscription.js"],"names":["convertedVapidKey","urlBase64ToUint8Array","process","env","REACT_APP_PUBLIC_VAPID_KEY","base64String","padding","repeat","length","base64","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","sendSubscription","subscription","console","log","JSON","stringify","fetch","method","body","headers","subscribeUser","navigator","serviceWorker","ready","then","registration","pushManager","getSubscription","existedSubscription","subscribe","applicationServerKey","userVisibleOnly","newSubscription","catch","e","Notification","permission","error"],"mappings":"AAAA,GAAMA,CAAAA,iBAAiB,CAAGC,qBAAqB,CAC7CC,OAAO,CAACC,GAAR,CAAYC,0BADiC,CAA/C,CAIA,QAASH,CAAAA,qBAAT,CAA+BI,YAA/B,CAA6C,CAC3C,GAAMC,CAAAA,OAAO,CAAG,IAAIC,MAAJ,CAAW,CAAC,EAAKF,YAAY,CAACG,MAAb,CAAsB,CAA5B,EAAkC,CAA7C,CAAhB,CACA;AACA,GAAMC,CAAAA,MAAM,CAAG,CAACJ,YAAY,CAAGC,OAAhB,EACZI,OADY,CACJ,KADI,CACG,GADH,EAEZA,OAFY,CAEJ,IAFI,CAEE,GAFF,CAAf,CAIA,GAAMC,CAAAA,OAAO,CAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,CAAhB,CACA,GAAMK,CAAAA,WAAW,CAAG,GAAIC,CAAAA,UAAJ,CAAeJ,OAAO,CAACH,MAAvB,CAApB,CAEA,IAAK,GAAIQ,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGL,OAAO,CAACH,MAA5B,CAAoC,EAAEQ,CAAtC,CAAyC,CACvCF,WAAW,CAACE,CAAD,CAAX,CAAiBL,OAAO,CAACM,UAAR,CAAmBD,CAAnB,CAAjB,CACD,CACD,MAAOF,CAAAA,WAAP,CACD,CAED,QAASI,CAAAA,gBAAT,CAA0BC,YAA1B,CAAwC,CACtCC,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,YAAf,CAAZ,EACA,MAAOK,CAAAA,KAAK,CAAC,0BAAD,CAA6B,CACvCC,MAAM,CAAE,MAD+B,CAEvCC,IAAI,CAAEJ,IAAI,CAACC,SAAL,CAAeJ,YAAf,CAFiC,CAGvCQ,OAAO,CAAE,CACP,eAAgB,kBADT,CAH8B,CAA7B,CAAZ,CAOD,CAED,MAAO,SAASC,CAAAA,aAAT,EAAyB,CAC9B,GAAI,iBAAmBC,CAAAA,SAAvB,CAAkC,CAChCA,SAAS,CAACC,aAAV,CAAwBC,KAAxB,CACGC,IADH,CACQ,SAAUC,YAAV,CAAwB,CAC5B,GAAI,CAACA,YAAY,CAACC,WAAlB,CAA+B,CAC7Bd,OAAO,CAACC,GAAR,CAAY,2BAAZ,EACA,OACD,CAEDY,YAAY,CAACC,WAAb,CACGC,eADH,GAEGH,IAFH,CAEQ,SAAUI,mBAAV,CAA+B,CACnC,GAAIA,mBAAmB,GAAK,IAA5B,CAAkC,CAChChB,OAAO,CAACC,GAAR,CAAY,2CAAZ,EACAY,YAAY,CAACC,WAAb,CACGG,SADH,CACa,CACTC,oBAAoB,CAAEtC,iBADb,CAETuC,eAAe,CAAE,IAFR,CADb,EAKGP,IALH,CAKQ,SAAUQ,eAAV,CAA2B,CAC/BpB,OAAO,CAACC,GAAR,CAAY,yBAAZ,EACAH,gBAAgB,CAACsB,eAAD,CAAhB,CACD,CARH,EASGC,KATH,CASS,SAAUC,CAAV,CAAa,CAClB,GAAIC,YAAY,CAACC,UAAb,GAA4B,SAAhC,CAA2C,CACzCxB,OAAO,CAACC,GAAR,CAAY,6BAAZ,EACD,CAFD,IAEO,CACLD,OAAO,CAACyB,KAAR,CACE,mDADF,CAEEH,CAFF,EAID,CACF,CAlBH,EAmBD,CArBD,IAqBO,CACLtB,OAAO,CAACC,GAAR,CAAY,gCAAZ,EACAH,gBAAgB,CAACkB,mBAAD,CAAhB,CACD,CACF,CA5BH,EA6BD,CApCH,EAqCGK,KArCH,CAqCS,SAAUC,CAAV,CAAa,CAClBtB,OAAO,CAACyB,KAAR,CACE,sDADF,CAEEH,CAFF,EAID,CA1CH,EA2CD,CACF","sourcesContent":["const convertedVapidKey = urlBase64ToUint8Array(\r\n  process.env.REACT_APP_PUBLIC_VAPID_KEY\r\n);\r\n\r\nfunction urlBase64ToUint8Array(base64String) {\r\n  const padding = \"=\".repeat((4 - (base64String.length % 4)) % 4);\r\n  // eslint-disable-next-line\r\n  const base64 = (base64String + padding)\r\n    .replace(/\\-/g, \"+\")\r\n    .replace(/_/g, \"/\");\r\n\r\n  const rawData = window.atob(base64);\r\n  const outputArray = new Uint8Array(rawData.length);\r\n\r\n  for (let i = 0; i < rawData.length; ++i) {\r\n    outputArray[i] = rawData.charCodeAt(i);\r\n  }\r\n  return outputArray;\r\n}\r\n\r\nfunction sendSubscription(subscription) {\r\n  console.log(JSON.stringify(subscription));\r\n  return fetch(\"/notifications/subscribe\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(subscription),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n}\r\n\r\nexport function subscribeUser() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(function (registration) {\r\n        if (!registration.pushManager) {\r\n          console.log(\"Push manager unavailable.\");\r\n          return;\r\n        }\r\n\r\n        registration.pushManager\r\n          .getSubscription()\r\n          .then(function (existedSubscription) {\r\n            if (existedSubscription === null) {\r\n              console.log(\"No subscription detected, make a request.\");\r\n              registration.pushManager\r\n                .subscribe({\r\n                  applicationServerKey: convertedVapidKey,\r\n                  userVisibleOnly: true,\r\n                })\r\n                .then(function (newSubscription) {\r\n                  console.log(\"New subscription added.\");\r\n                  sendSubscription(newSubscription);\r\n                })\r\n                .catch(function (e) {\r\n                  if (Notification.permission !== \"granted\") {\r\n                    console.log(\"Permission was not granted.\");\r\n                  } else {\r\n                    console.error(\r\n                      \"An error ocurred during the subscription process.\",\r\n                      e\r\n                    );\r\n                  }\r\n                });\r\n            } else {\r\n              console.log(\"Existed subscription detected.\");\r\n              sendSubscription(existedSubscription);\r\n            }\r\n          });\r\n      })\r\n      .catch(function (e) {\r\n        console.error(\r\n          \"An error ocurred during Service Worker registration.\",\r\n          e\r\n        );\r\n      });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}