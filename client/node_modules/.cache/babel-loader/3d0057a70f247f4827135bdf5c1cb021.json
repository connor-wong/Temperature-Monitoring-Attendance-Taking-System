{"ast":null,"code":"import * as React from 'react';\nimport progressStyle from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from '../Tooltip';\nimport CheckCircleIcon from \"@patternfly/react-icons/dist/esm/icons/check-circle-icon\";\nimport TimesCircleIcon from \"@patternfly/react-icons/dist/esm/icons/times-circle-icon\";\nimport ExclamationTriangleIcon from \"@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon\";\nimport { ProgressBar } from './ProgressBar';\nexport var ProgressMeasureLocation;\n\n(function (ProgressMeasureLocation) {\n  ProgressMeasureLocation[\"outside\"] = \"outside\";\n  ProgressMeasureLocation[\"inside\"] = \"inside\";\n  ProgressMeasureLocation[\"top\"] = \"top\";\n  ProgressMeasureLocation[\"none\"] = \"none\";\n})(ProgressMeasureLocation || (ProgressMeasureLocation = {}));\n\nexport var ProgressVariant;\n\n(function (ProgressVariant) {\n  ProgressVariant[\"danger\"] = \"danger\";\n  ProgressVariant[\"success\"] = \"success\";\n  ProgressVariant[\"warning\"] = \"warning\";\n})(ProgressVariant || (ProgressVariant = {}));\n\nconst variantToIcon = {\n  danger: TimesCircleIcon,\n  success: CheckCircleIcon,\n  warning: ExclamationTriangleIcon\n};\nexport const ProgressContainer = ({\n  progressBarAriaProps,\n  value,\n  title = '',\n  parentId,\n  label = null,\n  variant = null,\n  measureLocation = ProgressMeasureLocation.top,\n  isTitleTruncated = false,\n  tooltipPosition\n}) => {\n  const StatusIcon = variantToIcon.hasOwnProperty(variant) && variantToIcon[variant];\n  const [tooltip, setTooltip] = React.useState('');\n\n  const onMouseEnter = event => {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      setTooltip(title || event.target.innerHTML);\n    } else {\n      setTooltip('');\n    }\n  };\n\n  const Title = React.createElement(\"div\", {\n    className: css(progressStyle.progressDescription, isTitleTruncated && progressStyle.modifiers.truncate),\n    id: `${parentId}-description`,\n    \"aria-hidden\": \"true\",\n    onMouseEnter: isTitleTruncated ? onMouseEnter : null\n  }, title);\n  return React.createElement(React.Fragment, null, tooltip ? React.createElement(Tooltip, {\n    position: tooltipPosition,\n    content: tooltip,\n    isVisible: true\n  }, Title) : Title, React.createElement(\"div\", {\n    className: css(progressStyle.progressStatus),\n    \"aria-hidden\": \"true\"\n  }, (measureLocation === ProgressMeasureLocation.top || measureLocation === ProgressMeasureLocation.outside) && React.createElement(\"span\", {\n    className: css(progressStyle.progressMeasure)\n  }, label || `${value}%`), variantToIcon.hasOwnProperty(variant) && React.createElement(\"span\", {\n    className: css(progressStyle.progressStatusIcon)\n  }, React.createElement(StatusIcon, null))), React.createElement(ProgressBar, {\n    role: \"progressbar\",\n    progressBarAriaProps: progressBarAriaProps,\n    value: value\n  }, measureLocation === ProgressMeasureLocation.inside && `${value}%`));\n};\nProgressContainer.displayName = 'ProgressContainer';","map":{"version":3,"sources":["../../../../src/components/Progress/ProgressContainer.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport progressStyle from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from '../Tooltip';\nimport CheckCircleIcon from \"@patternfly/react-icons/dist/esm/icons/check-circle-icon\";\nimport TimesCircleIcon from \"@patternfly/react-icons/dist/esm/icons/times-circle-icon\";\nimport ExclamationTriangleIcon from \"@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon\";\nimport { ProgressBar } from './ProgressBar';\nexport var ProgressMeasureLocation;\n(function (ProgressMeasureLocation) {\n    ProgressMeasureLocation[\"outside\"] = \"outside\";\n    ProgressMeasureLocation[\"inside\"] = \"inside\";\n    ProgressMeasureLocation[\"top\"] = \"top\";\n    ProgressMeasureLocation[\"none\"] = \"none\";\n})(ProgressMeasureLocation || (ProgressMeasureLocation = {}));\nexport var ProgressVariant;\n(function (ProgressVariant) {\n    ProgressVariant[\"danger\"] = \"danger\";\n    ProgressVariant[\"success\"] = \"success\";\n    ProgressVariant[\"warning\"] = \"warning\";\n})(ProgressVariant || (ProgressVariant = {}));\nconst variantToIcon = {\n    danger: TimesCircleIcon,\n    success: CheckCircleIcon,\n    warning: ExclamationTriangleIcon\n};\nexport const ProgressContainer = ({ progressBarAriaProps, value, title = '', parentId, label = null, variant = null, measureLocation = ProgressMeasureLocation.top, isTitleTruncated = false, tooltipPosition }) => {\n    const StatusIcon = variantToIcon.hasOwnProperty(variant) && variantToIcon[variant];\n    const [tooltip, setTooltip] = React.useState('');\n    const onMouseEnter = (event) => {\n        if (event.target.offsetWidth < event.target.scrollWidth) {\n            setTooltip(title || event.target.innerHTML);\n        }\n        else {\n            setTooltip('');\n        }\n    };\n    const Title = (React.createElement(\"div\", { className: css(progressStyle.progressDescription, isTitleTruncated && progressStyle.modifiers.truncate), id: `${parentId}-description`, \"aria-hidden\": \"true\", onMouseEnter: isTitleTruncated ? onMouseEnter : null }, title));\n    return (React.createElement(React.Fragment, null,\n        tooltip ? (React.createElement(Tooltip, { position: tooltipPosition, content: tooltip, isVisible: true }, Title)) : (Title),\n        React.createElement(\"div\", { className: css(progressStyle.progressStatus), \"aria-hidden\": \"true\" },\n            (measureLocation === ProgressMeasureLocation.top || measureLocation === ProgressMeasureLocation.outside) && (React.createElement(\"span\", { className: css(progressStyle.progressMeasure) }, label || `${value}%`)),\n            variantToIcon.hasOwnProperty(variant) && (React.createElement(\"span\", { className: css(progressStyle.progressStatusIcon) },\n                React.createElement(StatusIcon, null)))),\n        React.createElement(ProgressBar, { role: \"progressbar\", progressBarAriaProps: progressBarAriaProps, value: value }, measureLocation === ProgressMeasureLocation.inside && `${value}%`)));\n};\nProgressContainer.displayName = 'ProgressContainer';\n//# sourceMappingURL=ProgressContainer.js.map"]},"metadata":{},"sourceType":"module"}