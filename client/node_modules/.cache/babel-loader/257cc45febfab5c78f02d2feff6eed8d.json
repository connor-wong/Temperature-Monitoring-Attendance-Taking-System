{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\client\\\\src\\\\components\\\\Dashboard\\\\AttendanceList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Container, ListGroup, Spinner, Button, Form } from \"react-bootstrap\";\nimport CsvDownload from \"react-json-to-csv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AttendanceList = () => {\n  _s();\n\n  const [attendanceArray, setAttendanceArray] = useState([]);\n  const [attendanceList, setAttendanceList] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [showAttendance, setShowAttendance] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [selectedClass, setSelectedClass] = useState(\"\");\n  const [studentList, setstudentList] = useState([]);\n  const [absentList, setAbsentList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [editStatus, setEditStatus] = useState(false);\n  useEffect(() => {\n    let mounted = true;\n    let dateArray = [];\n    let studentList = [];\n\n    const getData = async () => {\n      const response = await fetch(\"/aws/api\").then(res => res.json()); // Get Student Attendance\n\n      const studentArray = await fetch(\"/sheet/student\").then(res => res.json()); // Get Student List\n      // Convert array to object\n\n      studentArray.forEach(res => {\n        studentList.push({\n          Name: res[0],\n          ID: res[1]\n        });\n      });\n      response.sort((a, b) => {\n        // Sort to latest date\n        return new Date(b.Date) - new Date(a.Date);\n      });\n      response.forEach(data => {\n        dateArray.push(data.Date.split(\" \")[0]);\n      });\n      dateArray = [...new Set(dateArray)]; // Remove Duplicates\n\n      if (mounted) {\n        setAttendanceArray(response);\n        setDates(dateArray);\n        setstudentList(studentList);\n        setIsLoading(false);\n      }\n    };\n\n    getData();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const getAttendanceList = date => {\n    let absentList;\n    const selectedDate = date;\n    const attendance = attendanceArray.filter((res // Filter Attendance By Selected Date\n    ) => res.Date.includes(selectedDate)); // Filter absent students\n\n    absentList = studentList.filter(({\n      Name: id1\n    }) => !attendance.some(({\n      Name: id2\n    }) => id2 === id1));\n    setSelectedClass(attendance[0].Class);\n    setSelectedDate(date);\n    setAttendanceList(attendance);\n    setAbsentList(absentList);\n    setShowAttendance(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center attendancelist\",\n      children: showAttendance ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontWeight: \"bold\",\n                color: \"white\",\n                textAlign: \"left\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\"\n              },\n              children: selectedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  color: \"white\"\n                },\n                children: \"Attended\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), attendanceList.map(student => {\n                return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      xl: 6,\n                      lg: 6,\n                      md: 6,\n                      sm: 6,\n                      xs: 6,\n                      style: {\n                        fontWeight: \"bold\",\n                        fontSize: \"calc(0.5rem + 0.6vw)\",\n                        color: \"#535353\",\n                        textAlign: \"left\"\n                      },\n                      children: student.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      xl: 3,\n                      lg: 3,\n                      md: 3,\n                      sm: 3,\n                      xs: 3,\n                      style: {\n                        fontWeight: \"bold\",\n                        fontSize: \"calc(0.5rem + 0.6vw)\",\n                        color: \"#535353\",\n                        textAlign: \"right\"\n                      },\n                      children: [student.Temperature, \" \\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 27\n                    }, this), editStatus === true && /*#__PURE__*/_jsxDEV(Col, {\n                      xl: 3,\n                      lg: 3,\n                      md: 3,\n                      sm: 3,\n                      xs: 3,\n                      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                        type: \"checkbox\",\n                        defaultChecked: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 25\n                  }, this)\n                }, student.Name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 23\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  color: \"white\",\n                  marginTop: \"5px\"\n                },\n                children: \"Absent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this), absentList.map(student => {\n                return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      xl: 6,\n                      lg: 6,\n                      md: 6,\n                      sm: 6,\n                      xs: 6,\n                      style: {\n                        fontWeight: \"bold\",\n                        fontSize: \"calc(0.5rem + 0.6vw)\",\n                        color: \"#535353\",\n                        textAlign: \"left\"\n                      },\n                      children: student.Name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      xl: 3,\n                      lg: 3,\n                      md: 3,\n                      sm: 3,\n                      xs: 3,\n                      style: {\n                        fontWeight: \"bold\",\n                        fontSize: \"calc(0.5rem + 0.6vw)\",\n                        color: \"#535353\",\n                        textAlign: \"right\"\n                      },\n                      children: student.ID\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 27\n                    }, this), editStatus === true && /*#__PURE__*/_jsxDEV(Col, {\n                      xl: 3,\n                      lg: 3,\n                      md: 3,\n                      sm: 3,\n                      xs: 3,\n                      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                        type: \"checkbox\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 25\n                  }, this)\n                }, student.Name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                width: \"100%\",\n                backgroundColor: \"white\",\n                color: \"#535353\",\n                fontWeight: \"bold\",\n                marginTop: \"10px\"\n              },\n              onClick: () => setShowAttendance(false),\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(CsvDownload, {\n              data: attendanceList,\n              filename: selectedDate + \" \" + selectedClass + \".csv\",\n              style: {\n                width: \"100%\",\n                backgroundColor: \"white\",\n                color: \"#535353\",\n                fontWeight: \"bold\",\n                marginTop: \"10px\",\n                borderRadius: \"5px\",\n                borderColor: \"#007bff\",\n                padding: \".375rem .75rem\"\n              },\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontWeight: \"bold\",\n                color: \"white\",\n                textAlign: \"left\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\"\n              },\n              children: \"Attendance List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              style: {\n                color: \"white\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [dates.length === 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  color: \"white\"\n                },\n                children: \"No Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 23\n              }, this), dates.length > 0 && /*#__PURE__*/_jsxDEV(ListGroup, {\n                children: dates.map(date => {\n                  return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    id: date,\n                    action: true,\n                    onClick: e => getAttendanceList(e.target.id),\n                    style: {\n                      fontWeight: \"bold\",\n                      color: \"#535353\"\n                    },\n                    children: date\n                  }, date, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AttendanceList, \"9MmqOfL/+Fu4Ch9s9our3WNLk68=\");\n\n_c = AttendanceList;\nexport default AttendanceList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttendanceList\");","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/src/components/Dashboard/AttendanceList.js"],"names":["React","useState","useEffect","Row","Col","Container","ListGroup","Spinner","Button","Form","CsvDownload","AttendanceList","attendanceArray","setAttendanceArray","attendanceList","setAttendanceList","dates","setDates","showAttendance","setShowAttendance","selectedDate","setSelectedDate","selectedClass","setSelectedClass","studentList","setstudentList","absentList","setAbsentList","isLoading","setIsLoading","editStatus","setEditStatus","mounted","dateArray","getData","response","fetch","then","res","json","studentArray","forEach","push","Name","ID","sort","a","b","Date","data","split","Set","getAttendanceList","date","attendance","filter","includes","id1","some","id2","Class","fontWeight","color","textAlign","marginTop","marginBottom","map","student","fontSize","Temperature","width","backgroundColor","borderRadius","borderColor","padding","length","e","target","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  ListGroup,\r\n  Spinner,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport CsvDownload from \"react-json-to-csv\";\r\n\r\nconst AttendanceList = () => {\r\n  const [attendanceArray, setAttendanceArray] = useState([]);\r\n  const [attendanceList, setAttendanceList] = useState([]);\r\n  const [dates, setDates] = useState([]);\r\n  const [showAttendance, setShowAttendance] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [selectedClass, setSelectedClass] = useState(\"\");\r\n  const [studentList, setstudentList] = useState([]);\r\n  const [absentList, setAbsentList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [editStatus, setEditStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    let dateArray = [];\r\n    let studentList = [];\r\n\r\n    const getData = async () => {\r\n      const response = await fetch(\"/aws/api\").then((res) => res.json()); // Get Student Attendance\r\n      const studentArray = await fetch(\"/sheet/student\").then((res) =>\r\n        res.json()\r\n      ); // Get Student List\r\n\r\n      // Convert array to object\r\n      studentArray.forEach((res) => {\r\n        studentList.push({\r\n          Name: res[0],\r\n          ID: res[1],\r\n        });\r\n      });\r\n\r\n      response.sort((a, b) => {\r\n        // Sort to latest date\r\n        return new Date(b.Date) - new Date(a.Date);\r\n      });\r\n\r\n      response.forEach((data) => {\r\n        dateArray.push(data.Date.split(\" \")[0]);\r\n      });\r\n\r\n      dateArray = [...new Set(dateArray)]; // Remove Duplicates\r\n\r\n      if (mounted) {\r\n        setAttendanceArray(response);\r\n        setDates(dateArray);\r\n        setstudentList(studentList);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    getData();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const getAttendanceList = (date) => {\r\n    let absentList;\r\n    const selectedDate = date;\r\n    const attendance = attendanceArray.filter(\r\n      (\r\n        res // Filter Attendance By Selected Date\r\n      ) => res.Date.includes(selectedDate)\r\n    );\r\n\r\n    // Filter absent students\r\n    absentList = studentList.filter(\r\n      ({ Name: id1 }) => !attendance.some(({ Name: id2 }) => id2 === id1)\r\n    );\r\n\r\n    setSelectedClass(attendance[0].Class);\r\n    setSelectedDate(date);\r\n    setAttendanceList(attendance);\r\n    setAbsentList(absentList);\r\n    setShowAttendance(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"text-center attendancelist\">\r\n        {showAttendance ? (\r\n          <>\r\n            <Row>\r\n              <Col>\r\n                <h3\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\",\r\n                    textAlign: \"left\",\r\n                    marginTop: \"10px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                >\r\n                  {selectedDate}\r\n                </h3>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <ListGroup>\r\n                  <h3 style={{ color: \"white\" }}>Attended</h3>\r\n                  {attendanceList.map((student) => {\r\n                    return (\r\n                      <ListGroup.Item key={student.Name}>\r\n                        <Row>\r\n                          <Col\r\n                            xl={6}\r\n                            lg={6}\r\n                            md={6}\r\n                            sm={6}\r\n                            xs={6}\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              fontSize: \"calc(0.5rem + 0.6vw)\",\r\n                              color: \"#535353\",\r\n                              textAlign: \"left\",\r\n                            }}\r\n                          >\r\n                            {student.Name}\r\n                          </Col>\r\n                          <Col\r\n                            xl={3}\r\n                            lg={3}\r\n                            md={3}\r\n                            sm={3}\r\n                            xs={3}\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              fontSize: \"calc(0.5rem + 0.6vw)\",\r\n                              color: \"#535353\",\r\n                              textAlign: \"right\",\r\n                            }}\r\n                          >\r\n                            {student.Temperature} °C\r\n                          </Col>\r\n                          {editStatus === true && (\r\n                            <Col xl={3} lg={3} md={3} sm={3} xs={3}>\r\n                              <Form.Check type=\"checkbox\" defaultChecked />\r\n                            </Col>\r\n                          )}\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    );\r\n                  })}\r\n                  <h3 style={{ color: \"white\", marginTop: \"5px\" }}>Absent</h3>\r\n                  {absentList.map((student) => {\r\n                    return (\r\n                      <ListGroup.Item key={student.Name}>\r\n                        <Row>\r\n                          <Col\r\n                            xl={6}\r\n                            lg={6}\r\n                            md={6}\r\n                            sm={6}\r\n                            xs={6}\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              fontSize: \"calc(0.5rem + 0.6vw)\",\r\n                              color: \"#535353\",\r\n                              textAlign: \"left\",\r\n                            }}\r\n                          >\r\n                            {student.Name}\r\n                          </Col>\r\n                          <Col\r\n                            xl={3}\r\n                            lg={3}\r\n                            md={3}\r\n                            sm={3}\r\n                            xs={3}\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              fontSize: \"calc(0.5rem + 0.6vw)\",\r\n                              color: \"#535353\",\r\n                              textAlign: \"right\",\r\n                            }}\r\n                          >\r\n                            {student.ID}\r\n                          </Col>\r\n                          {editStatus === true && (\r\n                            <Col xl={3} lg={3} md={3} sm={3} xs={3}>\r\n                              <Form.Check type=\"checkbox\" />\r\n                            </Col>\r\n                          )}\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    );\r\n                  })}\r\n                </ListGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Button\r\n                  style={{\r\n                    width: \"100%\",\r\n                    backgroundColor: \"white\",\r\n                    color: \"#535353\",\r\n                    fontWeight: \"bold\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                  onClick={() => setShowAttendance(false)}\r\n                >\r\n                  Back\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <CsvDownload\r\n                  data={attendanceList}\r\n                  filename={selectedDate + \" \" + selectedClass + \".csv\"}\r\n                  style={{\r\n                    width: \"100%\",\r\n                    backgroundColor: \"white\",\r\n                    color: \"#535353\",\r\n                    fontWeight: \"bold\",\r\n                    marginTop: \"10px\",\r\n                    borderRadius: \"5px\",\r\n                    borderColor: \"#007bff\",\r\n                    padding: \".375rem .75rem\",\r\n                  }}\r\n                >\r\n                  Download\r\n                </CsvDownload>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Row>\r\n              <Col>\r\n                <h3\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\",\r\n                    textAlign: \"left\",\r\n                    marginTop: \"10px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                >\r\n                  Attendance List\r\n                </h3>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                {isLoading ? (\r\n                  <Spinner animation=\"border\" style={{ color: \"white\" }} />\r\n                ) : (\r\n                  <>\r\n                    {dates.length === 0 && (\r\n                      <h3 style={{ color: \"white\" }}>No Data</h3>\r\n                    )}\r\n                    {dates.length > 0 && (\r\n                      <ListGroup>\r\n                        {dates.map((date) => {\r\n                          return (\r\n                            <ListGroup.Item\r\n                              key={date}\r\n                              id={date}\r\n                              action\r\n                              onClick={(e) => getAttendanceList(e.target.id)}\r\n                              style={{ fontWeight: \"bold\", color: \"#535353\" }}\r\n                            >\r\n                              {date}\r\n                            </ListGroup.Item>\r\n                          );\r\n                        })}\r\n                      </ListGroup>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttendanceList;\r\n"]},"metadata":{},"sourceType":"module"}