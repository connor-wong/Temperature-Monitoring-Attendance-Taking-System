{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport { Spinner, spinnerSize } from '../Spinner';\nimport { useOUIAProps } from '../../helpers';\nexport var ButtonVariant;\n\n(function (ButtonVariant) {\n  ButtonVariant[\"primary\"] = \"primary\";\n  ButtonVariant[\"secondary\"] = \"secondary\";\n  ButtonVariant[\"tertiary\"] = \"tertiary\";\n  ButtonVariant[\"danger\"] = \"danger\";\n  ButtonVariant[\"warning\"] = \"warning\";\n  ButtonVariant[\"link\"] = \"link\";\n  ButtonVariant[\"plain\"] = \"plain\";\n  ButtonVariant[\"control\"] = \"control\";\n})(ButtonVariant || (ButtonVariant = {}));\n\nexport var ButtonType;\n\n(function (ButtonType) {\n  ButtonType[\"button\"] = \"button\";\n  ButtonType[\"submit\"] = \"submit\";\n  ButtonType[\"reset\"] = \"reset\";\n})(ButtonType || (ButtonType = {}));\n\nexport const Button = _a => {\n  var {\n    children = null,\n    className = '',\n    component = 'button',\n    isActive = false,\n    isBlock = false,\n    isDisabled = false,\n    isAriaDisabled = false,\n    isLoading = null,\n    spinnerAriaValueText,\n    isSmall = false,\n    isLarge = false,\n    inoperableEvents = ['onClick', 'onKeyPress'],\n    isInline = false,\n    type = ButtonType.button,\n    variant = ButtonVariant.primary,\n    iconPosition = 'left',\n    'aria-label': ariaLabel = null,\n    icon = null,\n    ouiaId,\n    ouiaSafe = true,\n    tabIndex = null\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"component\", \"isActive\", \"isBlock\", \"isDisabled\", \"isAriaDisabled\", \"isLoading\", \"spinnerAriaValueText\", \"isSmall\", \"isLarge\", \"inoperableEvents\", \"isInline\", \"type\", \"variant\", \"iconPosition\", 'aria-label', \"icon\", \"ouiaId\", \"ouiaSafe\", \"tabIndex\"]);\n\n  const ouiaProps = useOUIAProps(Button.displayName, ouiaId, ouiaSafe, variant);\n  const Component = component;\n  const isButtonElement = Component === 'button';\n  const isInlineSpan = isInline && Component === 'span';\n\n  if (isAriaDisabled && process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line no-console\n    console.warn('You are using a beta component feature (isAriaDisabled). These api parts are subject to change in the future.');\n  }\n\n  const preventedEvents = inoperableEvents.reduce((handlers, eventToPrevent) => Object.assign(Object.assign({}, handlers), {\n    [eventToPrevent]: event => {\n      event.preventDefault();\n    }\n  }), {});\n\n  const getDefaultTabIdx = () => {\n    if (isDisabled) {\n      return isButtonElement ? null : -1;\n    } else if (isAriaDisabled) {\n      return null;\n    } else if (isInlineSpan) {\n      return 0;\n    }\n  };\n\n  return React.createElement(Component, Object.assign({}, props, isAriaDisabled ? preventedEvents : null, {\n    \"aria-disabled\": isDisabled || isAriaDisabled,\n    \"aria-label\": ariaLabel,\n    className: css(styles.button, styles.modifiers[variant], isBlock && styles.modifiers.block, isDisabled && styles.modifiers.disabled, isAriaDisabled && styles.modifiers.ariaDisabled, isActive && styles.modifiers.active, isInline && variant === ButtonVariant.link && styles.modifiers.inline, isLoading !== null && styles.modifiers.progress, isLoading && styles.modifiers.inProgress, isSmall && styles.modifiers.small, isLarge && styles.modifiers.displayLg, className),\n    disabled: isButtonElement ? isDisabled : null,\n    tabIndex: tabIndex !== null ? tabIndex : getDefaultTabIdx(),\n    type: isButtonElement || isInlineSpan ? type : null,\n    role: isInlineSpan ? 'button' : null\n  }, ouiaProps), isLoading && React.createElement(\"span\", {\n    className: css(styles.buttonProgress)\n  }, React.createElement(Spinner, {\n    size: spinnerSize.md,\n    \"aria-valuetext\": spinnerAriaValueText\n  })), variant !== ButtonVariant.plain && icon && iconPosition === 'left' && React.createElement(\"span\", {\n    className: css(styles.buttonIcon, styles.modifiers.start)\n  }, icon), children, variant !== ButtonVariant.plain && icon && iconPosition === 'right' && React.createElement(\"span\", {\n    className: css(styles.buttonIcon, styles.modifiers.end)\n  }, icon));\n};\nButton.displayName = 'Button';","map":{"version":3,"sources":["../../../../src/components/Button/Button.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport { Spinner, spinnerSize } from '../Spinner';\nimport { useOUIAProps } from '../../helpers';\nexport var ButtonVariant;\n(function (ButtonVariant) {\n    ButtonVariant[\"primary\"] = \"primary\";\n    ButtonVariant[\"secondary\"] = \"secondary\";\n    ButtonVariant[\"tertiary\"] = \"tertiary\";\n    ButtonVariant[\"danger\"] = \"danger\";\n    ButtonVariant[\"warning\"] = \"warning\";\n    ButtonVariant[\"link\"] = \"link\";\n    ButtonVariant[\"plain\"] = \"plain\";\n    ButtonVariant[\"control\"] = \"control\";\n})(ButtonVariant || (ButtonVariant = {}));\nexport var ButtonType;\n(function (ButtonType) {\n    ButtonType[\"button\"] = \"button\";\n    ButtonType[\"submit\"] = \"submit\";\n    ButtonType[\"reset\"] = \"reset\";\n})(ButtonType || (ButtonType = {}));\nexport const Button = (_a) => {\n    var { children = null, className = '', component = 'button', isActive = false, isBlock = false, isDisabled = false, isAriaDisabled = false, isLoading = null, spinnerAriaValueText, isSmall = false, isLarge = false, inoperableEvents = ['onClick', 'onKeyPress'], isInline = false, type = ButtonType.button, variant = ButtonVariant.primary, iconPosition = 'left', 'aria-label': ariaLabel = null, icon = null, ouiaId, ouiaSafe = true, tabIndex = null } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"isActive\", \"isBlock\", \"isDisabled\", \"isAriaDisabled\", \"isLoading\", \"spinnerAriaValueText\", \"isSmall\", \"isLarge\", \"inoperableEvents\", \"isInline\", \"type\", \"variant\", \"iconPosition\", 'aria-label', \"icon\", \"ouiaId\", \"ouiaSafe\", \"tabIndex\"]);\n    const ouiaProps = useOUIAProps(Button.displayName, ouiaId, ouiaSafe, variant);\n    const Component = component;\n    const isButtonElement = Component === 'button';\n    const isInlineSpan = isInline && Component === 'span';\n    if (isAriaDisabled && process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line no-console\n        console.warn('You are using a beta component feature (isAriaDisabled). These api parts are subject to change in the future.');\n    }\n    const preventedEvents = inoperableEvents.reduce((handlers, eventToPrevent) => (Object.assign(Object.assign({}, handlers), { [eventToPrevent]: (event) => {\n            event.preventDefault();\n        } })), {});\n    const getDefaultTabIdx = () => {\n        if (isDisabled) {\n            return isButtonElement ? null : -1;\n        }\n        else if (isAriaDisabled) {\n            return null;\n        }\n        else if (isInlineSpan) {\n            return 0;\n        }\n    };\n    return (React.createElement(Component, Object.assign({}, props, (isAriaDisabled ? preventedEvents : null), { \"aria-disabled\": isDisabled || isAriaDisabled, \"aria-label\": ariaLabel, className: css(styles.button, styles.modifiers[variant], isBlock && styles.modifiers.block, isDisabled && styles.modifiers.disabled, isAriaDisabled && styles.modifiers.ariaDisabled, isActive && styles.modifiers.active, isInline && variant === ButtonVariant.link && styles.modifiers.inline, isLoading !== null && styles.modifiers.progress, isLoading && styles.modifiers.inProgress, isSmall && styles.modifiers.small, isLarge && styles.modifiers.displayLg, className), disabled: isButtonElement ? isDisabled : null, tabIndex: tabIndex !== null ? tabIndex : getDefaultTabIdx(), type: isButtonElement || isInlineSpan ? type : null, role: isInlineSpan ? 'button' : null }, ouiaProps),\n        isLoading && (React.createElement(\"span\", { className: css(styles.buttonProgress) },\n            React.createElement(Spinner, { size: spinnerSize.md, \"aria-valuetext\": spinnerAriaValueText }))),\n        variant !== ButtonVariant.plain && icon && iconPosition === 'left' && (React.createElement(\"span\", { className: css(styles.buttonIcon, styles.modifiers.start) }, icon)),\n        children,\n        variant !== ButtonVariant.plain && icon && iconPosition === 'right' && (React.createElement(\"span\", { className: css(styles.buttonIcon, styles.modifiers.end) }, icon))));\n};\nButton.displayName = 'Button';\n//# sourceMappingURL=Button.js.map"]},"metadata":{},"sourceType":"module"}