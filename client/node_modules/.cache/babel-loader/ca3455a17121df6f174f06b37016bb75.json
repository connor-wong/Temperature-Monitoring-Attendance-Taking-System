{"ast":null,"code":"import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n/**\n * This component wraps any ReactNode and finds its ref\n * It has to be a class for findDOMNode to work\n * Ideally, all components used as triggers/toggles are either:\n * - class based components we can assign our own ref to\n * - functional components that have forwardRef implemented\n * However, there is no guarantee that is what will get passed in as trigger/toggle in the case of tooltips and popovers\n */\n\nexport class FindRefWrapper extends React.Component {\n  componentDidMount() {\n    // eslint-disable-next-line react/no-find-dom-node\n    const root = ReactDOM.findDOMNode(this);\n    this.props.onFoundRef(root);\n  }\n\n  render() {\n    return this.props.children || null;\n  }\n\n}\nFindRefWrapper.displayName = 'FindRefWrapper';","map":{"version":3,"sources":["../../../../src/helpers/Popper/FindRefWrapper.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAK,QAAZ,MAA0B,WAA1B;AAOA;;;;;;;AAOG;;AACH,OAAM,MAAO,cAAP,SAA8B,KAAK,CAAC,SAApC,CAAkE;AAEtE,EAAA,iBAAiB,GAAA;AACf;AACA,UAAM,IAAI,GAAG,QAAQ,CAAC,WAAT,CAAqB,IAArB,CAAb;AACA,SAAK,KAAL,CAAW,UAAX,CAAsB,IAAtB;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,WAAO,KAAK,KAAL,CAAW,QAAX,IAAuB,IAA9B;AACD;;AAVqE;AAC/D,cAAA,CAAA,WAAA,GAAc,gBAAd","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n/**\n * This component wraps any ReactNode and finds its ref\n * It has to be a class for findDOMNode to work\n * Ideally, all components used as triggers/toggles are either:\n * - class based components we can assign our own ref to\n * - functional components that have forwardRef implemented\n * However, there is no guarantee that is what will get passed in as trigger/toggle in the case of tooltips and popovers\n */\nexport class FindRefWrapper extends React.Component {\n    componentDidMount() {\n        // eslint-disable-next-line react/no-find-dom-node\n        const root = ReactDOM.findDOMNode(this);\n        this.props.onFoundRef(root);\n    }\n    render() {\n        return this.props.children || null;\n    }\n}\nFindRefWrapper.displayName = 'FindRefWrapper';\n//# sourceMappingURL=FindRefWrapper.js.map"]},"metadata":{},"sourceType":"module"}