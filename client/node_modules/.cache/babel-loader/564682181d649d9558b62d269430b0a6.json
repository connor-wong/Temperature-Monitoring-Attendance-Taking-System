{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { InternalFormFieldGroup } from './InternalFormFieldGroup';\nexport const FormFieldGroupExpandable = _a => {\n  var {\n    children,\n    className,\n    header,\n    isExpanded = false,\n    toggleAriaLabel\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"header\", \"isExpanded\", \"toggleAriaLabel\"]);\n\n  const [localIsExpanded, setIsExpanded] = useState(isExpanded);\n  return React.createElement(InternalFormFieldGroup, Object.assign({\n    className: className,\n    header: header,\n    isExpandable: true,\n    isExpanded: localIsExpanded,\n    toggleAriaLabel: toggleAriaLabel,\n    onToggle: () => setIsExpanded(!localIsExpanded)\n  }, props), children);\n};\nFormFieldGroupExpandable.displayName = 'FormFieldGroupExpandable';","map":{"version":3,"sources":["../../../../src/components/Form/FormFieldGroupExpandable.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,QAAT,QAAyB,OAAzB;AACA,SAAS,sBAAT,QAAuC,0BAAvC;AAeA,OAAO,MAAM,wBAAwB,GAA4D,EAAD,IAO5D;MAP6D;AAC/F,IAAA,QAD+F;AAE/F,IAAA,SAF+F;AAG/F,IAAA,MAH+F;AAI/F,IAAA,UAAU,GAAG,KAJkF;AAK/F,IAAA;AAL+F,MAKhF,E;MACZ,KAAK,GAAA,MAAA,CAAA,EAAA,EANuF,CAAA,UAAA,EAAA,WAAA,EAAA,QAAA,EAAA,YAAA,EAAA,iBAAA,CAMvF,C;;AAER,QAAM,CAAC,eAAD,EAAkB,aAAlB,IAAmC,QAAQ,CAAC,UAAD,CAAjD;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,sBAAD,EAAuB,MAAA,CAAA,MAAA,CAAA;AACrB,IAAA,SAAS,EAAE,SADU;AAErB,IAAA,MAAM,EAAE,MAFa;AAGrB,IAAA,YAAY,EAAA,IAHS;AAIrB,IAAA,UAAU,EAAE,eAJS;AAKrB,IAAA,eAAe,EAAE,eALI;AAMrB,IAAA,QAAQ,EAAE,MAAM,aAAa,CAAC,CAAC,eAAF;AANR,GAAA,EAOjB,KAPiB,CAAvB,EASG,QATH,CADF;AAaD,CAvBM;AAwBP,wBAAwB,CAAC,WAAzB,GAAuC,0BAAvC","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { InternalFormFieldGroup } from './InternalFormFieldGroup';\nexport const FormFieldGroupExpandable = (_a) => {\n    var { children, className, header, isExpanded = false, toggleAriaLabel } = _a, props = __rest(_a, [\"children\", \"className\", \"header\", \"isExpanded\", \"toggleAriaLabel\"]);\n    const [localIsExpanded, setIsExpanded] = useState(isExpanded);\n    return (React.createElement(InternalFormFieldGroup, Object.assign({ className: className, header: header, isExpandable: true, isExpanded: localIsExpanded, toggleAriaLabel: toggleAriaLabel, onToggle: () => setIsExpanded(!localIsExpanded) }, props), children));\n};\nFormFieldGroupExpandable.displayName = 'FormFieldGroupExpandable';\n//# sourceMappingURL=FormFieldGroupExpandable.js.map"]},"metadata":{},"sourceType":"module"}