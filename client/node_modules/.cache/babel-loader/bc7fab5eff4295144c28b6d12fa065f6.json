{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nimport { Button } from '../Button';\nexport const FormFieldGroupToggle = _a => {\n  var {\n    className,\n    onToggle,\n    isExpanded,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    toggleId\n  } = _a,\n      props = __rest(_a, [\"className\", \"onToggle\", \"isExpanded\", 'aria-label', 'aria-labelledby', \"toggleId\"]);\n\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.formFieldGroupToggle, className)\n  }, props), React.createElement(\"div\", {\n    className: css(styles.formFieldGroupToggleButton)\n  }, React.createElement(Button, {\n    variant: \"plain\",\n    \"aria-label\": ariaLabel,\n    onClick: onToggle,\n    \"aria-expanded\": isExpanded,\n    \"aria-labelledby\": ariaLabelledby,\n    id: toggleId\n  }, React.createElement(\"span\", {\n    className: css(styles.formFieldGroupToggleIcon)\n  }, React.createElement(AngleRightIcon, {\n    \"aria-hidden\": \"true\"\n  })))));\n};\nFormFieldGroupToggle.displayName = 'FormFieldGroupToggle';","map":{"version":3,"sources":["../../../../src/components/Form/FormFieldGroupToggle.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,mDAAnB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,cAAP,MAAqB,yDAArB;AACA,SAAS,MAAT,QAAuB,WAAvB;AAiBA,OAAO,MAAM,oBAAoB,GAAwD,EAAD,IAQxD;MARyD;AACvF,IAAA,SADuF;AAEvF,IAAA,QAFuF;AAGvF,IAAA,UAHuF;AAIvF,kBAAc,SAJyE;AAKvF,uBAAmB,cALoE;AAMvF,IAAA;AANuF,MAM/E,E;MACL,KAAK,GAAA,MAAA,CAAA,EAAA,EAP+E,CAAA,WAAA,EAAA,UAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,UAAA,CAO/E,C;;AACuB,SAC/B,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,oBAAR,EAA8B,SAA9B;AAAnB,GAAA,EAAiE,KAAjE,CAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,0BAAR;AAAnB,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO;AACL,IAAA,OAAO,EAAC,OADH;AACU,kBACH,SAFP;AAGL,IAAA,OAAO,EAAE,QAHJ;AAGY,qBACF,UAJV;AAIoB,uBACR,cALZ;AAML,IAAA,EAAE,EAAE;AANC,GAAP,EAQE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,wBAAR;AAApB,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;AAAA,mBAAa;AAAb,GAAf,CADF,CARF,CADF,CADF,CAD+B;AAiBhC,CAzBM;AA0BP,oBAAoB,CAAC,WAArB,GAAmC,sBAAnC","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nimport { Button } from '../Button';\nexport const FormFieldGroupToggle = (_a) => {\n    var { className, onToggle, isExpanded, 'aria-label': ariaLabel, 'aria-labelledby': ariaLabelledby, toggleId } = _a, props = __rest(_a, [\"className\", \"onToggle\", \"isExpanded\", 'aria-label', 'aria-labelledby', \"toggleId\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.formFieldGroupToggle, className) }, props),\n        React.createElement(\"div\", { className: css(styles.formFieldGroupToggleButton) },\n            React.createElement(Button, { variant: \"plain\", \"aria-label\": ariaLabel, onClick: onToggle, \"aria-expanded\": isExpanded, \"aria-labelledby\": ariaLabelledby, id: toggleId },\n                React.createElement(\"span\", { className: css(styles.formFieldGroupToggleIcon) },\n                    React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" }))))));\n};\nFormFieldGroupToggle.displayName = 'FormFieldGroupToggle';\n//# sourceMappingURL=FormFieldGroupToggle.js.map"]},"metadata":{},"sourceType":"module"}