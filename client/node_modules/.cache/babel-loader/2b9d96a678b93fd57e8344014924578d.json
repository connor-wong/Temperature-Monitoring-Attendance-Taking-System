{"ast":null,"code":"var _jsxFileName = \"C:\\\\School Stuff\\\\Modules\\\\2021 Sem One\\\\Final Year Project\\\\Temperature Monitoring And Attendance Taking System\\\\Web Interface Prototype\\\\raspitar\\\\client\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Account } from \"./components/Authentication/Account\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(Account, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorkerRegistration.register();\nconst publicVapidKey = \"BE9s9clbXHLdAuHuNmGrOdl5WX2Bq0GFXBIl7LUz5r_ZyuCHQQVvILntryJBSrgLVKydnHM28Ij85HWSx6k1aPE\";\nexport const register = () => {\n  console.log(\"register called\");\n\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.register(\"/worker.js\").then(responseRegister => {\n      console.log(\"register object\", responseRegister);\n      window.registration = responseRegister;\n    }).catch(err => {\n      console.log(\"error is \", err);\n    });\n  }\n};\nexport const unregister = () => {\n  console.log(\"unregister called\");\n\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.getRegistrations().then(function (registrations) {\n      console.log(\"registrations\", registrations);\n\n      for (let registration of registrations) {\n        registration.unregister();\n      }\n    }).catch(function (err) {\n      console.log(\"Service Worker registration failed: \", err);\n    });\n  }\n};\nwindow.self.addEventListener(\"install\", event => {\n  console.log(\"service worker installed\", event);\n});\nwindow.self.addEventListener(\"activate\", event => {\n  console.log(\"service worker activated\", event);\n  console.log(\"window\", window);\n  window.registration.pushManager.subscribe({\n    userVisibleOnly: true,\n    applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n  }).then(subscription => {\n    console.log(\"subscription\", subscription);\n  }).catch(err => {\n    console.log(\"error in subscribing to push\", err);\n  });\n});\nwindow.self.addEventListener(\"push\", e => {\n  const data = e.data.json();\n  console.log(\"Push Recieved...\");\n  window.registration.showNotification(data.title, {\n    body: \"Notified by Traversy Media!\"\n  });\n});\n\nfunction urlBase64ToUint8Array(base64String) {\n  const padding = \"=\".repeat((4 - base64String.length % 4) % 4);\n  const base64 = (base64String + padding).replace(/\\-/g, \"+\").replace(/_/g, \"/\");\n  const rawData = window.atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n}","map":{"version":3,"sources":["C:/School Stuff/Modules/2021 Sem One/Final Year Project/Temperature Monitoring And Attendance Taking System/Web Interface Prototype/raspitar/client/src/index.js"],"names":["React","ReactDOM","App","Account","serviceWorkerRegistration","render","document","getElementById","register","publicVapidKey","console","log","navigator","serviceWorker","then","responseRegister","window","registration","catch","err","unregister","getRegistrations","registrations","self","addEventListener","event","pushManager","subscribe","userVisibleOnly","applicationServerKey","urlBase64ToUint8Array","subscription","e","data","json","showNotification","title","body","base64String","padding","repeat","length","base64","replace","rawData","atob","outputArray","Uint8Array","i","charCodeAt"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Account } from \"./components/Authentication/Account\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <Account>\n    <App />\n  </Account>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n\nconst publicVapidKey =\n  \"BE9s9clbXHLdAuHuNmGrOdl5WX2Bq0GFXBIl7LUz5r_ZyuCHQQVvILntryJBSrgLVKydnHM28Ij85HWSx6k1aPE\";\n\nexport const register = () => {\n  console.log(\"register called\");\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker\n      .register(\"/worker.js\")\n      .then((responseRegister) => {\n        console.log(\"register object\", responseRegister);\n        window.registration = responseRegister;\n      })\n      .catch((err) => {\n        console.log(\"error is \", err);\n      });\n  }\n};\n\nexport const unregister = () => {\n  console.log(\"unregister called\");\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker\n      .getRegistrations()\n      .then(function (registrations) {\n        console.log(\"registrations\", registrations);\n        for (let registration of registrations) {\n          registration.unregister();\n        }\n      })\n      .catch(function (err) {\n        console.log(\"Service Worker registration failed: \", err);\n      });\n  }\n};\n\nwindow.self.addEventListener(\"install\", (event) => {\n  console.log(\"service worker installed\", event);\n});\n\nwindow.self.addEventListener(\"activate\", (event) => {\n  console.log(\"service worker activated\", event);\n\n  console.log(\"window\", window);\n  window.registration.pushManager\n    .subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: urlBase64ToUint8Array(publicVapidKey),\n    })\n    .then((subscription) => {\n      console.log(\"subscription\", subscription);\n    })\n    .catch((err) => {\n      console.log(\"error in subscribing to push\", err);\n    });\n});\n\nwindow.self.addEventListener(\"push\", (e) => {\n  const data = e.data.json();\n  console.log(\"Push Recieved...\");\n  window.registration.showNotification(data.title, {\n    body: \"Notified by Traversy Media!\",\n  });\n});\n\nfunction urlBase64ToUint8Array(base64String) {\n  const padding = \"=\".repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, \"+\")\n    .replace(/_/g, \"/\");\n\n  const rawData = window.atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n"]},"metadata":{},"sourceType":"module"}