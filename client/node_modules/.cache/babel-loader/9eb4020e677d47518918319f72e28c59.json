{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Accordion/accordion';\nimport { AccordionContext } from './AccordionContext';\nexport const AccordionContent = _a => {\n  var {\n    className = '',\n    children = null,\n    id = '',\n    isHidden = false,\n    isFixed = false,\n    'aria-label': ariaLabel = '',\n    component\n  } = _a,\n      props = __rest(_a, [\"className\", \"children\", \"id\", \"isHidden\", \"isFixed\", 'aria-label', \"component\"]);\n\n  return React.createElement(AccordionContext.Consumer, null, ({\n    ContentContainer\n  }) => {\n    const Container = component || ContentContainer;\n    return React.createElement(Container, Object.assign({\n      id: id,\n      className: css(styles.accordionExpandedContent, isFixed && styles.modifiers.fixed, !isHidden && styles.modifiers.expanded, className),\n      hidden: isHidden,\n      \"aria-label\": ariaLabel\n    }, props), React.createElement(\"div\", {\n      className: css(styles.accordionExpandedContentBody)\n    }, children));\n  });\n};\nAccordionContent.displayName = 'AccordionContent';","map":{"version":3,"sources":["../../../../src/components/Accordion/AccordionContent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,OAAO,MAAP,MAAmB,6DAAnB;AACA,SAAS,gBAAT,QAAiC,oBAAjC;AAmBA,OAAO,MAAM,gBAAgB,GAAoD,EAAD,IASpD;MATqD;AAC/E,IAAA,SAAS,GAAG,EADmE;AAE/E,IAAA,QAAQ,GAAG,IAFoE;AAG/E,IAAA,EAAE,GAAG,EAH0E;AAI/E,IAAA,QAAQ,GAAG,KAJoE;AAK/E,IAAA,OAAO,GAAG,KALqE;AAM/E,kBAAc,SAAS,GAAG,EANqD;AAO/E,IAAA;AAP+E,MAOtE,E;MACN,KAAK,GAAA,MAAA,CAAA,EAAA,EARuE,CAAA,WAAA,EAAA,UAAA,EAAA,IAAA,EAAA,UAAA,EAAA,SAAA,EAAA,YAAA,EAAA,WAAA,CAQvE,C;;AACmB,SAC3B,KAAA,CAAA,aAAA,CAAC,gBAAgB,CAAC,QAAlB,EAA0B,IAA1B,EACG,CAAC;AAAE,IAAA;AAAF,GAAD,KAAyB;AACxB,UAAM,SAAS,GAAG,SAAS,IAAI,gBAA/B;AACA,WACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,MAAA,CAAA,MAAA,CAAA;AACR,MAAA,EAAE,EAAE,EADI;AAER,MAAA,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,wBADK,EAEZ,OAAO,IAAI,MAAM,CAAC,SAAP,CAAiB,KAFhB,EAGZ,CAAC,QAAD,IAAa,MAAM,CAAC,SAAP,CAAiB,QAHlB,EAIZ,SAJY,CAFN;AAQR,MAAA,MAAM,EAAE,QARA;AAQQ,oBACJ;AATJ,KAAA,EAUJ,KAVI,CAAV,EAYE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,4BAAR;AAAnB,KAAA,EAA2D,QAA3D,CAZF,CADF;AAgBD,GAnBH,CAD2B;AAsB5B,CA/BM;AAgCP,gBAAgB,CAAC,WAAjB,GAA+B,kBAA/B","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Accordion/accordion';\nimport { AccordionContext } from './AccordionContext';\nexport const AccordionContent = (_a) => {\n    var { className = '', children = null, id = '', isHidden = false, isFixed = false, 'aria-label': ariaLabel = '', component } = _a, props = __rest(_a, [\"className\", \"children\", \"id\", \"isHidden\", \"isFixed\", 'aria-label', \"component\"]);\n    return (React.createElement(AccordionContext.Consumer, null, ({ ContentContainer }) => {\n        const Container = component || ContentContainer;\n        return (React.createElement(Container, Object.assign({ id: id, className: css(styles.accordionExpandedContent, isFixed && styles.modifiers.fixed, !isHidden && styles.modifiers.expanded, className), hidden: isHidden, \"aria-label\": ariaLabel }, props),\n            React.createElement(\"div\", { className: css(styles.accordionExpandedContentBody) }, children)));\n    }));\n};\nAccordionContent.displayName = 'AccordionContent';\n//# sourceMappingURL=AccordionContent.js.map"]},"metadata":{},"sourceType":"module"}